/*1.0.4.7*/ eval([ó="Type.registerNamespace(\"Forms.Ribbon.PageComponent\"),define(\"ribbon\",[],function(){return Forms.Ribbon={},Forms.Ribbon.ribbonTab=function(e,t){var n=\"\";n+=\"<div><div><a href='#' onclick=\\\"alert('\"+t+\"')\\\" ><img src='/_layouts/images/NoteBoard_32x32.png' /></a><br/>Ribbon Example</div></div>\";var r=SP.Ribbon.PageManager.get_instance(),i=r.get_ribbon();i&&this.createTab(i);try{i.removeChild(\"Ribbon.WebPartPage\")}catch(s){}},Forms.Ribbon.createTab=function(e){var t=_spPageContextInfo.webAbsoluteUrl.substring(0,_spPageContextInfo.webAbsoluteUrl.indexOf(_spPageContextInfo.webServerRelativeUrl)),n=t+JSRequest.PathName,r=(n.substring(n.indexOf(\"/Lists/\")+7,n.lastIndexOf(\"/\")),n.substring(0,n.lastIndexOf(\"/\"))+\"/Form/Runtime/formatmap32x32.png?rev23\"),i=new CUI.Tab(e,\"Forms2.Tab\",\"DESIGN\",\"Tab description\",\"Forms.Command.Tab\",!1,\"\",null,null);e.addChild(i),i.set_selected_old=i.set_selected,i.set_selected=function(t){i.set_selected_old(t),$(document).trigger(\"ribbontabselected\",[e.get_selectedTabCommand()])};var s=new CUI.Group(e,\"Forms2.Tab.CommitGroup\",\"Commit\",\"Group Description\",\"Forms.Command.CommitGroup\",null);i.addChild(s);var o=new CUI.Layout(e,\"Sample.Layout\",\"The LayoutA\");s.addChild(o);var u=new CUI.Section(e,\"Sample.Section\",2,\"Top\");o.addChild(u);var a=new CUI.ControlProperties;a.Command=\"Forms.Command.Save\",a.Id=\"Forms2.Save.ControlProperties\",a.TemplateAlias=\"o1\",a.ToolTipDescription=\"Save changes in all opened tabs. Clear history of changes accessible via Undo/Redo commands\",a.Image32by32=r,a.Image32by32Left=\"-305\",a.Image32by32Top=\"-475\",a.ToolTipTitle=\"Save All\",a.LabelText=\"Save All\";var f=new CUI.ControlProperties;f.Command=\"Forms.Command.Cancel\",f.Id=\"Forms2.Cancel.ControlProperties\",f.TemplateAlias=\"o1\",f.ToolTipDescription=\"Cancel any not saved changes and close all opened tabs. Exit design mode and return to default list view.\",f.Image32by32=r,f.Image32by32Left=\"-273\",f.Image32by32Top=\"-510\",f.ToolTipTitle=\"Cancel & Exit Design Mode\",f.LabelText=\"Close\";var l=new CUI.Controls.Button(e,\"Forms2.Tab.CommitGroup.Save\",a),c=new CUI.Controls.Button(e,\"Forms2.Tab.CommitGroup.Cancel\",f),h=l.createComponentForDisplayMode(\"Large\"),p=c.createComponentForDisplayMode(\"Large\"),d=u.getRow(1);d.addChild(h),d.addChild(p),s.selectLayout(\"The LayoutA\");var v=new CUI.Group(e,\"Forms2.Tab.EditGroup\",\"Edit\",\"Group Description\",\"Forms2.Command.EditGroup\",null);i.addChild(v);var m=new CUI.Layout(e,\"Forms2.Tab.EditGroup.Layout\",\"The LayoutE\");v.addChild(m);var g=new CUI.Section(e,\"Forms2.Tab.EditGroup.Section\",2,\"Top\");m.addChild(g);var y=new CUI.ControlProperties;y.Command=\"Forms2.Command.Undo\",y.Id=\"Forms2.Undo.ControlProperties\",y.TemplateAlias=\"o1\",y.ToolTipDescription=\"Undo previous change.\",y.Image32by32=r,y.Image32by32Left=\"-205\",y.Image32by32Top=\"-68\",y.ToolTipTitle=\"Undo\",y.LabelText=\"Undo\";var b=new CUI.ControlProperties;b.Command=\"Forms2.Command.Redo\",b.Id=\"Forms2.Redo.ControlProperties\",b.TemplateAlias=\"o1\",b.ToolTipDescription=\"Redo previous change\",b.Image32by32=r,b.Image32by32Left=\"-205\",b.Image32by32Top=\"-102\",b.ToolTipTitle=\"Redo\",b.LabelText=\"Redo\";var w=new CUI.Controls.Button(e,\"Forms2.Tab.EditGroup.Undo\",y),E=new CUI.Controls.Button(e,\"Forms2.Tab.EditGroup.Redo\",b),S=w.createComponentForDisplayMode(\"Large\"),x=E.createComponentForDisplayMode(\"Large\"),T=g.getRow(1);T.addChild(S),T.addChild(x),v.selectLayout(\"The LayoutE\");var N=new CUI.Group(e,\"Forms2.Tab.GridGroup\",\"Layout\",\"Group Description\",\"Forms.Command.GridGroup\",null);i.addChild(N);var C=new CUI.Layout(e,\"Forms2.Tab.GridGroup.Layout\",\"The LayoutC\");N.addChild(C);var k=new CUI.Section(e,\"Forms2.Tab.GridGroup.Section\",2,\"Top\");C.addChild(k);var L=new CUI.ControlProperties;L.Command=\"Forms.Command.Grid\",L.QueryCommand=\"Forms.Command.QueryGrid\",L.Id=\"Forms2.Grid.ControlProperties\",L.TemplateAlias=\"o1\",L.ToolTipDescription=\"Use this toggle button to show/hide responsive grid editor.\",L.Image32by32=r,L.Image32by32Left=\"-340\",L.Image32by32Top=\"-34\",L.ToolTipTitle=\"Responsive Grid\",L.LabelText=\"Grid\";var A=new CUI.ControlProperties;A.Command=\"Forms.Command.Restore\",A.QueryCommand=\"Forms.Command.QueryRestore\",A.Id=\"Forms2.Restore.ControlProperties\",A.TemplateAlias=\"o1\",A.ToolTipDescription=\"Use this button to initialize form layout or restore from previously saved version in source control.\",A.Image32by32=r,A.Image32by32Left=\"-511\",A.Image32by32Top=\"-475\",A.ToolTipTitle=\"Initialize Form\",A.LabelText=\"Initialize\";var O=new CUI.Controls.ToggleButton(e,\"Forms2.Tab.GrigGroup.Restore\",A),M=O.createComponentForDisplayMode(\"Large\"),_=new CUI.Controls.ToggleButton(e,\"Forms2.Tab.GridGroup.Grid\",L),D=_.createComponentForDisplayMode(\"Large\"),P=k.getRow(1);P.addChild(D),P.addChild(M);var H=new CUI.ControlProperties;H.Command=\"Forms.Command.SelectDevice\",H.QueryCommand=\"Forms.Command.QueryDevices\",H.PopulateQueryCommand=\"Forms.Command.PopulateDevices\",H.PopulateDynamically=\"true\",H.PopulateOnlyOnce=\"true\",H.Id=\"Forms2.Device.ControlProperties\",H.TemplateAlias=\"o1\",H.ToolTipDescription=\"Select targeted form layout as Desktop, Tablet or Phone\",H.Image32by32=r,H.Image32by32Left=\"-71\",H.Image32by32Top=\"-475\",H.ToolTipTitle=\"Device\",H.LabelText=\"Device\";var B=new CUI.ControlProperties;B.Command=\"Forms.Command.SelectDevice\",B.PopulateQueryCommand=\"Forms.Command.PopulateDevices\",B.QueryCommand=\"Forms.Command.QueryDevices\",B.Id=\"Forms2.DevicesDropdownLabel.ControlProperties\",B.TemplateAlias=\"o2\",B.PopulateDynamically=\"true\",B.PopulateOnlyOnce=\"true\",B.Width=\"50px\";var j=new CUI.Controls.FlyoutAnchor(e,\"Forms2.Tab.GridGroup.Device\",H),F=j.createComponentForDisplayMode(\"Large\"),I=new CUI.Controls.DropDown(e,\"Forms2.Tab.GridGroup.DevicesDropdown\",B);I.createComponentForDisplayMode(\"Large\"),P.addChild(F),N.selectLayout(\"The LayoutC\");var q=new CUI.Group(e,\"Forms2.Tab.ComponentsGroup\",\"Publish\",\"Group Description\",\"Forms.Command.ColumnsGroup\",null);i.addChild(q);var R=new CUI.Layout(e,\"Forms2.Tab.ComponentsGroup.Layout\",\"The LayoutB\");q.addChild(R);var U=new CUI.Section(e,\"Forms2.Tab.ComponentsGroup.Section\",2,\"Top\");R.addChild(U);var z=function(){return navigator.appVersion.indexOf(\"MSIE\")>0},W=z()?\"Publish form is not available on Internet Explorer. Please use another web browser.\":\"Publish form and commit new source code release. (Note: if button is disabled, then please refresh web page)\",X=new CUI.ControlProperties;X.Command=\"Forms.Command.Publish\",X.Id=\"Forms2.Publish.ControlProperties\",X.TemplateAlias=\"o1\",X.ToolTipDescription=W,X.Image32by32=r,X.Image32by32Left=\"-409\",X.Image32by32Top=\"-103\",X.ToolTipTitle=\"Publish Form\",X.LabelText=\"Publish\";var V=new CUI.Controls.Button(e,\"Forms2.Tab.CommitGroup.Publish\",X),J=V.createComponentForDisplayMode(\"Large\"),K=U.getRow(1);K.addChild(J),q.selectLayout(\"The LayoutB\");var Q=new CUI.Group(e,\"Forms2_Tab_LicenseGroup\",\"Support\",\"Group Description\",\"Forms.Command.LicenseGroup\",null);i.addChild(Q);var G=new CUI.Layout(e,\"Forms2.Tab.LicenseGroup.Layout\",\"The LayoutD\");Q.addChild(G);var Y=new CUI.Section(e,\"Forms2.Tab.LicenseGroup.Section\",2,\"Top\");G.addChild(Y);var Z=new CUI.ControlProperties;Z.Command=\"Forms.Command.Upgrade\",Z.Id=\"Forms2.Upgrade.ControlProperties\",Z.TemplateAlias=\"o1\",Z.ToolTipDescription=\"Use this button\",Z.Image32by32=r,Z.Image32by32Left=\"-69\",Z.Image32by32Top=\"-307\",Z.ToolTipTitle=\"Upgrade\",Z.LabelText=\"Upgrade\";var et=new CUI.Controls.Button(e,\"Forms2.Tab.LicenseGroup.Upgrade\",Z),tt=et.createComponentForDisplayMode(\"Large\"),nt=Y.getRow(1);nt.addChild(tt),Q.selectLayout(\"The LayoutD\");try{e.removeChild(\"Ribbon.ListForm.Display\")}catch(rt){}try{e.removeChild(\"Ribbon.ListForm.Edit\")}catch(rt){}try{e.removeChild(\"Ribbon.WebPartPage\")}catch(rt){}SelectRibbonTab(\"Forms2.Tab\",!0),document.getElementsByClassName(\"ms-cui-tabContainer\")[0].style.display=\"block\"},Forms.Ribbon.loadRibbon=function(e,t){var n=this;SP.SOD.executeOrDelayUntilScriptLoaded(function(){try{var r=SP.Ribbon.PageManager.get_instance();r.add_ribbonInited(function(){n.ribbonTab(e,t)});var i=null;try{i=r.get_ribbon()}catch(s){}i?n.ribbonTab(e,t):\"function\"==typeof _ribbonStartInit&&_ribbonStartInit(_ribbon.initialTabId,!1,null)}catch(s){}},\"sp.ribbon.js\")},Forms.Ribbon.PageComponent=function(){Forms.Ribbon.PageComponent.initializeBase(this)},Forms.Ribbon.PageComponent.initialize=function(){ExecuteOrDelayUntilScriptLoaded(Function.createDelegate(null,Forms.Ribbon.PageComponent.initializePageComponent),\"SP.Ribbon.js\")},Forms.Ribbon.PageComponent.initializePageComponent=function(){var e=SP.Ribbon.PageManager.get_instance();null!==e&&e.addPageComponent(Forms.Ribbon.PageComponent.instance)},Forms.Ribbon.PageComponent.prototype={init:function(){},receiveFocus:function(){return!0},yieldFocus:function(){return!0},isFocusable:function(){return!0},getFocusedCommands:function(){return[\"Forms.Command.FieldControl.GroupCommand\",\"Forms.Command.FieldControl.TabCommand\",\"Forms.Command.FieldControl.ContextualGroupCommand\",\"Forms.Command.FieldControl.RibbonCommand\"]},getGlobalCommands:function(){return[\"Forms.Command.Tab\",\"Forms.Command.ColumnsGroup\",\"Forms.Command.SelectColumn\",\"Forms.Command.PopulateColumns\",\"Forms.Command.QueryColumns\",\"Forms2.Command.EditGroup\",\"Forms2.Command.Undo\",\"Forms2.Command.Redo\",\"Forms.Command.Create\",\"Forms.Command.Clear\",\"Forms.Command.ComponentsGroup\",\"Forms.Command.Library\",\"Forms.Command.QueryLibrary\",\"Forms.Command.CommitGroup\",\"Forms.Command.Save\",\"Forms.Command.Publish\",\"Forms.Command.Cancel\",\"Forms.Command.LicenseGroup\",\"Forms.Command.Upgrade\",\"Forms.Command.GridGroup\",\"Forms.Command.Grid\",\"Forms.Command.QueryGrid\",\"Forms.Command.Restore\",\"Forms.Command.QueryRestore\",\"Forms.Command.Editor\",\"Forms.Command.QueryEditor\",\"Forms.Command.SelectDevice\",\"Forms.Command.PopulateDevices\",\"Forms.Command.QueryDevices\"]},canHandleCommand:function(e){var t=this.Toolbar;if(!t)return!1;switch(e){case\"Forms.Command.Tab\":return!0;case\"Forms2.Command.EditGroup\":return!0;case\"Forms2.Command.Undo\":return t.enableFormsCommandUndo();case\"Forms2.Command.Redo\":return t.enableFormsCommandRedo();case\"Forms.Command.GridGroup\":return!0;case\"Forms.Command.Grid\":return!0;case\"Forms.Command.QueryGrid\":return!0;case\"Forms.Command.Restore\":return!0;case\"Forms.Command.QueryRestore\":return!0;case\"Forms.Command.Editor\":return!1;case\"Forms.Command.QueryEditor\":return!0;case\"Forms.Command.SelectDevice\":return!0;case\"Forms.Command.PopulateDevices\":return!0;case\"Forms.Command.QueryDevices\":return!0;case\"Forms.Command.ComponentsGroup\":return!0;case\"Forms.Command.Library\":return!0;case\"Forms.Command.QueryLibrary\":return!0;case\"Forms.Command.ColumnsGroup\":return!0;case\"Forms.Command.SelectColumn\":return!0;case\"Forms.Command.PopulateColumns\":return!0;case\"Forms.Command.QueryColumns\":return!0;case\"Forms.Command.Undo\":return!1;case\"Forms.Command.Create\":return!1;case\"Forms.Command.Clear\":return!1;case\"Forms.Command.CommitGroup\":return!0;case\"Forms.Command.Save\":return t.enableFormsCommandSave();case\"Forms.Command.Publish\":return t.enableFormsCommandPublish();case\"Forms.Command.Cancel\":return t.enableFormsCommandCancel();case\"Forms.Command.LicenseGroup\":return!0;case\"Forms.Command.Upgrade\":return!0;default:return!1}return!1},handleCommand:function(e,t,n){var r=this.Toolbar;switch(e){case\"Forms.Command.Grid\":r.actionFormsCommandGrid(t.On);break;case\"Forms.Command.QueryGrid\":t[CUI.Controls.ToggleButtonCommandProperties.On]=r.queryFormsCommandGrid();break;case\"Forms.Command.Restore\":r.actionFormsCommandRestore(t.On);break;case\"Forms.Command.Editor\":r.actionFormsCommandEditor(t.On);break;case\"Forms.Command.QueryEditor\":break;case\"Forms.Command.Library\":r.actionFormsCommandLibrary(t.On);break;case\"Forms.Command.QueryLibrary\":break;case\"Forms.Command.SelectDevice\":t&&r.actionFormsCommandSelectDevice(t.LabelText,t.CommandValueId),RefreshCommandUI();break;case\"Forms.Command.PopulateDevices\":t.PopulationXML=r.actionFormsCommandPopulateDevices();break;case\"Forms.Command.QueryDevices\":t[CUI.Controls.DropDownCommandProperties.Value]=r.actionFormsCommandQueryDevices();break;case\"Forms.Command.SelectColumn\":r.actionFormsCommandSelectColumn(t.LabelText,t.CommandValueId),RefreshCommandUI();break;case\"Forms.Command.PopulateColumns\":t.PopulationXML=r.actionFormsCommandPopulateColumns();break;case\"Forms.Command.QueryColumns\":t[CUI.Controls.DropDownCommandProperties.Value]=r.actionFormsCommandQueryColumns();break;case\"Forms2.Command.Undo\":r.actionFormsCommandUndo(),RefreshCommandUI();break;case\"Forms2.Command.Redo\":r.actionFormsCommandRedo(),RefreshCommandUI();break;case\"Forms.Command.Create\":r.actionFormsCommandCreate(),RefreshCommandUI();break;case\"Forms.Command.Clear\":r.actionFormsCommandClear(),RefreshCommandUI();break;case\"Forms.Command.Save\":r.actionFormsCommandSave(),RefreshCommandUI();break;case\"Forms.Command.Publish\":r.actionFormsCommandPublish(),RefreshCommandUI();break;case\"Forms.Command.Cancel\":r.actionFormsCommandCancel(),RefreshCommandUI();break;case\"Forms.Command.Upgrade\":r.actionFormsCommandUpgrade();break;default:return}return!0}},Forms.Ribbon.loadRibbon(\"TAB\",\"MESSAGE\"),Forms.Ribbon.PageComponent.registerClass(\"Forms.Ribbon.PageComponent\",CUI.Page.PageComponent),Forms.Ribbon.PageComponent.instance=new Forms.Ribbon.PageComponent,Forms.Ribbon.PageComponent.initialize(),Forms.Ribbon.PageComponent.instance}),function(){function e(t,n){function r(){return y=t.charAt(++w),y||\"\"}function i(e){var n=w;return e&&u(),result=t.charAt(w+1)||\"\",w=n-1,r(),result}function s(e){for(var n=w;r();)if(\"\\\\\"===y)r();else{if(-1!==e.indexOf(y))break;if(\"\\n\"===y)break}return t.substring(n,w+1)}function o(e){var t=w,n=s(e);return w=t-1,r(),n}function u(){for(var e=\"\";b.test(i());)r(),e+=y;return e}function a(){var e=\"\";for(y&&b.test(y)&&(e=y);b.test(r());)e+=y;return e}function f(e){var n=w,e=\"/\"===i();for(r();r();){if(!e&&\"*\"===y&&\"/\"===i()){r();break}if(e&&\"\\n\"===y)return t.substring(n,w)}return t.substring(n,w)+y}function l(e){return t.substring(w-e.length,w).toLowerCase()===e}function c(){for(var e=w+1;e<t.length;e++){var n=t.charAt(e);if(\"{\"===n)return!0;if(\";\"===n||\"}\"===n||\")\"===n)return!1}return!1}function h(){x++,E+=S}function p(){x--,E=E.slice(0,-d)}n=n||{};var d=n.indent_size||4,v=n.indent_char||\" \",m=void 0===n.selector_separator_newline?!0:n.selector_separator_newline,g=void 0===n.end_with_newline?!1:n.end_with_newline;\"string\"==typeof d&&(d=parseInt(d,10));var y,b=/^\\s+$/,w=-1,E=t.match(/^[\\t ]*/)[0],S=(new Array(d+1)).join(v),x=0,T=0,N={};N[\"{\"]=function(e){N.singleSpace(),C.push(e),N.newLine()},N[\"}\"]=function(e){N.newLine(),C.push(e),N.newLine()},N._lastCharWhitespace=function(){return b.test(C[C.length-1])},N.newLine=function(e){e||N.trim(),C.length&&C.push(\"\\n\"),E&&C.push(E)},N.singleSpace=function(){C.length&&!N._lastCharWhitespace()&&C.push(\" \")},N.trim=function(){for(;N._lastCharWhitespace();)C.pop()};var C=[];E&&C.push(E);for(var k=!1,L=!1,A=\"\",O=\"\";;){var M=a(),_=\"\"!==M,D=-1!==M.indexOf(\"\\n\"),O=A,A=y;if(!y)break;if(\"/\"===y&&\"*\"===i()){var P=l(\"\");N.newLine(),C.push(f()),N.newLine(),P&&N.newLine(!0)}else if(\"/\"===y&&\"/\"===i())D||\"{\"===O||N.trim(),N.singleSpace(),C.push(f()),N.newLine();else if(\"@\"===y){_&&N.singleSpace(),C.push(y);var H=o(\": ,;{}()[]/='\\\"\").replace(/\\s$/,\"\");H in e.NESTED_AT_RULE?(T+=1,H in e.CONDITIONAL_GROUP_RULE&&(L=!0)):\": \".indexOf(H[H.length-1])>=0&&(r(),H=s(\": \").replace(/\\s$/,\"\"),C.push(H),N.singleSpace())}else\"{\"===y?\"}\"===i(!0)?(u(),r(),N.singleSpace(),C.push(\"{}\")):(h(),N[\"{\"](y),L?(L=!1,k=x>T):k=x>=T):\"}\"===y?(p(),N[\"}\"](y),k=!1,T&&T--):\":\"===y?(u(),!k&&!L||l(\"&\")||c()?\":\"===i()?(r(),C.push(\"::\")):C.push(\":\"):(C.push(\":\"),N.singleSpace())):'\"'===y||\"'\"===y?(_&&N.singleSpace(),C.push(s(y))):\";\"===y?(C.push(y),N.newLine()):\"(\"===y?l(\"url\")?(C.push(y),u(),r()&&(\")\"!==y&&'\"'!==y&&\"'\"!==y?C.push(s(\")\")):w--)):(_&&N.singleSpace(),C.push(y),u()):\")\"===y?C.push(y):\",\"===y?(C.push(y),u(),!k&&m?N.newLine():N.singleSpace()):\"]\"===y?C.push(y):\"[\"===y?(_&&N.singleSpace(),C.push(y)):\"=\"===y?(u(),C.push(y)):(_&&N.singleSpace(),C.push(y))}var B=C.join(\"\").replace(/[\\r\\n\\t ]+$/,\"\");return g&&(B+=\"\\n\"),B}e.NESTED_AT_RULE={\"@page\":!0,\"@font-face\":!0,\"@keyframes\":!0,\"@media\":!0,\"@supports\":!0,\"@document\":!0},e.CONDITIONAL_GROUP_RULE={\"@media\":!0,\"@supports\":!0,\"@document\":!0},\"function\"==typeof define&&define.amd?define(\"beautify-css\",[],function(){return{css_beautify:e}}):\"undefined\"!=typeof exports?exports.css_beautify=e:\"undefined\"!=typeof window?window.css_beautify=e:\"undefined\"!=typeof global&&(global.css_beautify=e)}();var JSON5=\"object\"==typeof exports?exports:{};JSON5.parse=function(){\"use strict\";var e,t,n,r,i,s,o={\"'\":\"'\",'\"':'\"',\"\\\\\":\"\\\\\",\"/\":\"/\",\"\\n\":\"\",b:\"\\b\",f:\"\\f\",n:\"\\n\",r:\"\\r\",t:\"\t\"},u=[\" \",\"\t\",\"\\r\",\"\\n\",\"\u000b\",\"\\f\",\" \",\"﻿\"],a=function(e){return\"\"===e?\"EOF\":\"'\"+e+\"'\"},f=function(r){var s=new SyntaxError;throw s.message=r+\" at line \"+t+\" column \"+n+\" of the JSON5 data. Still to read: \"+JSON.stringify(i.substring(e-1,e+19)),s.at=e,s.lineNumber=t,s.columnNumber=n,s},l=function(s){return s&&s!==r&&f(\"Expected \"+a(s)+\" instead of \"+a(r)),r=i.charAt(e),e++,n++,(\"\\n\"===r||\"\\r\"===r&&\"\\n\"!==c())&&(t++,n=0),r},c=function(){return i.charAt(e)},h=function(){var e=r;for(\"_\"!==r&&\"$\"!==r&&(\"a\">r||r>\"z\")&&(\"A\">r||r>\"Z\")&&f(\"Bad identifier as unquoted key\");l()&&(\"_\"===r||\"$\"===r||r>=\"a\"&&\"z\">=r||r>=\"A\"&&\"Z\">=r||r>=\"0\"&&\"9\">=r);)e+=r;return e},p=function(){var e,t=\"\",n=\"\",i=10;if((\"-\"===r||\"+\"===r)&&(t=r,l(r)),\"I\"===r)return e=b(),(\"number\"!=typeof e||isNaN(e))&&f(\"Unexpected word for number\"),\"-\"===t?-e:e;if(\"N\"===r)return e=b(),isNaN(e)||f(\"expected word to be NaN\"),e;switch(\"0\"===r&&(n+=r,l(),\"x\"===r||\"X\"===r?(n+=r,l(),i=16):r>=\"0\"&&\"9\">=r&&f(\"Octal literal\")),i){case 10:for(;r>=\"0\"&&\"9\">=r;)n+=r,l();if(\".\"===r)for(n+=\".\";l()&&r>=\"0\"&&\"9\">=r;)n+=r;if(\"e\"===r||\"E\"===r)for(n+=r,l(),(\"-\"===r||\"+\"===r)&&(n+=r,l());r>=\"0\"&&\"9\">=r;)n+=r,l();break;case 16:for(;r>=\"0\"&&\"9\">=r||r>=\"A\"&&\"F\">=r||r>=\"a\"&&\"f\">=r;)n+=r,l()}return e=\"-\"===t?-n:+n,isFinite(e)?e:void f(\"Bad number\")},d=function(){var e,t,n,i,s=\"\";if('\"'===r||\"'\"===r)for(n=r;l();){if(r===n)return l(),s;if(\"\\\\\"===r)if(l(),\"u\"===r){for(i=0,t=0;4>t&&(e=parseInt(l(),16),isFinite(e));t+=1)i=16*i+e;s+=String.fromCharCode(i)}else if(\"\\r\"===r)\"\\n\"===c()&&l();else{if(\"string\"!=typeof o[r])break;s+=o[r]}else{if(\"\\n\"===r)break;s+=r}}f(\"Bad string\")},v=function(){\"/\"!==r&&f(\"Not an inline comment\");do if(l(),\"\\n\"===r||\"\\r\"===r)return void l();while(r)},m=function(){\"*\"!==r&&f(\"Not a block comment\");do for(l();\"*\"===r;)if(l(\"*\"),\"/\"===r)return void l(\"/\");while(r);f(\"Unterminated block comment\")},g=function(){\"/\"!==r&&f(\"Not a comment\"),l(\"/\"),\"/\"===r?v():\"*\"===r?m():f(\"Unrecognized comment\")},y=function(){for(;r;)if(\"/\"===r)g();else{if(!(u.indexOf(r)>=0))return;l()}},b=function(){switch(r){case\"t\":return l(\"t\"),l(\"r\"),l(\"u\"),l(\"e\"),!0;case\"f\":return l(\"f\"),l(\"a\"),l(\"l\"),l(\"s\"),l(\"e\"),!1;case\"n\":return l(\"n\"),l(\"u\"),l(\"l\"),l(\"l\"),null;case\"I\":return l(\"I\"),l(\"n\"),l(\"f\"),l(\"i\"),l(\"n\"),l(\"i\"),l(\"t\"),l(\"y\"),1/0;case\"N\":return l(\"N\"),l(\"a\"),l(\"N\"),NaN}f(\"Unexpected \"+a(r))},w=function(){var e=[];if(\"[\"===r)for(l(\"[\"),y();r;){if(\"]\"===r)return l(\"]\"),e;if(\",\"===r?f(\"Missing array element\"):e.push(s()),y(),\",\"!==r)return l(\"]\"),e;l(\",\"),y()}f(\"Bad array\")},E=function(){var e,t={};if(\"{\"===r)for(l(\"{\"),y();r;){if(\"}\"===r)return l(\"}\"),t;if(e='\"'===r||\"'\"===r?d():h(),y(),l(\":\"),t[e]=s(),y(),\",\"!==r)return l(\"}\"),t;l(\",\"),y()}f(\"Bad object\")};return s=function(){switch(y(),r){case\"{\":return E();case\"[\":return w();case'\"':case\"'\":return d();case\"-\":case\"+\":case\".\":return p();default:return r>=\"0\"&&\"9\">=r?p():b()}},function(o,u){var a;return i=String(o),e=0,t=1,n=1,r=\" \",a=s(),y(),r&&f(\"Syntax error\"),\"function\"==typeof u?function l(e,t){var n,r,i=e[t];if(i&&\"object\"==typeof i)for(n in i)Object.prototype.hasOwnProperty.call(i,n)&&(r=l(i,n),void 0!==r?i[n]=r:delete i[n]);return u.call(e,t,i)}({\"\":a},\"\"):a}}(),JSON5.stringify=function(e,t,n){function r(e){return e>=\"a\"&&\"z\">=e||e>=\"A\"&&\"Z\">=e||e>=\"0\"&&\"9\">=e||\"_\"===e||\"$\"===e}function i(e){return e>=\"a\"&&\"z\">=e||e>=\"A\"&&\"Z\">=e||\"_\"===e||\"$\"===e}function s(e){if(\"string\"!=typeof e)return!1;if(!i(e[0]))return!1;for(var t=1,n=e.length;n>t;){if(!r(e[t]))return!1;t++}return!0}function o(e){return Array.isArray?Array.isArray(e):\"[object Array]\"===Object.prototype.toString.call(e)}function u(e){return\"[object Date]\"===Object.prototype.toString.call(e)}function a(e){for(var t=0;t<d.length;t++)if(d[t]===e)throw new TypeError(\"Converting circular structure to JSON\")}function f(e,t,n){if(!e)return\"\";e.length>10&&(e=e.substring(0,10));for(var r=n?\"\":\"\\n\",i=0;t>i;i++)r+=e;return r}function l(e){return v.lastIndex=0,v.test(e)?'\"'+e.replace(v,function(e){var t=m[e];return\"string\"==typeof t?t:\"\\\\u\"+(\"0000\"+e.charCodeAt(0).toString(16)).slice(-4)})+'\"':'\"'+e+'\"'}function c(e,t,n){var r,i,v=h(e,t,n);switch(v&&!u(v)&&(v=v.valueOf()),typeof v){case\"boolean\":return v.toString();case\"number\":return isNaN(v)||!isFinite(v)?\"null\":v.toString();case\"string\":return l(v.toString());case\"object\":if(null===v)return\"null\";if(o(v)){a(v),r=\"[\",d.push(v);for(var m=0;m<v.length;m++)i=c(v,m,!1),r+=f(p,d.length),r+=null===i||\"undefined\"==typeof i?\"null\":i,m<v.length-1?r+=\",\":p&&(r+=\"\\n\");d.pop(),r+=f(p,d.length,!0)+\"]\"}else{a(v),r=\"{\";var g=!1;d.push(v);for(var y in v)if(v.hasOwnProperty(y)){var b=c(v,y,!1);n=!1,\"undefined\"!=typeof b&&null!==b&&(r+=f(p,d.length),g=!0,t=s(y)?y:l(y),r+=t+\":\"+(p?\" \":\"\")+b+\",\")}d.pop(),r=g?r.substring(0,r.length-1)+f(p,d.length)+\"}\":\"{}\"}return r;default:return}}if(t&&\"function\"!=typeof t&&!o(t))throw new Error(\"Replacer must be a function or an array\");var h=function(e,n,r){var i=e[n];return i&&i.toJSON&&\"function\"==typeof i.toJSON&&(i=i.toJSON()),\"function\"==typeof t?t.call(e,n,i):t?r||o(e)||t.indexOf(n)>=0?i:void 0:i};JSON5.isWord=s;var p,d=[];n&&(\"string\"==typeof n?p=n:\"number\"==typeof n&&n>=0&&(p=f(\" \",n,!0)));var v=/[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,m={\"\\b\":\"\\\\b\",\"\t\":\"\\\\t\",\"\\n\":\"\\\\n\",\"\\f\":\"\\\\f\",\"\\r\":\"\\\\r\",'\"':'\\\\\"',\"\\\\\":\"\\\\\\\\\"},g={\"\":e};return void 0===e?h(g,\"\",!0):c(g,\"\",!0)},define(\"json5\",function(){}),function(){function e(e,t){for(var n=0;n<t.length;n+=1)if(t[n]===e)return!0;return!1}function t(e){return e.replace(/^\\s+|\\s+$/g,\"\")}function n(e,t){\"use strict\";var n=new r(e,t);return n.beautify()}function r(n,r){\"use strict\";function i(e,t){var n=0;e&&(n=e.indentation_level,!z.just_added_newline()&&e.line_indent_level>n&&(n=e.line_indent_level));var r={mode:t,parent:e,last_text:e?e.last_text:\"\",last_word:e?e.last_word:\"\",declaration_statement:!1,declaration_assignment:!1,multiline_frame:!1,if_block:!1,else_block:!1,do_block:!1,do_while:!1,in_case_statement:!1,in_case:!1,case_body:!1,indentation_level:n,line_indent_level:e?e.line_indent_level:n,start_line_index:z.get_line_number(),ternary_depth:0};return r}function u(e){var t=e.newlines,n=tt.keep_array_indentation&&y(Q.mode);if(n)for(r=0;t>r;r+=1)h(r>0);else if(tt.max_preserve_newlines&&t>tt.max_preserve_newlines&&(t=tt.max_preserve_newlines),tt.preserve_newlines&&e.newlines>1){h();for(var r=1;t>r;r+=1)h(!0)}V=e,et[V.type]()}function f(e){e=e.replace(/\\x0d/g,\"\");for(var t=[],n=e.indexOf(\"\\n\");-1!==n;)t.push(e.substring(0,n)),e=e.substring(n+1),n=e.indexOf(\"\\n\");return e.length&&t.push(e),t}function c(e){if(e=void 0===e?!1:e,!z.just_added_newline())if(tt.preserve_newlines&&V.wanted_newline||e)h(!1,!0);else if(tt.wrap_line_length){var t=z.current_line.get_character_count()+V.text.length+(z.space_before_token?1:0);t>=tt.wrap_line_length&&h(!1,!0)}}function h(e,t){if(!t&&\";\"!==Q.last_text&&\",\"!==Q.last_text&&\"=\"!==Q.last_text&&\"TK_OPERATOR\"!==$)for(;Q.mode===a.Statement&&!Q.if_block&&!Q.do_block;)w();z.add_new_line(e)&&(Q.multiline_frame=!0)}function p(){z.just_added_newline()&&(tt.keep_array_indentation&&y(Q.mode)&&V.wanted_newline?(z.current_line.push(V.whitespace_before),z.space_before_token=!1):z.set_indent(Q.indentation_level)&&(Q.line_indent_level=Q.indentation_level))}function d(e){e=e||V.text,p(),z.add_token(e)}function v(){Q.indentation_level+=1}function m(){Q.indentation_level>0&&(!Q.parent||Q.indentation_level>Q.parent.indentation_level)&&(Q.indentation_level-=1)}function g(e){Q?(Y.push(Q),G=Q):G=i(null,e),Q=i(G,e)}function y(e){return e===a.ArrayLiteral}function b(t){return e(t,[a.Expression,a.ForInitializer,a.Conditional])}function w(){Y.length>0&&(G=Q,Q=Y.pop(),G.mode===a.Statement&&z.remove_redundant_indentation(G))}function E(){return Q.parent.mode===a.ObjectLiteral&&Q.mode===a.Statement&&(\":\"===Q.last_text&&0===Q.ternary_depth||\"TK_RESERVED\"===$&&e(Q.last_text,[\"get\",\"set\"]))}function S(){return\"TK_RESERVED\"===$&&e(Q.last_text,[\"var\",\"let\",\"const\"])&&\"TK_WORD\"===V.type||\"TK_RESERVED\"===$&&\"do\"===Q.last_text||\"TK_RESERVED\"===$&&\"return\"===Q.last_text&&!V.wanted_newline||\"TK_RESERVED\"===$&&\"else\"===Q.last_text&&(\"TK_RESERVED\"!==V.type||\"if\"!==V.text)||\"TK_END_EXPR\"===$&&(G.mode===a.ForInitializer||G.mode===a.Conditional)||\"TK_WORD\"===$&&Q.mode===a.BlockStatement&&!Q.in_case&&\"--\"!==V.text&&\"++\"!==V.text&&\"TK_WORD\"!==V.type&&\"TK_RESERVED\"!==V.type||Q.mode===a.ObjectLiteral&&(\":\"===Q.last_text&&0===Q.ternary_depth||\"TK_RESERVED\"===$&&e(Q.last_text,[\"get\",\"set\"]))?(g(a.Statement),v(),\"TK_RESERVED\"===$&&e(Q.last_text,[\"var\",\"let\",\"const\"])&&\"TK_WORD\"===V.type&&(Q.declaration_statement=!0),E()||c(\"TK_RESERVED\"===V.type&&e(V.text,[\"do\",\"for\",\"if\",\"while\"])),!0):!1}function x(e,n){for(var r=0;r<e.length;r++){var i=t(e[r]);if(i.charAt(0)!==n)return!1}return!0}function T(e,t){for(var n,r=0,i=e.length;i>r;r++)if(n=e[r],n&&0!==n.indexOf(t))return!1;return!0}function N(t){return e(t,[\"case\",\"return\",\"do\",\"if\",\"throw\",\"else\"])}function C(e){var t=W+(e||0);return 0>t||t>=nt.length?null:nt[t]}function k(){S();var t=a.Expression;if(\"[\"===V.text){if(\"TK_WORD\"===$||\")\"===Q.last_text)return\"TK_RESERVED\"===$&&e(Q.last_text,X.line_starters)&&(z.space_before_token=!0),g(t),d(),v(),void (tt.space_in_paren&&(z.space_before_token=!0));t=a.ArrayLiteral,y(Q.mode)&&(\"[\"===Q.last_text||\",\"===Q.last_text&&(\"]\"===J||\"}\"===J))&&(tt.keep_array_indentation||h())}else\"TK_RESERVED\"===$&&\"for\"===Q.last_text?t=a.ForInitializer:\"TK_RESERVED\"===$&&e(Q.last_text,[\"if\",\"while\"])&&(t=a.Conditional);\";\"===Q.last_text||\"TK_START_BLOCK\"===$?h():\"TK_END_EXPR\"===$||\"TK_START_EXPR\"===$||\"TK_END_BLOCK\"===$||\".\"===Q.last_text?c(V.wanted_newline):\"TK_RESERVED\"===$&&\"(\"===V.text||\"TK_WORD\"===$||\"TK_OPERATOR\"===$?\"TK_RESERVED\"===$&&(\"function\"===Q.last_word||\"typeof\"===Q.last_word)||\"*\"===Q.last_text&&\"function\"===J?tt.space_after_anon_function&&(z.space_before_token=!0):\"TK_RESERVED\"!==$||!e(Q.last_text,X.line_starters)&&\"catch\"!==Q.last_text||tt.space_before_conditional&&(z.space_before_token=!0):z.space_before_token=!0,\"(\"===V.text&&(\"TK_EQUALS\"===$||\"TK_OPERATOR\"===$)&&(E()||c()),g(t),d(),tt.space_in_paren&&(z.space_before_token=!0),v()}function L(){for(;Q.mode===a.Statement;)w();Q.multiline_frame&&c(\"]\"===V.text&&y(Q.mode)&&!tt.keep_array_indentation),tt.space_in_paren&&(\"TK_START_EXPR\"!==$||tt.space_in_empty_paren?z.space_before_token=!0:(z.trim(),z.space_before_token=!1)),\"]\"===V.text&&tt.keep_array_indentation?(d(),w()):(w(),d()),z.remove_redundant_indentation(G),Q.do_while&&G.mode===a.Conditional&&(G.mode=a.Expression,Q.do_block=!1,Q.do_while=!1)}function A(){var t=C(1),n=C(2);g(n&&(\":\"===n.text&&e(t.type,[\"TK_STRING\",\"TK_WORD\",\"TK_RESERVED\"])||e(t.text,[\"get\",\"set\"])&&e(n.type,[\"TK_WORD\",\"TK_RESERVED\"]))?e(J,[\"class\",\"interface\"])?a.BlockStatement:a.ObjectLiteral:a.BlockStatement);var r=!t.comments_before.length&&\"}\"===t.text,i=r&&\"function\"===Q.last_word&&\"TK_END_EXPR\"===$;\"expand\"===tt.brace_style||\"none\"===tt.brace_style&&V.wanted_newline?\"TK_OPERATOR\"!==$&&(i||\"TK_EQUALS\"===$||\"TK_RESERVED\"===$&&N(Q.last_text)&&\"else\"!==Q.last_text)?z.space_before_token=!0:h(!1,!0):\"TK_OPERATOR\"!==$&&\"TK_START_EXPR\"!==$?\"TK_START_BLOCK\"===$?h():z.space_before_token=!0:y(G.mode)&&\",\"===Q.last_text&&(\"}\"===J?z.space_before_token=!0:h()),d(),v()}function O(){for(;Q.mode===a.Statement;)w();var e=\"TK_START_BLOCK\"===$;\"expand\"===tt.brace_style?e||h():e||(y(Q.mode)&&tt.keep_array_indentation?(tt.keep_array_indentation=!1,h(),tt.keep_array_indentation=!0):h()),w(),d()}function M(){if(\"TK_RESERVED\"===V.type&&Q.mode!==a.ObjectLiteral&&e(V.text,[\"set\",\"get\"])&&(V.type=\"TK_WORD\"),\"TK_RESERVED\"===V.type&&Q.mode===a.ObjectLiteral){var t=C(1);\":\"==t.text&&(V.type=\"TK_WORD\")}if(S()||!V.wanted_newline||b(Q.mode)||\"TK_OPERATOR\"===$&&\"--\"!==Q.last_text&&\"++\"!==Q.last_text||\"TK_EQUALS\"===$||!tt.preserve_newlines&&\"TK_RESERVED\"===$&&e(Q.last_text,[\"var\",\"let\",\"const\",\"set\",\"get\"])||h(),Q.do_block&&!Q.do_while){if(\"TK_RESERVED\"===V.type&&\"while\"===V.text)return z.space_before_token=!0,d(),z.space_before_token=!0,void (Q.do_while=!0);h(),Q.do_block=!1}if(Q.if_block)if(Q.else_block||\"TK_RESERVED\"!==V.type||\"else\"!==V.text){for(;Q.mode===a.Statement;)w();Q.if_block=!1,Q.else_block=!1}else Q.else_block=!0;if(\"TK_RESERVED\"===V.type&&(\"case\"===V.text||\"default\"===V.text&&Q.in_case_statement))return h(),(Q.case_body||tt.jslint_happy)&&(m(),Q.case_body=!1),d(),Q.in_case=!0,void (Q.in_case_statement=!0);if(\"TK_RESERVED\"===V.type&&\"function\"===V.text&&((e(Q.last_text,[\"}\",\";\"])||z.just_added_newline()&&!e(Q.last_text,[\"[\",\"{\",\":\",\"=\",\",\"]))&&(z.just_added_blankline()||V.comments_before.length||(h(),h(!0))),\"TK_RESERVED\"===$||\"TK_WORD\"===$?\"TK_RESERVED\"===$&&e(Q.last_text,[\"get\",\"set\",\"new\",\"return\",\"export\"])?z.space_before_token=!0:\"TK_RESERVED\"===$&&\"default\"===Q.last_text&&\"export\"===J?z.space_before_token=!0:h():\"TK_OPERATOR\"===$||\"=\"===Q.last_text?z.space_before_token=!0:(Q.multiline_frame||!b(Q.mode)&&!y(Q.mode))&&h()),(\"TK_COMMA\"===$||\"TK_START_EXPR\"===$||\"TK_EQUALS\"===$||\"TK_OPERATOR\"===$)&&(E()||c()),\"TK_RESERVED\"===V.type&&e(V.text,[\"function\",\"get\",\"set\"]))return d(),void (Q.last_word=V.text);if(Z=\"NONE\",\"TK_END_BLOCK\"===$?\"TK_RESERVED\"===V.type&&e(V.text,[\"else\",\"catch\",\"finally\"])?\"expand\"===tt.brace_style||\"end-expand\"===tt.brace_style||\"none\"===tt.brace_style&&V.wanted_newline?Z=\"NEWLINE\":(Z=\"SPACE\",z.space_before_token=!0):Z=\"NEWLINE\":\"TK_SEMICOLON\"===$&&Q.mode===a.BlockStatement?Z=\"NEWLINE\":\"TK_SEMICOLON\"===$&&b(Q.mode)?Z=\"SPACE\":\"TK_STRING\"===$?Z=\"NEWLINE\":\"TK_RESERVED\"===$||\"TK_WORD\"===$||\"*\"===Q.last_text&&\"function\"===J?Z=\"SPACE\":\"TK_START_BLOCK\"===$?Z=\"NEWLINE\":\"TK_END_EXPR\"===$&&(z.space_before_token=!0,Z=\"NEWLINE\"),\"TK_RESERVED\"===V.type&&e(V.text,X.line_starters)&&\")\"!==Q.last_text&&(Z=\"else\"===Q.last_text||\"export\"===Q.last_text?\"SPACE\":\"NEWLINE\"),\"TK_RESERVED\"===V.type&&e(V.text,[\"else\",\"catch\",\"finally\"]))if(\"TK_END_BLOCK\"!==$||\"expand\"===tt.brace_style||\"end-expand\"===tt.brace_style||\"none\"===tt.brace_style&&V.wanted_newline)h();else{z.trim(!0);var n=z.current_line;\"}\"!==n.last()&&h(),z.space_before_token=!0}else\"NEWLINE\"===Z?\"TK_RESERVED\"===$&&N(Q.last_text)?z.space_before_token=!0:\"TK_END_EXPR\"!==$?\"TK_START_EXPR\"===$&&\"TK_RESERVED\"===V.type&&e(V.text,[\"var\",\"let\",\"const\"])||\":\"===Q.last_text||(\"TK_RESERVED\"===V.type&&\"if\"===V.text&&\"else\"===Q.last_text?z.space_before_token=!0:h()):\"TK_RESERVED\"===V.type&&e(V.text,X.line_starters)&&\")\"!==Q.last_text&&h():Q.multiline_frame&&y(Q.mode)&&\",\"===Q.last_text&&\"}\"===J?h():\"SPACE\"===Z&&(z.space_before_token=!0);d(),Q.last_word=V.text,\"TK_RESERVED\"===V.type&&\"do\"===V.text&&(Q.do_block=!0),\"TK_RESERVED\"===V.type&&\"if\"===V.text&&(Q.if_block=!0)}function _(){for(S()&&(z.space_before_token=!1);Q.mode===a.Statement&&!Q.if_block&&!Q.do_block;)w();d()}function D(){S()?z.space_before_token=!0:\"TK_RESERVED\"===$||\"TK_WORD\"===$?z.space_before_token=!0:\"TK_COMMA\"===$||\"TK_START_EXPR\"===$||\"TK_EQUALS\"===$||\"TK_OPERATOR\"===$?E()||c():h(),d()}function P(){S(),Q.declaration_statement&&(Q.declaration_assignment=!0),z.space_before_token=!0,d(),z.space_before_token=!0}function H(){return Q.declaration_statement?(b(Q.parent.mode)&&(Q.declaration_assignment=!1),d(),void (Q.declaration_assignment?(Q.declaration_assignment=!1,h(!1,!0)):z.space_before_token=!0)):(d(),void (Q.mode===a.ObjectLiteral||Q.mode===a.Statement&&Q.parent.mode===a.ObjectLiteral?(Q.mode===a.Statement&&w(),h()):z.space_before_token=!0))}function B(){if(S(),\"TK_RESERVED\"===$&&N(Q.last_text))return z.space_before_token=!0,void d();if(\"*\"===V.text&&\"TK_DOT\"===$)return void d();if(\":\"===V.text&&Q.in_case)return Q.case_body=!0,v(),d(),h(),void (Q.in_case=!1);if(\"::\"===V.text)return void d();!V.wanted_newline||\"--\"!==V.text&&\"++\"!==V.text||h(!1,!0),\"TK_OPERATOR\"===$&&c();var t=!0,n=!0;e(V.text,[\"--\",\"++\",\"!\",\"~\"])||e(V.text,[\"-\",\"+\"])&&(e($,[\"TK_START_BLOCK\",\"TK_START_EXPR\",\"TK_EQUALS\",\"TK_OPERATOR\"])||e(Q.last_text,X.line_starters)||\",\"===Q.last_text)?(t=!1,n=!1,\";\"===Q.last_text&&b(Q.mode)&&(t=!0),\"TK_RESERVED\"===$||\"TK_END_EXPR\"===$?t=!0:\"TK_OPERATOR\"===$&&(t=e(V.text,[\"--\",\"-\"])&&e(Q.last_text,[\"--\",\"-\"])||e(V.text,[\"++\",\"+\"])&&e(Q.last_text,[\"++\",\"+\"])),Q.mode!==a.BlockStatement&&Q.mode!==a.Statement||\"{\"!==Q.last_text&&\";\"!==Q.last_text||h()):\":\"===V.text?0===Q.ternary_depth?t=!1:Q.ternary_depth-=1:\"?\"===V.text?Q.ternary_depth+=1:\"*\"===V.text&&\"TK_RESERVED\"===$&&\"function\"===Q.last_text&&(t=!1,n=!1),z.space_before_token=z.space_before_token||t,d(),z.space_before_token=n}function j(){var e,n=f(V.text),r=!1,i=!1,s=V.whitespace_before,o=s.length;for(h(!1,!0),n.length>1&&(x(n.slice(1),\"*\")?r=!0:T(n.slice(1),s)&&(i=!0)),d(n[0]),e=1;e<n.length;e++)h(!1,!0),r?d(\" \"+t(n[e])):i&&n[e].length>o?d(n[e].substring(o)):z.add_token(n[e]);h(!1,!0)}function F(){z.space_before_token=!0,d(),z.space_before_token=!0}function I(){V.wanted_newline?h(!1,!0):z.trim(!0),z.space_before_token=!0,d(),h(!1,!0)}function q(){S(),\"TK_RESERVED\"===$&&N(Q.last_text)?z.space_before_token=!0:c(\")\"===Q.last_text&&tt.break_chained_methods),d()}function R(){d(),\"\\n\"===V.text[V.text.length-1]&&h()}function U(){for(;Q.mode===a.Statement;)w()}var z,W,X,V,$,J,K,Q,G,Y,Z,et,tt,nt=[],rt=\"\";for(et={TK_START_EXPR:k,TK_END_EXPR:L,TK_START_BLOCK:A,TK_END_BLOCK:O,TK_WORD:M,TK_RESERVED:M,TK_SEMICOLON:_,TK_STRING:D,TK_EQUALS:P,TK_OPERATOR:B,TK_COMMA:H,TK_BLOCK_COMMENT:j,TK_INLINE_COMMENT:F,TK_COMMENT:I,TK_DOT:q,TK_UNKNOWN:R,TK_EOF:U},r=r?r:{},tt={},void 0!==r.braces_on_own_line&&(tt.brace_style=r.braces_on_own_line?\"expand\":\"collapse\"),tt.brace_style=r.brace_style?r.brace_style:tt.brace_style?tt.brace_style:\"collapse\",\"expand-strict\"===tt.brace_style&&(tt.brace_style=\"expand\"),tt.indent_size=r.indent_size?parseInt(r.indent_size,10):4,tt.indent_char=r.indent_char?r.indent_char:\" \",tt.preserve_newlines=void 0===r.preserve_newlines?!0:r.preserve_newlines,tt.break_chained_methods=void 0===r.break_chained_methods?!1:r.break_chained_methods,tt.max_preserve_newlines=void 0===r.max_preserve_newlines?0:parseInt(r.max_preserve_newlines,10),tt.space_in_paren=void 0===r.space_in_paren?!1:r.space_in_paren,tt.space_in_empty_paren=void 0===r.space_in_empty_paren?!1:r.space_in_empty_paren,tt.jslint_happy=void 0===r.jslint_happy?!1:r.jslint_happy,tt.space_after_anon_function=void 0===r.space_after_anon_function?!1:r.space_after_anon_function,tt.keep_array_indentation=void 0===r.keep_array_indentation?!1:r.keep_array_indentation,tt.space_before_conditional=void 0===r.space_before_conditional?!0:r.space_before_conditional,tt.unescape_strings=void 0===r.unescape_strings?!1:r.unescape_strings,tt.wrap_line_length=void 0===r.wrap_line_length?0:parseInt(r.wrap_line_length,10),tt.e4x=void 0===r.e4x?!1:r.e4x,tt.end_with_newline=void 0===r.end_with_newline?!1:r.end_with_newline,tt.jslint_happy&&(tt.space_after_anon_function=!0),r.indent_with_tabs&&(tt.indent_char=\"\t\",tt.indent_size=1),K=\"\";tt.indent_size>0;)K+=tt.indent_char,tt.indent_size-=1;var it=0;if(n&&n.length){for(;\" \"===n.charAt(it)||\"\t\"===n.charAt(it);)rt+=n.charAt(it),it+=1;n=n.substring(it)}$=\"TK_START_BLOCK\",J=\"\",z=new s(K,rt),Y=[],g(a.BlockStatement),this.beautify=function(){var e,t;for(X=new o(n,tt,K),nt=X.tokenize(),W=0;e=C();){for(var r=0;r<e.comments_before.length;r++)u(e.comments_before[r]);u(e),J=Q.last_text,$=e.type,Q.last_text=e.text,W+=1}return t=z.get_code(),tt.end_with_newline&&(t+=\"\\n\"),t}}function i(e){var t=0,n=-1,r=[],i=!0;this.set_indent=function(r){t=e.baseIndentLength+r*e.indent_length,n=r},this.get_character_count=function(){return t},this.is_empty=function(){return i},this.last=function(){return this._empty?null:r[r.length-1]},this.push=function(e){r.push(e),t+=e.length,i=!1},this.remove_indent=function(){n>0&&(n-=1,t-=e.indent_length)},this.trim=function(){for(;\" \"===this.last();)r.pop(),t-=1;i=0===r.length},this.toString=function(){var t=\"\";return this._empty||(n>=0&&(t=e.indent_cache[n]),t+=r.join(\"\")),t}}function s(e,t){t=t||\"\",this.indent_cache=[t],this.baseIndentLength=t.length,this.indent_length=e.length;var n=[];this.baseIndentString=t,this.indent_string=e,this.current_line=null,this.space_before_token=!1,this.get_line_number=function(){return n.length},this.add_new_line=function(e){return 1===this.get_line_number()&&this.just_added_newline()?!1:e||!this.just_added_newline()?(this.current_line=new i(this),n.push(this.current_line),!0):!1},this.add_new_line(!0),this.get_code=function(){var e=n.join(\"\\n\").replace(/[\\r\\n\\t ]+$/,\"\");return e},this.set_indent=function(e){if(n.length>1){for(;e>=this.indent_cache.length;)this.indent_cache.push(this.indent_cache[this.indent_cache.length-1]+this.indent_string);return this.current_line.set_indent(e),!0}return this.current_line.set_indent(0),!1},this.add_token=function(e){this.add_space_before_token(),this.current_line.push(e)},this.add_space_before_token=function(){this.space_before_token&&!this.just_added_newline()&&this.current_line.push(\" \"),this.space_before_token=!1},this.remove_redundant_indentation=function(e){if(!e.multiline_frame&&e.mode!==a.ForInitializer&&e.mode!==a.Conditional)for(var t=e.start_line_index,r=n.length;r>t;)n[t].remove_indent(),t++},this.trim=function(r){for(r=void 0===r?!1:r,this.current_line.trim(e,t);r&&n.length>1&&this.current_line.is_empty();)n.pop(),this.current_line=n[n.length-1],this.current_line.trim()},this.just_added_newline=function(){return this.current_line.is_empty()},this.just_added_blankline=function(){if(this.just_added_newline()){if(1===n.length)return!0;var e=n[n.length-2];return e.is_empty()}return!1}}function o(n,r,i){function s(){var s,w=[];if(p=0,d=\"\",g>=y)return[\"\",\"TK_EOF\"];var E;E=m.length?m[m.length-1]:new f(\"TK_START_BLOCK\",\"{\");var S=n.charAt(g);for(g+=1;e(S,a);){if(\"\\n\"===S?(p+=1,w=[]):p&&(S===i?w.push(i):\"\\r\"!==S&&w.push(\" \")),g>=y)return[\"\",\"TK_EOF\"];S=n.charAt(g),g+=1}if(w.length&&(d=w.join(\"\")),l.test(S)){var x=!0,T=!0,N=l;for(\"0\"===S&&y>g&&/[Xx]/.test(n.charAt(g))?(x=!1,T=!1,S+=n.charAt(g),g+=1,N=/[0123456789abcdefABCDEF]/):(S=\"\",g-=1);y>g&&N.test(n.charAt(g));)S+=n.charAt(g),g+=1,x&&y>g&&\".\"===n.charAt(g)&&(S+=n.charAt(g),g+=1,x=!1),T&&y>g&&/[Ee]/.test(n.charAt(g))&&(S+=n.charAt(g),g+=1,y>g&&/[+-]/.test(n.charAt(g))&&(S+=n.charAt(g),g+=1),T=!1,x=!1);return[S,\"TK_WORD\"]}if(u.isIdentifierStart(n.charCodeAt(g-1))){if(y>g)for(;u.isIdentifierChar(n.charCodeAt(g))&&(S+=n.charAt(g),g+=1,g!==y););return\"TK_DOT\"===E.type||\"TK_RESERVED\"===E.type&&e(E.text,[\"set\",\"get\"])||!e(S,b)?[S,\"TK_WORD\"]:\"in\"===S?[S,\"TK_OPERATOR\"]:[S,\"TK_RESERVED\"]}if(\"(\"===S||\"[\"===S)return[S,\"TK_START_EXPR\"];if(\")\"===S||\"]\"===S)return[S,\"TK_END_EXPR\"];if(\"{\"===S)return[S,\"TK_START_BLOCK\"];if(\"}\"===S)return[S,\"TK_END_BLOCK\"];if(\";\"===S)return[S,\"TK_SEMICOLON\"];if(\"/\"===S){var C=\"\",k=!0;if(\"*\"===n.charAt(g)){if(g+=1,y>g)for(;y>g&&(\"*\"!==n.charAt(g)||!n.charAt(g+1)||\"/\"!==n.charAt(g+1))&&(S=n.charAt(g),C+=S,(\"\\n\"===S||\"\\r\"===S)&&(k=!1),g+=1,!(g>=y)););return g+=2,k&&0===p?[\"/*\"+C+\"*/\",\"TK_INLINE_COMMENT\"]:[\"/*\"+C+\"*/\",\"TK_BLOCK_COMMENT\"]}if(\"/\"===n.charAt(g)){for(C=S;\"\\r\"!==n.charAt(g)&&\"\\n\"!==n.charAt(g)&&(C+=n.charAt(g),g+=1,!(g>=y)););return[C,\"TK_COMMENT\"]}}if(\"`\"===S||\"'\"===S||'\"'===S||(\"/\"===S||r.e4x&&\"<\"===S&&n.slice(g-1).match(/^<([-a-zA-Z:0-9_.]+|{[^{}]*}|!\\[CDATA\\[[\\s\\S]*?\\]\\])\\s*([-a-zA-Z:0-9_.]+=('[^']*'|\"[^\"]*\"|{[^{}]*})\\s*)*\\/?\\s*>/))&&(\"TK_RESERVED\"===E.type&&e(E.text,[\"return\",\"case\",\"throw\",\"else\",\"do\",\"typeof\",\"yield\"])||\"TK_END_EXPR\"===E.type&&\")\"===E.text&&E.parent&&\"TK_RESERVED\"===E.parent.type&&e(E.parent.text,[\"if\",\"while\",\"for\"])||e(E.type,[\"TK_COMMENT\",\"TK_START_EXPR\",\"TK_START_BLOCK\",\"TK_END_BLOCK\",\"TK_OPERATOR\",\"TK_EQUALS\",\"TK_EOF\",\"TK_SEMICOLON\",\"TK_COMMA\"]))){var L=S,A=!1,O=!1;if(s=S,\"/\"===L)for(var M=!1;y>g&&(A||M||n.charAt(g)!==L)&&!u.newline.test(n.charAt(g));)s+=n.charAt(g),A?A=!1:(A=\"\\\\\"===n.charAt(g),\"[\"===n.charAt(g)?M=!0:\"]\"===n.charAt(g)&&(M=!1)),g+=1;else if(r.e4x&&\"<\"===L){var _=/<(\\/?)([-a-zA-Z:0-9_.]+|{[^{}]*}|!\\[CDATA\\[[\\s\\S]*?\\]\\])\\s*([-a-zA-Z:0-9_.]+=('[^']*'|\"[^\"]*\"|{[^{}]*})\\s*)*(\\/?)\\s*>/g,D=n.slice(g-1),P=_.exec(D);if(P&&0===P.index){for(var H=P[2],B=0;P;){var j=!!P[1],F=P[2],I=!!P[P.length-1]||\"![CDATA[\"===F.slice(0,8);if(F!==H||I||(j?--B:++B),0>=B)break;P=_.exec(D)}var q=P?P.index+P[0].length:D.length;return g+=q-1,[D.slice(0,q),\"TK_STRING\"]}}else for(;y>g&&(A||n.charAt(g)!==L&&(\"`\"===L||!u.newline.test(n.charAt(g))));)s+=n.charAt(g),A?((\"x\"===n.charAt(g)||\"u\"===n.charAt(g))&&(O=!0),A=!1):A=\"\\\\\"===n.charAt(g),g+=1;if(O&&r.unescape_strings&&(s=o(s)),y>g&&n.charAt(g)===L&&(s+=L,g+=1,\"/\"===L))for(;y>g&&u.isIdentifierStart(n.charCodeAt(g));)s+=n.charAt(g),g+=1;return[s,\"TK_STRING\"]}if(\"#\"===S){if(0===m.length&&\"!\"===n.charAt(g)){for(s=S;y>g&&\"\\n\"!==S;)S=n.charAt(g),s+=S,g+=1;return[t(s)+\"\\n\",\"TK_UNKNOWN\"]}var R=\"#\";if(y>g&&l.test(n.charAt(g))){do S=n.charAt(g),R+=S,g+=1;while(y>g&&\"#\"!==S&&\"=\"!==S);return\"#\"===S||(\"[\"===n.charAt(g)&&\"]\"===n.charAt(g+1)?(R+=\"[]\",g+=2):\"{\"===n.charAt(g)&&\"}\"===n.charAt(g+1)&&(R+=\"{}\",g+=2)),[R,\"TK_WORD\"]}}if(\"<\"===S&&\"<!--\"===n.substring(g-1,g+3)){for(g+=3,S=\"<!--\";\"\\n\"!==n.charAt(g)&&y>g;)S+=n.charAt(g),g++;return v=!0,[S,\"TK_COMMENT\"]}if(\"-\"===S&&v&&\"-->\"===n.substring(g-1,g+2))return v=!1,g+=2,[\"-->\",\"TK_COMMENT\"];if(\".\"===S)return[S,\"TK_DOT\"];if(e(S,h)){for(;y>g&&e(S+n.charAt(g),h)&&(S+=n.charAt(g),g+=1,!(g>=y)););return\",\"===S?[S,\"TK_COMMA\"]:\"=\"===S?[S,\"TK_EQUALS\"]:[S,\"TK_OPERATOR\"]}return[S,\"TK_UNKNOWN\"]}function o(e){for(var t,n=!1,r=\"\",i=0,s=\"\",o=0;n||i<e.length;)if(t=e.charAt(i),i++,n){if(n=!1,\"x\"===t)s=e.substr(i,2),i+=2;else{if(\"u\"!==t){r+=\"\\\\\"+t;continue}s=e.substr(i,4),i+=4}if(!s.match(/^[0123456789abcdefABCDEF]+$/))return e;if(o=parseInt(s,16),o>=0&&32>o){r+=\"x\"===t?\"\\\\x\"+s:\"\\\\u\"+s;continue}if(34===o||39===o||92===o)r+=\"\\\\\"+String.fromCharCode(o);else{if(\"x\"===t&&o>126&&255>=o)return e;r+=String.fromCharCode(o)}}else\"\\\\\"===t?n=!0:r+=t;return r}var a=\"\\n\\r\t \".split(\"\"),l=/[0-9]/,h=\"+ - * / % & ++ -- = += -= *= /= %= == === != !== > < >= <= >> << >>> >>>= >>= <<= && &= | || ! ~ , : ? ^ ^= |= :: => <%= <% %> <?= <? ?>\".split(\" \");this.line_starters=\"continue,try,throw,return,var,let,const,if,switch,case,default,for,while,break,function,yield,import,export\".split(\",\");var p,d,v,m,g,y,b=this.line_starters.concat([\"do\",\"in\",\"else\",\"get\",\"set\",\"new\",\"catch\",\"finally\",\"typeof\"]);this.tokenize=function(){y=n.length,g=0,v=!1,m=[];for(var e,t,r,i=null,o=[],u=[];!t||\"TK_EOF\"!==t.type;){for(r=s(),e=new f(r[1],r[0],p,d);\"TK_INLINE_COMMENT\"===e.type||\"TK_COMMENT\"===e.type||\"TK_BLOCK_COMMENT\"===e.type||\"TK_UNKNOWN\"===e.type;)u.push(e),r=s(),e=new f(r[1],r[0],p,d);u.length&&(e.comments_before=u,u=[]),\"TK_START_BLOCK\"===e.type||\"TK_START_EXPR\"===e.type?(e.parent=t,i=e,o.push(e)):(\"TK_END_BLOCK\"===e.type||\"TK_END_EXPR\"===e.type)&&i&&(\"]\"===e.text&&\"[\"===i.text||\")\"===e.text&&\"(\"===i.text||\"}\"===e.text&&\"}\"===i.text)&&(e.parent=i.parent,i=o.pop()),m.push(e),t=e}return m}}var u={};!function(e){var t=\"ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԧԱ-Ֆՙա-ևא-תװ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࢠࢢ-ࢬऄ-हऽॐक़-ॡॱ-ॷॹ-ॿঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-ళవ-హఽౘౙౠౡಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൠൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛰᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡷᢀ-ᢨᢪᢰ-ᣵᤀ-ᤜᥐ-ᥭᥰ-ᥴᦀ-ᦫᧁ-ᧇᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᳩ-ᳬᳮ-ᳱᳵᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⸯ々-〇〡-〩〱-〵〸-〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿌ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚗꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞎꞐ-ꞓꞠ-Ɦꟸ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꪀ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꯀ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ\",n=\"̀-ͯ҃-֑҇-ׇֽֿׁׂׅׄؐ-ؚؠ-ىٲ-ۓۧ-ۨۻ-ۼܰ-݊ࠀ-ࠔࠛ-ࠣࠥ-ࠧࠩ-࠭ࡀ-ࡗࣤ-ࣾऀ-ःऺ-़ा-ॏ॑-ॗॢ-ॣ०-९ঁ-ঃ়া-ৄেৈৗয়-ৠਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢ-ૣ૦-૯ଁ-ଃ଼ା-ୄେୈୋ-୍ୖୗୟ-ୠ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఁ-ఃె-ైొ-్ౕౖౢ-ౣ౦-౯ಂಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢ-ೣ೦-೯ംഃെ-ൈൗൢ-ൣ൦-൯ංඃ්ා-ුූෘ-ෟෲෳิ-ฺเ-ๅ๐-๙ິ-ູ່-ໍ໐-໙༘༙༠-༩༹༵༷ཁ-ཇཱ-྄྆-྇ྍ-ྗྙ-ྼ࿆က-ဩ၀-၉ၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟ᜎ-ᜐᜠ-ᜰᝀ-ᝐᝲᝳក-ឲ៝០-៩᠋-᠍᠐-᠙ᤠ-ᤫᤰ-᤻ᥑ-ᥭᦰ-ᧀᧈ-ᧉ᧐-᧙ᨀ-ᨕᨠ-ᩓ᩠-᩿᩼-᪉᪐-᪙ᭆ-ᭋ᭐-᭙᭫-᭳᮰-᮹᯦-᯳ᰀ-ᰢ᱀-᱉ᱛ-ᱽ᳐-᳒ᴀ-ᶾḁ-ἕ‌‍‿⁀⁔⃐-⃥⃜⃡-⃰ⶁ-ⶖⷠ-ⷿ〡-〨゙゚Ꙁ-ꙭꙴ-꙽ꚟ꛰-꛱ꟸ-ꠀ꠆ꠋꠣ-ꠧꢀ-ꢁꢴ-꣄꣐-꣙ꣳ-ꣷ꤀-꤉ꤦ-꤭ꤰ-ꥅꦀ-ꦃ꦳-꧀ꨀ-ꨧꩀ-ꩁꩌ-ꩍ꩐-꩙ꩻꫠ-ꫩꫲ-ꫳꯀ-ꯡ꯬꯭꯰-꯹ﬠ-ﬨ︀-️︠-︦︳︴﹍-﹏０-９＿\",r=new RegExp(\"[\"+t+\"]\"),i=new RegExp(\"[\"+t+n+\"]\");e.newline=/[\\n\\r\\u2028\\u2029]/,e.isIdentifierStart=function(e){return 65>e?36===e:91>e?!0:97>e?95===e:123>e?!0:e>=170&&r.test(String.fromCharCode(e))},e.isIdentifierChar=function(e){return 48>e?36===e:58>e?!0:65>e?!1:91>e?!0:97>e?95===e:123>e?!0:e>=170&&i.test(String.fromCharCode(e))}}(u);var a={BlockStatement:\"BlockStatement\",Statement:\"Statement\",ObjectLiteral:\"ObjectLiteral\",ArrayLiteral:\"ArrayLiteral\",ForInitializer:\"ForInitializer\",Conditional:\"Conditional\",Expression:\"Expression\"},f=function(e,t,n,r,i,s){this.type=e,this.text=t,this.comments_before=[],this.newlines=n||0,this.wanted_newline=n>0,this.whitespace_before=r||\"\",this.parent=null};\"function\"==typeof define&&define.amd?define(\"beautify\",[],function(){return{js_beautify:n}}):\"undefined\"!=typeof exports?exports.js_beautify=n:\"undefined\"!=typeof window?window.js_beautify=n:\"undefined\"!=typeof global&&(global.js_beautify=n)}(),function(){function e(e){return e.replace(/^\\s+/g,\"\")}function t(e){return e.replace(/\\s+$/g,\"\")}function n(n,r,i,s){function o(){return this.pos=0,this.token=\"\",this.current_mode=\"CONTENT\",this.tags={parent:\"parent1\",parentcount:1,parent1:\"\"},this.tag_type=\"\",this.token_text=this.last_token=this.last_text=this.token_type=\"\",this.newlines=0,this.indent_content=a,this.Utils={whitespace:\"\\n\\r\t \".split(\"\"),single_token:\"br,input,link,meta,!doctype,basefont,base,area,hr,wbr,param,img,isindex,?xml,embed,?php,?,?=\".split(\",\"),extra_liners:\"head,body,/html\".split(\",\"),in_array:function(e,t){for(var n=0;n<t.length;n++)if(e===t[n])return!0;return!1}},this.is_whitespace=function(e){for(var t=0;t<e.length;e++)if(!this.Utils.in_array(e.charAt(t),this.Utils.whitespace))return!1;return!0},this.traverse_whitespace=function(){var e=\"\";if(e=this.input.charAt(this.pos),this.Utils.in_array(e,this.Utils.whitespace)){for(this.newlines=0;this.Utils.in_array(e,this.Utils.whitespace);)d&&\"\\n\"===e&&this.newlines<=v&&(this.newlines+=1),this.pos++,e=this.input.charAt(this.pos);return!0}return!1},this.space_or_wrap=function(e){this.line_char_count>=this.wrap_line_length?(this.print_newline(!1,e),this.print_indentation(e)):(this.line_char_count++,e.push(\" \"))},this.get_content=function(){for(var e=\"\",t=[];\"<\"!==this.input.charAt(this.pos);){if(this.pos>=this.input.length)return t.length?t.join(\"\"):[\"\",\"TK_EOF\"];if(this.traverse_whitespace())this.space_or_wrap(t);else{if(m){var n=this.input.substr(this.pos,3);if(\"{{#\"===n||\"{{/\"===n)break;if(\"{{\"===this.input.substr(this.pos,2)&&\"{{else}}\"===this.get_tag(!0))break}e=this.input.charAt(this.pos),this.pos++,this.line_char_count++,t.push(e)}}return t.length?t.join(\"\"):\"\"},this.get_contents_to=function(e){if(this.pos===this.input.length)return[\"\",\"TK_EOF\"];var t=\"\",n=new RegExp(\"</\"+e+\"\\\\s*>\",\"igm\");n.lastIndex=this.pos;var r=n.exec(this.input),i=r?r.index:this.input.length;return this.pos<i&&(t=this.input.substring(this.pos,i),this.pos=i),t},this.record_tag=function(e){this.tags[e+\"count\"]?(this.tags[e+\"count\"]++,this.tags[e+this.tags[e+\"count\"]]=this.indent_level):(this.tags[e+\"count\"]=1,this.tags[e+this.tags[e+\"count\"]]=this.indent_level),this.tags[e+this.tags[e+\"count\"]+\"parent\"]=this.tags.parent,this.tags.parent=e+this.tags[e+\"count\"]},this.retrieve_tag=function(e){if(this.tags[e+\"count\"]){for(var t=this.tags.parent;t&&e+this.tags[e+\"count\"]!==t;)t=this.tags[t+\"parent\"];t&&(this.indent_level=this.tags[e+this.tags[e+\"count\"]],this.tags.parent=this.tags[t+\"parent\"]),delete this.tags[e+this.tags[e+\"count\"]+\"parent\"],delete this.tags[e+this.tags[e+\"count\"]],1===this.tags[e+\"count\"]?delete this.tags[e+\"count\"]:this.tags[e+\"count\"]--}},this.indent_to_tag=function(e){if(this.tags[e+\"count\"]){for(var t=this.tags.parent;t&&e+this.tags[e+\"count\"]!==t;)t=this.tags[t+\"parent\"];t&&(this.indent_level=this.tags[e+this.tags[e+\"count\"]])}},this.get_tag=function(e){var t,n,r,i=\"\",s=[],o=\"\",u=!1,a=this.pos,f=this.line_char_count;e=void 0!==e?e:!1;do{if(this.pos>=this.input.length)return e&&(this.pos=a,this.line_char_count=f),s.length?s.join(\"\"):[\"\",\"TK_EOF\"];if(i=this.input.charAt(this.pos),this.pos++,this.Utils.in_array(i,this.Utils.whitespace))u=!0;else{if((\"'\"===i||'\"'===i)&&(i+=this.get_unformatted(i),u=!0),\"=\"===i&&(u=!1),s.length&&\"=\"!==s[s.length-1]&&\">\"!==i&&u&&(this.space_or_wrap(s),u=!1),m&&\"<\"===r&&i+this.input.charAt(this.pos)===\"{{\"&&(i+=this.get_unformatted(\"}}\"),s.length&&\" \"!==s[s.length-1]&&\"<\"!==s[s.length-1]&&(i=\" \"+i),u=!0),\"<\"!==i||r||(t=this.pos-1,r=\"<\"),m&&!r&&s.length>=2&&\"{\"===s[s.length-1]&&\"{\"==s[s.length-2]&&(t=\"#\"===i||\"/\"===i?this.pos-3:this.pos-2,r=\"{\"),this.line_char_count++,s.push(i),s[1]&&\"!\"===s[1]){s=[this.get_comment(t)];break}if(m&&\"{\"===r&&s.length>2&&\"}\"===s[s.length-2]&&\"}\"===s[s.length-1])break}}while(\">\"!==i);var l,c,h=s.join(\"\");l=-1!==h.indexOf(\" \")?h.indexOf(\" \"):\"{\"===h[0]?h.indexOf(\"}\"):h.indexOf(\">\"),c=\"<\"!==h[0]&&m?\"#\"===h[2]?3:2:1;var d=h.substring(c,l).toLowerCase();return\"/\"===h.charAt(h.length-2)||this.Utils.in_array(d,this.Utils.single_token)?e||(this.tag_type=\"SINGLE\"):m&&\"{\"===h[0]&&\"else\"===d?e||(this.indent_to_tag(\"if\"),this.tag_type=\"HANDLEBARS_ELSE\",this.indent_content=!0,this.traverse_whitespace()):this.is_unformatted(d,p)?(o=this.get_unformatted(\"</\"+d+\">\",h),s.push(o),n=this.pos-1,this.tag_type=\"SINGLE\"):\"script\"===d&&(-1===h.search(\"type\")||h.search(\"type\")>-1&&h.search(/\\b(text|application)\\/(x-)?(javascript|ecmascript|jscript|livescript)/)>-1)?e||(this.record_tag(d),this.tag_type=\"SCRIPT\"):\"style\"===d&&(-1===h.search(\"type\")||h.search(\"type\")>-1&&h.search(\"text/css\")>-1)?e||(this.record_tag(d),this.tag_type=\"STYLE\"):\"!\"===d.charAt(0)?e||(this.tag_type=\"SINGLE\",this.traverse_whitespace()):e||(\"/\"===d.charAt(0)?(this.retrieve_tag(d.substring(1)),this.tag_type=\"END\"):(this.record_tag(d),\"html\"!==d.toLowerCase()&&(this.indent_content=!0),this.tag_type=\"START\"),this.traverse_whitespace()&&this.space_or_wrap(s),this.Utils.in_array(d,this.Utils.extra_liners)&&(this.print_newline(!1,this.output),this.output.length&&\"\\n\"!==this.output[this.output.length-2]&&this.print_newline(!0,this.output))),e&&(this.pos=a,this.line_char_count=f),s.join(\"\")},this.get_comment=function(e){var t=\"\",n=\">\",r=!1;for(this.pos=e,input_char=this.input.charAt(this.pos),this.pos++;this.pos<=this.input.length&&(t+=input_char,t[t.length-1]!==n[n.length-1]||-1===t.indexOf(n));)!r&&t.length<10&&(0===t.indexOf(\"<![if\")?(n=\"<![endif]>\",r=!0):0===t.indexOf(\"<![cdata[\")?(n=\"]]>\",r=!0):0===t.indexOf(\"<![\")?(n=\"]>\",r=!0):0===t.indexOf(\"<!--\")&&(n=\"-->\",r=!0)),input_char=this.input.charAt(this.pos),this.pos++;return t},this.get_unformatted=function(e,t){if(t&&-1!==t.toLowerCase().indexOf(e))return\"\";var n=\"\",r=\"\",i=0,s=!0;do{if(this.pos>=this.input.length)return r;if(n=this.input.charAt(this.pos),this.pos++,this.Utils.in_array(n,this.Utils.whitespace)){if(!s){this.line_char_count--;continue}if(\"\\n\"===n||\"\\r\"===n){r+=\"\\n\",this.line_char_count=0;continue}}r+=n,this.line_char_count++,s=!0,m&&\"{\"===n&&r.length&&\"{\"===r[r.length-2]&&(r+=this.get_unformatted(\"}}\"),i=r.length)}while(-1===r.toLowerCase().indexOf(e,i));return r},this.get_token=function(){var e;if(\"TK_TAG_SCRIPT\"===this.last_token||\"TK_TAG_STYLE\"===this.last_token){var t=this.last_token.substr(7);return e=this.get_contents_to(t),\"string\"!=typeof e?e:[e,\"TK_\"+t]}if(\"CONTENT\"===this.current_mode)return e=this.get_content(),\"string\"!=typeof e?e:[e,\"TK_CONTENT\"];if(\"TAG\"===this.current_mode){if(e=this.get_tag(),\"string\"!=typeof e)return e;var n=\"TK_TAG_\"+this.tag_type;return[e,n]}},this.get_full_indent=function(e){return e=this.indent_level+e||0,1>e?\"\":Array(e+1).join(this.indent_string)},this.is_unformatted=function(e,t){if(!this.Utils.in_array(e,t))return!1;if(\"a\"!==e.toLowerCase()||!this.Utils.in_array(\"a\",t))return!0;var n=this.get_tag(!0),r=(n||\"\").match(/^\\s*<\\s*\\/?([a-z]*)\\s*[^>]*>\\s*$/);return!r||this.Utils.in_array(r,t)?!0:!1},this.printer=function(n,r,i,s,o){this.input=n||\"\",this.output=[],this.indent_character=r,this.indent_string=\"\",this.indent_size=i,this.brace_style=o,this.indent_level=0,this.wrap_line_length=s,this.line_char_count=0;for(var u=0;u<this.indent_size;u++)this.indent_string+=this.indent_character;this.print_newline=function(e,n){this.line_char_count=0,n&&n.length&&(e||\"\\n\"!==n[n.length-1])&&(\"\\n\"!==n[n.length-1]&&(n[n.length-1]=t(n[n.length-1])),n.push(\"\\n\"))},this.print_indentation=function(e){for(var t=0;t<this.indent_level;t++)e.push(this.indent_string),this.line_char_count+=this.indent_string.length},this.print_token=function(t){(!this.is_whitespace(t)||this.output.length)&&((t||\"\"!==t)&&this.output.length&&\"\\n\"===this.output[this.output.length-1]&&(this.print_indentation(this.output),t=e(t)),this.print_token_raw(t))},this.print_token_raw=function(e){this.newlines>0&&(e=t(e)),e&&\"\"!==e&&(e.length>1&&\"\\n\"===e[e.length-1]?(this.output.push(e.slice(0,-1)),this.print_newline(!1,this.output)):this.output.push(e));for(var n=0;n<this.newlines;n++)this.print_newline(n>0,this.output);this.newlines=0},this.indent=function(){this.indent_level++},this.unindent=function(){this.indent_level>0&&this.indent_level--}},this}var u,a,f,l,c,h,p,d,v,m,g;for(r=r||{},void 0!==r.wrap_line_length&&0!==parseInt(r.wrap_line_length,10)||void 0===r.max_char||0===parseInt(r.max_char,10)||(r.wrap_line_length=r.max_char),a=void 0===r.indent_inner_html?!1:r.indent_inner_html,f=void 0===r.indent_size?4:parseInt(r.indent_size,10),l=void 0===r.indent_char?\" \":r.indent_char,h=void 0===r.brace_style?\"collapse\":r.brace_style,c=0===parseInt(r.wrap_line_length,10)?32786:parseInt(r.wrap_line_length||250,10),p=r.unformatted||[\"a\",\"span\",\"img\",\"bdo\",\"em\",\"strong\",\"dfn\",\"code\",\"samp\",\"kbd\",\"var\",\"cite\",\"abbr\",\"acronym\",\"q\",\"sub\",\"sup\",\"tt\",\"i\",\"b\",\"big\",\"small\",\"u\",\"s\",\"strike\",\"font\",\"ins\",\"del\",\"pre\",\"address\",\"dt\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\"],d=void 0===r.preserve_newlines?!0:r.preserve_newlines,v=d?isNaN(parseInt(r.max_preserve_newlines,10))?32786:parseInt(r.max_preserve_newlines,10):0,m=void 0===r.indent_handlebars?!1:r.indent_handlebars,g=void 0===r.end_with_newline?!1:r.end_with_newline,u=new o,u.printer(n,l,f,c,h);;){var y=u.get_token();if(u.token_text=y[0],u.token_type=y[1],\"TK_EOF\"===u.token_type)break;switch(u.token_type){case\"TK_TAG_START\":u.print_newline(!1,u.output),u.print_token(u.token_text),u.indent_content&&(u.indent(),u.indent_content=!1),u.current_mode=\"CONTENT\";break;case\"TK_TAG_STYLE\":case\"TK_TAG_SCRIPT\":u.print_newline(!1,u.output),u.print_token(u.token_text),u.current_mode=\"CONTENT\";break;case\"TK_TAG_END\":if(\"TK_CONTENT\"===u.last_token&&\"\"===u.last_text){var b=u.token_text.match(/\\w+/)[0],w=null;u.output.length&&(w=u.output[u.output.length-1].match(/(?:<|{{#)\\s*(\\w+)/)),(null===w||w[1]!==b)&&u.print_newline(!1,u.output)}u.print_token(u.token_text),u.current_mode=\"CONTENT\";break;case\"TK_TAG_SINGLE\":var E=u.token_text.match(/^\\s*<([a-z-]+)/i);E&&u.Utils.in_array(E[1],p)||u.print_newline(!1,u.output),u.print_token(u.token_text),u.current_mode=\"CONTENT\";break;case\"TK_TAG_HANDLEBARS_ELSE\":u.print_token(u.token_text),u.indent_content&&(u.indent(),u.indent_content=!1),u.current_mode=\"CONTENT\";break;case\"TK_CONTENT\":u.print_token(u.token_text),u.current_mode=\"TAG\";break;case\"TK_STYLE\":case\"TK_SCRIPT\":if(\"\"!==u.token_text){u.print_newline(!1,u.output);var S,x=u.token_text,T=1;\"TK_SCRIPT\"===u.token_type?S=\"function\"==typeof i&&i:\"TK_STYLE\"===u.token_type&&(S=\"function\"==typeof s&&s),\"keep\"===r.indent_scripts?T=0:\"separate\"===r.indent_scripts&&(T=-u.indent_level);var N=u.get_full_indent(T);if(S)x=S(x.replace(/^\\s*/,N),r);else{var C=x.match(/^\\s*/)[0],k=C.match(/[^\\n\\r]*$/)[0].split(u.indent_string).length-1,L=u.get_full_indent(T-k);x=x.replace(/^\\s*/,N).replace(/\\r\\n|\\r|\\n/g,\"\\n\"+L).replace(/\\s+$/,\"\")}x&&(u.print_token_raw(x),u.print_newline(!0,u.output))}u.current_mode=\"TAG\";break;default:\"\"!==u.token_text&&u.print_token(u.token_text)}u.last_token=u.token_type,u.last_text=u.token_text}var A=u.output.join(\"\").replace(/[\\r\\n\\t ]+$/,\"\");return g&&(A+=\"\\n\"),A}if(\"function\"==typeof define&&define.amd)define(\"beautifyhtml\",[\"require\",\"./beautify\",\"./beautify-css\"],function(e){var t=e(\"./beautify\"),r=e(\"./beautify-css\");return{html_beautify:function(e,i){return n(e,i,t.js_beautify,r.css_beautify)}}});else if(\"undefined\"!=typeof exports){var r=require(\"./beautify.js\"),i=require(\"./beautify-css.js\");exports.html_beautify=function(e,t){return n(e,t,r.js_beautify,i.css_beautify)}}else\"undefined\"!=typeof window?window.html_beautify=function(e,t){return n(e,t,window.js_beautify,window.css_beautify)}:\"undefined\"!=typeof global&&(global.html_beautify=function(e,t){return n(e,t,global.js_beautify,global.css_beautify)})}(),function(e){e.fn.gridEditor=function(t){var n=this,r=n.data(\"grideditor\");if(\"getHtml\"==arguments[0]){if(r){r.deinit();var s=n.html();return r.init(!0),s}return n.html()}return\"Device\"==arguments[0]?void (r&&r.switchLayout(arguments[1])):\"editGrid\"==arguments[0]?void (r&&r.editGrid(arguments[1])):\"editText\"==arguments[0]?void (r&&r.editText(arguments[1],arguments[2])):\"createCompControls\"==arguments[0]?void (r&&r.createCompControls()):\"replaceComponent\"==arguments[0]?void (r&&r.replaceComponent(arguments[1],arguments[2])):\"placeComponent\"==arguments[0]?void (r&&r.placeComponent(arguments[1],arguments[2])):(n.each(function(r,s){function o(){if(z=s.addClass(\"ge-canvas\"),$.source_textarea){var t=e($.source_textarea);t.addClass(\"ge-html-output\"),V=t,t.val()&&n.html(t.val())}\"undefined\"!=typeof V&&V.length||(V=e('<textarea class=\"ge-html-output\"/>').insertBefore(z)),W=e('<div class=\"ge-mainControls\" />').insertBefore(V);var r=e('<div class=\"ge-wrapper ge-top\" />').appendTo(W);X=e('<div class=\"ge-addRowGroup btn-group\" />').appendTo(r),e.each($.new_row_layouts,function(t,r){var i=e('<a class=\"btn btn-xs btn-primary\" />').attr(\"title\",\"Add row \"+r.join(\"-\")).on(\"click\",function(){var e=k().appendTo(z);r.forEach(function(t){L(t).appendTo(e)}),u(!0),n._form.Toolbar.$updateViewModelCodePanel(\"addRow! \")}).appendTo(X);i.append('<span class=\"ms-Icon ms-Icon--CirclePlus\"/>');var s=(r.join(\" - \"),'<div class=\"ms-Grid-row ge-row-icon\">');r.forEach(function(e){s+='<div class=\"ms-Grid-col ms-u-sm'+e+'\"/>'}),s+=\"</div>\",i.append(s)});var i=e('<div style=\"display:none;\" class=\"dropdown pull-right ge-layout-mode\"><button type=\"button\" class=\"btn btn-xs btn-primary dropdown-toggle\" data-toggle=\"dropdown\"><span>Desktop</span></button><ul class=\"dropdown-menu\" role=\"menu\"><li><a data-width=\"auto\" title=\"Desktop\"><span>Desktop</span></a></li><li><a title=\"Tablet\"><span>Tablet</span></li><li><a title=\"Phone\"><span>Phone</span></a></li></ul></div>').on(\"click\",\"a\",function(){var t=e(this);B(t.closest(\"li\").index());var n=i.find(\"button\");n.find(\"span\").remove(),n.append(t.find(\"span\").clone())}).appendTo(r),o=e('<div style=\"display:none;\" class=\"btn-group pull-right\"/>').appendTo(r),f=e('<button title=\"Edit Source Code\" type=\"button\" class=\"btn btn-xs btn-primary gm-edit-mode\"><span class=\"glyphicon glyphicon-chevron-left\"></span><span class=\"glyphicon glyphicon-chevron-right\"></span></button>').on(\"click\",function(){f.hasClass(\"active\")?(z.empty().html(V.val()).show(),u(),V.hide()):(a(),V.height(.8*e(window).height()).val(z.html()).show(),z.hide()),f.toggleClass(\"active btn-danger\")}).appendTo(o),l=e('<button title=\"Preview\" type=\"button\" class=\"btn btn-xs btn-primary gm-preview\"><span class=\"glyphicon glyphicon-eye-open\"></span></button>').on(\"mouseenter\",function(){z.removeClass(\"ge-editing\")}).on(\"click\",function(){l.toggleClass(\"active btn-danger\").trigger(\"mouseleave\")}).on(\"mouseleave\",function(){l.hasClass(\"active\")||z.addClass(\"ge-editing\")}).appendTo(o),c=e(window);c.on(\"scroll\",function(e){c.scrollTop()>W.offset().top&&c.scrollTop()<z.offset().top+z.height()?r.hasClass(\"ge-top\")&&r.css({left:r.offset().left,width:r.outerWidth()}).removeClass(\"ge-top\").addClass(\"ge-fixed\"):r.hasClass(\"ge-fixed\")&&r.css({left:\"\",width:\"\"}).removeClass(\"ge-fixed\").addClass(\"ge-top\")}),z.on(\"click\",\".ge-content\",function(t){if(K){var r=I(e(this).data(\"ge-content-type\"));r&&r.init($,e(this),n._form)}})}function u(e){1!=e&&void 0!=t&&(void 0!=t.showGrid&&(J=t.showGrid),void 0!=t.editText&&(K=t.editText),void 0!=t.form&&(n._form=t.form)),A(!0),z.addClass(\"ge-editing\"),b(),O(),D(),f(),l(),v(),B(G),j(J),F(K)}function a(){z.removeClass(\"ge-editing\"),z.find(\".ge-content\").each(function(){var t=e(this);I(t.data(\"ge-content-type\")).deinit($,t)}),z.find(\".ge-tools-drawer\").remove(),_(),N(),C(),p(),M(),A()}function f(){z.find(\".ms-Grid-row\").each(function(){var t=e(this);if(!t.find(\"> .ge-tools-drawer\").length){var r=e('<div class=\"ge-tools-drawer\" />').prependTo(t);m(r,\"Move\",\"ge-move\",\"ms-Icon--Move\"),$.row_tools.forEach(function(e){m(r,e.title||\"\",e.className||\"\",e.iconClass||\"ms-Icon--Wrench\",e.on)}),m(r,\"Remove row\",\"\",\"ms-Icon--Delete\",function(){t.slideUp(function(){t.remove(),n._form.Toolbar.$updateViewModelCodePanel(\"row removed! \")})}),m(r,\"Add column\",\"ge-add-column\",\"ms-Icon--CirclePlus\",function(){t.append(L(3)),u(!0),n._form.Toolbar.$updateViewModelCodePanel(\"column added! \")},\"float:right;\"),y(t,$.row_classes).appendTo(r)}})}function l(){z.find(\".ms-Grid-col\").each(function(){var t=e(this);if(!t.find(\"> .ge-tools-drawer\").length){var r=e('<div class=\"ge-tools-drawer\" />').prependTo(t);m(r,\"Move\",\"ge-move\",\"ms-Icon--Move\"),m(r,\"Make column narrower\\n(hold shift for min)\",\"ge-decrease-col-width\",\"ms-Icon--Remove\",function(e){var r=$.valid_col_sizes,i=Q[G],s=r.indexOf(w(t,i)),o=r[q(s-1,0,r.length-1)];e.shiftKey&&(o=r[0]),S(t,i,Math.max(o,1)),n._form.Toolbar.$updateViewModelCodePanel(\"column narrowed! \")}),m(r,\"Make column wider\\n(hold shift for max)\",\"ge-increase-col-width\",\"ms-Icon--Add\",function(e){var r=$.valid_col_sizes,i=Q[G],s=r.indexOf(w(t,i)),o=q(s+1,0,r.length-1),u=r[o];e.shiftKey&&(u=r[r.length-1]),S(t,i,Math.min(u,Y)),n._form.Toolbar.$updateViewModelCodePanel(\"column widened! \")}),m(r,\"Edit source\",\"\",\"ms-Icon--Edit\",function(){return void n._form.Toolbar.openViewModelCodePanel()},\"float:right;\"),$.col_tools.forEach(function(e){m(r,e.title||\"\",e.className||\"\",e.iconClass||\"ms-Icon--Repair\",e.on)}),m(r,\"Remove col\",\"\",\"ms-Icon--Delete\",function(){t.animate({opacity:\"hide\",width:\"hide\",height:\"hide\"},400,function(){t.remove(),n._form.Toolbar.$updateViewModelCodePanel(\"column removed! \")})}),m(r,\"Add component\",\"ge-add-row\",\"ms-Icon--Boards\",function(){e(t).addClass(\"ui-state-hover\"),n._form.Toolbar.panelOpenPickupPanel(t)},\"float:right;\"),m(r,\"Add row\",\"ge-add-row\",\"ms-Icon--CirclePlus\",function(){var e=k();t.append(e),e.append(L(6)).append(L(6)),u(!0),n._form.Toolbar.$updateViewModelCodePanel(\"row added! \")},\"float:right;\"),y(t,$.col_classes).appendTo(r)}})}function c(t,r){var i=n._form._formGetGuid(),s=i,o=new Sys.StringBuilder;o.append(\"<\"+r.Markup.tag),o.append(\" id='\"+s+\"'\"),o.append(' params= \"');var u=JSON.stringify(r.Params);u=u.substr(1),u=u.substr(0,u.length-1),u=u.replace(/\"/g,\"'\"),o.append(u),o.append('\">'),o.append(\"</\"+r.Markup.tag+\">\");var a=o.toString(),f=a;t.append(f),ko.applyBindings(n._form,e(\"#\"+s)[0]),e(\"#\"+s).addClass(\"ge-component\").draggable({appendTo:\"body\",helper:\"clone\"})}function h(t,r){var i=n._form._formGetGuid(),s=i,o=new Sys.StringBuilder;o.append(\"<\"+r.Markup.tag),o.append(\" id='\"+s+\"'\"),o.append(' params= \"');var u=JSON.stringify(r.Params);u=u.substr(1),u=u.substr(0,u.length-1),u=u.replace(/\"/g,\"'\"),o.append(u),o.append('\">'),o.append(\"</\"+r.Markup.tag+\">\");var a=o.toString(),f=a,l=e(f).insertBefore(e(t));ko.applyBindings(n._form,l[0]),e(\"#\"+s).addClass(\"ge-component\").draggable({appendTo:\"body\",helper:\"clone\"}),window.setTimeout(v,100),e(t).remove(),n._form.Toolbar.$updateViewModelCodePanel(\"replaceComponent! \"+r.Markup.tag)}function p(){z.find(\".ge-component\").each(function(){var t=e(this);t.data(\"draggable\")&&(console.log(\"remove comp draggable\"),t.draggable(\"destroy\"))})}function d(){z.find(\".ge-component\").each(function(){var t=e(this);t.draggable({appendTo:\"body\",helper:\"clone\"})})}function v(){z.find(\".ge-component\").each(function(){var t=e(this),r=t.prop(\"tagName\"),s=r.substring(r.indexOf(\"-\")+1,r.length).toLowerCase(),o=t.children().first();if(!o.find(\"> .ge-tools-drawer\").length){var u=e('<div class=\"ge-tools-drawer\" style=\"margin-left:0px; margin-right: 0px;\"/>').prependTo(o);m(u,\"Move\",\"ge-move\",\"ms-Icon--Move\"),m(u,\"Settings\",\"\",\"ms-Icon--Settings\",function(){var n=a.find(\"#jsoneditor\")[0];if(0==e(n).children().length)t.draggable(\"destroy\"),requirejs([s,\"jsoneditor\"],function(i,o){var u={mode:\"tree\",search:!1,history:!1,name:s,onEditable:function(e){switch(e.field){case s:return!1;case\"Require\":return{field:!1,value:!1};case\"name\":return{field:!1,value:!1};case\"path\":return{field:!1,value:!1};case\"Markup\":return{field:!1,value:!1};case\"tag\":return{field:!1,value:!1};case\"id_prefix\":return{field:!1,value:!1};case\"Params\":return{field:!1,value:!1};default:return{field:!1,value:!0}}}},a=new o(n,u);e(\".jsoneditor-menu\").hide();var f=(i.viewModel.prototype,{}),l=\"{\"+t.attr(\"params\").toString()+\"}\";f.Params=JSON5.parse(l),void 0==f.Markup&&(f.Markup={}),f.Markup.tag=r,f.Markup.id=t.attr(\"id\"),a.set(f),a.expandAll();var c=a.get();e(\".jsoneditor-contextmenu\").hide(),e(n).data({editor:a,schema:c})});else{var i=e(n).data().editor.get(),o=e(n).data().schema,u=JSON.stringify(i),f=JSON.stringify(o);u!=f?h(t,i):t.draggable({appendTo:\"body\",helper:\"clone\"})}a.toggle()}),m(u,\"Edit source\",\"\",\"ms-Icon--Edit\",function(){for(i=0;i<n._form._designComponents().length;i++){var e=n._form._designComponents()[i];if(e.Title==s){var t=e.Require.path;return void n._form.Toolbar.openCodePanel(s,t)}}},\"float:right;\"),m(u,\"Remove component\",\"\",\"ms-Icon--Delete\",function(){t.animate({opacity:\"hide\",width:\"hide\",height:\"hide\"},400,function(){t.remove(),n._form.Toolbar.$updateViewModelCodePanel(\"component removed! \")})});var a=g(t,$.row_classes).appendTo(u)}})}function m(t,n,r,i,s,o){var u=o?o:\"\",a=e('<a title=\"'+n+'\" class=\"'+r+'\" style=\"'+u+'\"><span class=\"ms-Icon '+i+'\"></span></a>').appendTo(t);\"function\"==typeof s&&a.on(\"click\",s),\"object\"==typeof s&&e.each(s,function(e,t){a.on(e,t)})}function g(t,n){var r=e('<div class=\"ge-details\" />');return e('<div id=\"jsoneditor\" style\"width: 100%; height: 500px;\"></div>').appendTo(r),r}function y(t,n){var r=e('<div class=\"ge-details\" />');e('<input class=\"ge-id\" />').attr(\"placeholder\",\"id\").val(t.attr(\"id\")).attr(\"title\",\"Set a unique identifier\").appendTo(r);var i=e('<div class=\"btn-group\" />').appendTo(r);return n.forEach(function(n){var r=e('<a class=\"btn btn-xs btn-default\" />').html(n.label).attr(\"title\",n.title?n.title:'Toggle \"'+n.label+'\" styling').toggleClass(\"active btn-primary\",t.hasClass(n.cssClass)).on(\"click\",function(){r.toggleClass(\"active btn-primary\"),t.toggleClass(n.cssClass,r.hasClass(\"active\"))}).appendTo(i)}),r}function b(){z.find('.ms-Grid-col, div[class*=\"ms-u-\"]').each(function(){var t=e(this),n=2,r=E(t);r.length&&(n=r[0].size);var i=t.attr(\"class\");Q.forEach(function(e){-1==i.indexOf(e)&&t.addClass(e+n)}),t.addClass(\"ms-Grid-col\")})}function w(e,t){for(var n=E(e),r=0;r<n.length;r++)if(n[r].colClass==t)return n[r].size;return n.length?n[0].size:null}function E(e){var t=[];return Q.forEach(function(n){var r=new RegExp(n+\"(\\\\d+)\",\"i\");r.test(e.attr(\"class\"))&&t.push({colClass:n,size:parseInt(r.exec(e.attr(\"class\"))[1])})}),t}function S(e,t,n){var r=new RegExp(\"(\"+t+\"(\\\\d+))\",\"i\"),i=r.exec(e.attr(\"class\"));i&&parseInt(i[2])!==n?e.switchClass(i[1],t+n,50):e.addClass(t+n)}function x(){function e(e,t){t.placeholder.css({height:t.item.outerHeight()})}z.find(\".ms-Grid-row\").sortable({items:\"> .ms-Grid-col\",connectWith:\".ge-canvas .ms-Grid-row\",handle:\"> .ge-tools-drawer .ge-move\",start:e,helper:\"clone\"}),z.add(z.find(\".ms-Grid-col\")).sortable({items:\"> .ms-Grid-row, > .ge-content\",connectsWith:\".ge-canvas, .ge-canvas .ms-Grid-col\",handle:\"> .ge-tools-drawer .ge-move\",start:e,helper:\"clone\"})}function T(){z.find(\".ge-component\").draggable({appendTo:\"body\",helper:\"clone\"}),z.find(\".ms-Grid-col\").droppable({hoverClass:\"ui-state-hover\",drop:function(t,r){e(r.draggable[0]).appendTo(this),n._form.Toolbar.$updateViewModelCodePanel(\"dropped! \"+r.draggable[0])}})}function N(){try{z.add(z.find(\".ms-Grid-col\")).add(z.find(\".ms-Grid-row\")).sortable(\"destroy\")}catch(e){}}function C(){try{z.find(\".ge-component\").draggable(\"destroy\")}catch(e){}try{z.find(\".ms-Grid-col\").droppable(\"destroy\")}catch(e){}}function k(){return e('<div class=\"ms-Grid-row\" />')}function L(t){return e(\"<div/>\").addClass(Q.map(function(e){return e+=t}).join(\" \")).append(H().html(I($.content_types[0]).initialContent))}function A(t){$.custom_filter.length&&e.each($.custom_filter,function(e,n){\"string\"==typeof n&&(n=window[n]),n(z,t)})}function O(){var t=e(z).find(\"*\").filter(function(){return/^component\\-/i.test(this.nodeName)});t.each(function(){e(this).addClass(\"ge-component\")})}function M(){var t=e(z).find(\"*\").filter(function(){return/^component\\-/i.test(this.nodeName)});t.each(function(){e(this).removeClass(\"ge-component\")})}function _(){e(\".ge-content\").replaceWith(function(){var t=e(this),n=e();return t.children().each(function(){var t=e(this);n=n.add(t)}),n})}function D(){z.find(\".ms-Grid-col\").each(function(){var t=e(this),n=e();t.children().each(function(){var t=e(this);t.is(\".ms-Grid-row, .ge-tools-drawer, .ge-content\")?P(n):n=n.add(t)}),P(n)})}function P(t){if(t.length){var n=H().insertAfter(t.last());t.appendTo(n),t=e()}}function H(){return e(\"<div/>\").addClass(\"ge-content ge-content-type-\"+$.content_types[0]).attr(\"data-ge-content-type\",$.content_types[0])}function B(e){G=e;var t=[\"ge-layout-desktop\",\"ge-layout-tablet\",\"ge-layout-phone\"];t.forEach(function(t,n){z.toggleClass(t,n==e)})}function j(t){t?(z.addClass(\"ge-editing\"),e(\".ge-mainControls\").show(),J=!0,x(),T(),d()):(z.removeClass(\"ge-editing\"),e(\".ge-mainControls\").hide(),J=!1,N(),C(),p())}function F(t,n){t?K=!0:(K=!1,z.find(\".ge-content\").each(function(){var t=e(this);I(t.data(\"ge-content-type\")).deinit($,t,n)}))}function I(t){return e.fn.gridEditor.RTEs[t]}function q(e,t,n){return Math.min(n,Math.max(t,e))}if(s=e(s),s.children().length&&!s.find(\"div.ms-Grid-row\").length){var R=s.children(),U=e('<div class=\"ms-Grid-row\"><div class=\"ms-u-lg12\"/></div>').appendTo(s);U.find(\".ms-u-lg12\").append(R)}var z,W,X,V,$=e.extend({new_row_layouts:[[12],[6,6],[4,4,4],[3,3,3,3],[2,2,2,2,2,2],[2,8,2],[4,8],[8,4]],row_classes:[{label:\"Example class\",cssClass:\"example-class\"}],col_classes:[{label:\"Example class\",cssClass:\"example-class\"}],col_tools:[],row_tools:[],custom_filter:\"\",content_types:[\"tinymce\"],valid_col_sizes:[1,2,3,4,5,6,7,8,9,10,11,12],source_textarea:\"\",layout_devNumber:0},t),J=!1,K=!1,Q=[\"ms-u-lg\",\"ms-u-md\",\"ms-u-sm\"],G=$.layout_devNumber,Y=12;o(),u(t),s.data(\"grideditor\",{init:u,deinit:a,switchLayout:B,editGrid:j,editText:F,createCompControls:v,replaceComponent:h,placeComponent:c})}),n)},e.fn.gridEditor.RTEs={}}(jQuery),function(){$.fn.gridEditor.RTEs.ckeditor={init:function(e,t){window.CKEDITOR||console.error(\"CKEditor not available! Make sure you loaded the ckeditor and jquery adapter js files.\");var n=this;t.each(function(){var t=$(this);if(!t.hasClass(\"active\")){t.html()==n.initialContent&&t.html(\"&nbsp;\"),t.addClass(\"active\").attr(\"contenteditable\",\"true\");var r=$.extend(e.ckeditor&&e.ckeditor.config?e.ckeditor.config:{},{on:{instanceReady:function(e){i.focus()}}}),i=CKEDITOR.inline(t.get(0),r)}})},deinit:function(e,t){t.filter(\".active\").each(function(){var e=$(this);$.each(CKEDITOR.instances,function(e,t){t.destroy()}),e.removeClass(\"active cke_focus\").removeAttr(\"id\").removeAttr(\"style\").removeAttr(\"spellcheck\").removeAttr(\"contenteditable\")})},initialContent:\"<p>Lorem initius... </p>\"}}(),function(){$.fn.gridEditor.RTEs.summernote={init:function(e,t,n){requirejs([],function(){var r=this;t.each(function(){var t=$(this);if(!t.hasClass(\"active\")){t.html()==r.initialContent&&t.html(\"\"),t.addClass(\"active\");var i=$.extend(e.summernote&&e.summernote.config?e.summernote.config:{},{tabsize:2,airMode:!0,callbacks:{onInit:function(){try{e.summernote.config.callbacks.onInit.call(this)}catch(r){}if(void 0!=n){var i=t.parent().find(\".note-editor\")[0];$(i).find(\"component-column-text\").each(function(){var e=$(this);e.empty();var t=ko.observable(n);ko.applyBindings(t,this)})}t.summernote(\"focus\")}}});t.summernote(i)}})})},deinit:function(e,t,n){t.filter(\".active\").each(function(){var e=$(this);e.summernote(\"destroy\"),e.removeClass(\"active\").removeAttr(\"id\").removeAttr(\"style\").removeAttr(\"spellcheck\"),void 0!=n&&e.find(\"component-column-text\").each(function(){var e=$(this);e.empty();var t=ko.observable(n);ko.applyBindings(t,this)})})},initialContent:\"<p>Lorem ipsum dolores</p>\"}}(),function(){$.fn.gridEditor.RTEs.tinymce={init:function(e,t){window.tinymce||console.error(\"tinyMCE not available! Make sure you loaded the tinyMCE js file.\"),t.tinymce||console.error(\"tinyMCE jquery integration not available! Make sure you loaded the jquery integration plugin.\");var n=this;t.each(function(){var t=$(this);if(!t.hasClass(\"active\")){t.html()==n.initialContent&&t.html(\"\"),t.addClass(\"active\");var r=$.extend(e.tinymce&&e.tinymce.config?e.tinymce.config:{},{inline:!0,oninit:function(t){try{e.tinymce.config.oninit(t)}catch(n){}$(\"#\"+t.settings.id).focus()}});t.tinymce(r)}})},deinit:function(e,t){t.filter(\".active\").each(function(){var e=$(this),t=e.tinymce();t&&t.remove(),e.removeClass(\"active\").removeAttr(\"id\").removeAttr(\"style\").removeAttr(\"spellcheck\")})},initialContent:\"<p>Lorem ipsum dolores</p>\"}}(),define(\"grideditor\",function(){}),define(\"text\",[\"module\"],function(e){\"use strict\";var t,n,r,i,s,o=[\"Msxml2.XMLHTTP\",\"Microsoft.XMLHTTP\",\"Msxml2.XMLHTTP.4.0\"],u=/^\\s*<\\?xml(\\s)+version=[\\'\\\"](\\d)*.(\\d)*[\\'\\\"](\\s)*\\?>/im,a=/<body[^>]*>\\s*([\\s\\S]+)\\s*<\\/body>/im,f=\"undefined\"!=typeof location&&location.href,l=f&&location.protocol&&location.protocol.replace(/\\:/,\"\"),c=f&&location.hostname,h=f&&(location.port||void 0),p={},d=e.config&&e.config()||{};return t={version:\"2.0.14\",strip:function(e){if(e){e=e.replace(u,\"\");var t=e.match(a);t&&(e=t[1])}else e=\"\";return e},jsEscape:function(e){return e.replace(/(['\\\\])/g,\"\\\\$1\").replace(/[\\f]/g,\"\\\\f\").replace(/[\\b]/g,\"\\\\b\").replace(/[\\n]/g,\"\\\\n\").replace(/[\\t]/g,\"\\\\t\").replace(/[\\r]/g,\"\\\\r\").replace(/[\\u2028]/g,\"\\\\u2028\").replace(/[\\u2029]/g,\"\\\\u2029\")},createXhr:d.createXhr||function(){var e,t,n;if(\"undefined\"!=typeof XMLHttpRequest)return new XMLHttpRequest;if(\"undefined\"!=typeof ActiveXObject)for(t=0;3>t;t+=1){n=o[t];try{e=new ActiveXObject(n)}catch(r){}if(e){o=[n];break}}return e},parseName:function(e){var t,n,r,i=!1,s=e.lastIndexOf(\".\"),o=0===e.indexOf(\"./\")||0===e.indexOf(\"../\");return-1!==s&&(!o||s>1)?(t=e.substring(0,s),n=e.substring(s+1)):t=e,r=n||t,s=r.indexOf(\"!\"),-1!==s&&(i=\"strip\"===r.substring(s+1),r=r.substring(0,s),n?n=r:t=r),{moduleName:t,ext:n,strip:i}},xdRegExp:/^((\\w+)\\:)?\\/\\/([^\\/\\\\]+)/,useXhr:function(e,n,r,i){var s,o,u,a=t.xdRegExp.exec(e);return a?(s=a[2],o=a[3],o=o.split(\":\"),u=o[1],o=o[0],!(s&&s!==n||o&&o.toLowerCase()!==r.toLowerCase()||(u||o)&&u!==i)):!0},finishLoad:function(e,n,r,i){r=n?t.strip(r):r,d.isBuild&&(p[e]=r),i(r)},load:function(e,n,r,i){if(i&&i.isBuild&&!i.inlineText)return void r();d.isBuild=i&&i.isBuild;var s=t.parseName(e),o=s.moduleName+(s.ext?\".\"+s.ext:\"\"),u=n.toUrl(o),a=d.useXhr||t.useXhr;return 0===u.indexOf(\"empty:\")?void r():void (!f||a(u,l,c,h)?t.get(u,function(n){t.finishLoad(e,s.strip,n,r)},function(e){r.error&&r.error(e)}):n([o],function(e){t.finishLoad(s.moduleName+\".\"+s.ext,s.strip,e,r)}))},write:function(e,n,r,i){if(p.hasOwnProperty(n)){var s=t.jsEscape(p[n]);r.asModule(e+\"!\"+n,\"define(function () { return '\"+s+\"';});\\n\")}},writeFile:function(e,n,r,i,s){var o=t.parseName(n),u=o.ext?\".\"+o.ext:\"\",a=o.moduleName+u,f=r.toUrl(o.moduleName+u)+\".js\";t.load(a,r,function(n){var r=function(e){return i(f,e)};r.asModule=function(e,t){return i.asModule(e,f,t)},t.write(e,a,r,s)},s)}},\"node\"===d.env||!d.env&&\"undefined\"!=typeof process&&process.versions&&process.versions.node&&!process.versions[\"node-webkit\"]&&!process.versions[\"atom-shell\"]?(n=require.nodeRequire(\"fs\"),t.get=function(e,t,r){try{var i=n.readFileSync(e,\"utf8\");\"﻿\"===i[0]&&(i=i.substring(1)),t(i)}catch(s){r&&r(s)}}):\"xhr\"===d.env||!d.env&&t.createXhr()?t.get=function(e,n,r,i){var s,o=t.createXhr();if(o.open(\"GET\",e,!0),i)for(s in i)i.hasOwnProperty(s)&&o.setRequestHeader(s.toLowerCase(),i[s]);d.onXhr&&d.onXhr(o,e),o.onreadystatechange=function(t){var i,s;4===o.readyState&&(i=o.status||0,i>399&&600>i?(s=new Error(e+\" HTTP status: \"+i),s.xhr=o,r&&r(s)):n(o.responseText),d.onXhrComplete&&d.onXhrComplete(o,e))},o.send(null)}:\"rhino\"===d.env||!d.env&&\"undefined\"!=typeof Packages&&\"undefined\"!=typeof java?t.get=function(e,t){var n,r,i=\"utf-8\",s=new java.io.File(e),o=java.lang.System.getProperty(\"line.separator\"),u=new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(s),i)),a=\"\";try{for(n=new java.lang.StringBuffer,r=u.readLine(),r&&r.length()&&65279===r.charAt(0)&&(r=r.substring(1)),null!==r&&n.append(r);null!==(r=u.readLine());)n.append(o),n.append(r);a=String(n.toString())}finally{u.close()}t(a)}:(\"xpconnect\"===d.env||!d.env&&\"undefined\"!=typeof Components&&Components.classes&&Components.interfaces)&&(r=Components.classes,i=Components.interfaces,Components.utils[\"import\"](\"resource://gre/modules/FileUtils.jsm\"),s=\"@mozilla.org/windows-registry-key;1\"in r,t.get=function(e,t){var n,o,u,a={};s&&(e=e.replace(/\\//g,\"\\\\\")),u=new FileUtils.File(e);try{n=r[\"@mozilla.org/network/file-input-stream;1\"].createInstance(i.nsIFileInputStream),n.init(u,1,0,!1),o=r[\"@mozilla.org/intl/converter-input-stream;1\"].createInstance(i.nsIConverterInputStream),o.init(n,\"utf-8\",n.available(),i.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER),o.readString(n.available(),a),o.close(),n.close(),t(a.value)}catch(f){throw new Error((u&&u.path||\"\")+\": \"+f)}}),t}),define(\"text!../Runtime/source/toolbar-pickuppanel.html\",[],function(){return'<style type=\"text/css\">\\r\\n.validationMessage {\\r\\n\tcolor: red;\\r\\n\tfont-size: 11px;\\r\\n}\\r\\ninput.validationElement {\\r\\n    border: 1px solid #cc0000;\\r\\n}\\r\\n.ms-Dropdown {\\r\\n  font-family: \\'Segoe UI WestEuropean\\', \\'Segoe UI\\', -apple-system, BlinkMacSystemFont, \\'Roboto\\', \\'Helvetica Neue\\', sans-serif;\\r\\n  -webkit-font-smoothing: antialiased;\\r\\n  box-sizing: border-box;\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n  box-shadow: none;\\r\\n  color: #333333;\\r\\n  font-size: 14px;\\r\\n  font-weight: 400;\\r\\n  margin-bottom: 10px;\\r\\n  position: relative;\\r\\n  outline: 0;\\r\\n}\\r\\n\\r\\n.ms-Dropdown:hover .ms-Dropdown-title,\\r\\n.ms-Dropdown:hover .ms-Dropdown-caretDown,\\r\\n.ms-Dropdown:focus .ms-Dropdown-title,\\r\\n.ms-Dropdown:focus .ms-Dropdown-caretDown,\\r\\n.ms-Dropdown:active .ms-Dropdown-title,\\r\\n.ms-Dropdown:active .ms-Dropdown-caretDown {\\r\\n  color: #000000;\\r\\n}\\r\\n\\r\\n.ms-Dropdown:hover .ms-Dropdown-title,\\r\\n.ms-Dropdown:active .ms-Dropdown-title {\\r\\n  border-color: #767676;\\r\\n}\\r\\n\\r\\n.ms-Dropdown:focus .ms-Dropdown-title {\\r\\n  border-color: #0078d7;\\r\\n}\\r\\n\\r\\n.ms-Dropdown .ms-Label {\\r\\n  display: inline-block;\\r\\n  margin-bottom: 8px;\\r\\n}\\r\\n\\r\\n.ms-Dropdown.is-disabled .ms-Dropdown-title {\\r\\n  background-color: #f4f4f4;\\r\\n  border-color: #f4f4f4;\\r\\n  color: #a6a6a6;\\r\\n  cursor: default;\\r\\n}\\r\\n\\r\\n@media screen and (-ms-high-contrast: active) {\\r\\n  .ms-Dropdown.is-disabled .ms-Dropdown-title {\\r\\n    border-color: #00ff00;\\r\\n    color: #00ff00;\\r\\n  }\\r\\n}\\r\\n\\r\\n@media screen and (-ms-high-contrast: black-on-white) {\\r\\n  .ms-Dropdown.is-disabled .ms-Dropdown-title {\\r\\n    border-color: #600000;\\r\\n    color: #600000;\\r\\n  }\\r\\n}\\r\\n\\r\\n.ms-Dropdown.is-disabled .ms-Dropdown-caretDown {\\r\\n  color: #a6a6a6;\\r\\n}\\r\\n\\r\\n@media screen and (-ms-high-contrast: active) {\\r\\n  .ms-Dropdown.is-disabled .ms-Dropdown-caretDown {\\r\\n    color: #00ff00;\\r\\n  }\\r\\n}\\r\\n\\r\\n@media screen and (-ms-high-contrast: black-on-white) {\\r\\n  .ms-Dropdown.is-disabled .ms-Dropdown-caretDown {\\r\\n    color: #600000;\\r\\n  }\\r\\n}\\r\\n\\r\\n.ms-Dropdown.is-open .ms-Dropdown-items {\\r\\n  display: block;\\r\\n  position: absolute;\\r\\n}\\r\\n\\r\\n.ms-Panel .ms-Dropdown-items {\\r\\n  box-shadow: none;\\r\\n  overflow-y: auto;\\r\\n  padding-top: 4px;\\r\\n  max-height: 100%;\\r\\n}\\r\\n\\r\\n.ms-Panel .ms-Dropdown-items .ms-Dropdown-item {\\r\\n  padding: 0 16px;\\r\\n}\\r\\n\\r\\n.ms-Panel .ms-Dropdown-items::before {\\r\\n  content: none;\\r\\n  border: 0;\\r\\n}\\r\\n\\r\\n.ms-Dropdown-select {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.ms-Dropdown-caretDown {\\r\\n  color: #666666;\\r\\n  font-size: 17px;\\r\\n  position: absolute;\\r\\n  right: 9px;\\r\\n  bottom: 5px;\\r\\n  z-index: 1;\\r\\n  pointer-events: none;\\r\\n}\\r\\n\\r\\n.ms-Dropdown-title {\\r\\n  box-sizing: border-box;\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n  box-shadow: none;\\r\\n  background: #ffffff;\\r\\n  border: 1px solid #c8c8c8;\\r\\n  cursor: pointer;\\r\\n  display: block;\\r\\n  height: 32px;\\r\\n  line-height: 30px;\\r\\n  padding: 0 32px 0 10px;\\r\\n  position: relative;\\r\\n  overflow: hidden;\\r\\n}\\r\\n\\r\\n.ms-Dropdown-items {\\r\\n  box-sizing: border-box;\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n  box-shadow: none;\\r\\n  box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.4);\\r\\n  background-color: #ffffff;\\r\\n  display: none;\\r\\n  list-style-type: none;\\r\\n  position: absolute;\\r\\n  width: 100%;\\r\\n  max-height: 200px;\\r\\n  z-index: 400;\\r\\n  overflow-y: scroll;\\r\\n  top: auto;\\r\\n  right: auto;\\r\\n  bottom: auto;\\r\\n  left: auto;\\r\\n  max-width: 100%;\\r\\n}\\r\\n\\r\\n.ms-Dropdown-items::before {\\r\\n  content: \\'\\';\\r\\n  position: absolute;\\r\\n  z-index: -1;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n  bottom: 0;\\r\\n  border: 1px solid #eaeaea;\\r\\n}\\r\\n\\r\\n@media screen and (-ms-high-contrast: active) {\\r\\n  .ms-Dropdown-items {\\r\\n    border: 1px solid #ffffff;\\r\\n  }\\r\\n}\\r\\n\\r\\n@media screen and (-ms-high-contrast: black-on-white) {\\r\\n  .ms-Dropdown-items {\\r\\n    border: 1px solid #000000;\\r\\n  }\\r\\n}\\r\\n\\r\\n.ms-Dropdown-item {\\r\\n  box-sizing: border-box;\\r\\n  cursor: pointer;\\r\\n  display: block;\\r\\n  height: 40px;\\r\\n  line-height: 38px;\\r\\n  padding: 0 10px;\\r\\n  position: relative;\\r\\n  border: 1px solid transparent;\\r\\n  white-space: nowrap;\\r\\n}\\r\\n\\r\\n@media screen and (-ms-high-contrast: active) {\\r\\n  .ms-Dropdown-item {\\r\\n    border-color: #000000;\\r\\n  }\\r\\n}\\r\\n\\r\\n@media screen and (-ms-high-contrast: black-on-white) {\\r\\n  .ms-Dropdown-item {\\r\\n    border-color: #ffffff;\\r\\n  }\\r\\n}\\r\\n\\r\\n.ms-Dropdown-item:first-child,\\r\\n.ms-Dropdown-item:last-child {\\r\\n  height: 39px;\\r\\n}\\r\\n\\r\\n.ms-Dropdown-item:hover {\\r\\n  background-color: #eaeaea;\\r\\n  color: #000000;\\r\\n}\\r\\n\\r\\n@media screen and (-ms-high-contrast: active) {\\r\\n  .ms-Dropdown-item:hover {\\r\\n    background-color: #1aebff;\\r\\n    border-color: #1aebff;\\r\\n    color: #000000;\\r\\n  }\\r\\n\\r\\n  .ms-Dropdown-item:hover:focus {\\r\\n    border-color: #000000;\\r\\n  }\\r\\n}\\r\\n\\r\\n@media screen and (-ms-high-contrast: black-on-white) {\\r\\n  .ms-Dropdown-item:hover {\\r\\n    background-color: #37006e;\\r\\n    border-color: #37006e;\\r\\n    color: #ffffff;\\r\\n  }\\r\\n}\\r\\n\\r\\n.ms-Dropdown-item:active {\\r\\n  background-color: #eaeaea;\\r\\n  border-color: #0078d7;\\r\\n  color: #000000;\\r\\n}\\r\\n\\r\\n.ms-Dropdown-item.is-disabled {\\r\\n  background: #ffffff;\\r\\n  color: #a6a6a6;\\r\\n  cursor: default;\\r\\n  line-height: 40px;\\r\\n}\\r\\n\\r\\n.ms-Dropdown-item.is-selected,\\r\\n.ms-Dropdown-item.ms-Dropdown-item--selected {\\r\\n  background-color: #c7e0f4;\\r\\n  color: #000000;\\r\\n  line-height: 40px;\\r\\n}\\r\\n\\r\\n.ms-Dropdown-item.is-selected:hover,\\r\\n.ms-Dropdown-item.ms-Dropdown-item--selected:hover {\\r\\n  background-color: #c7e0f4;\\r\\n}\\r\\n\\r\\n@media screen and (-ms-high-contrast: active) {\\r\\n  .ms-Dropdown-item.is-selected,\\r\\n  .ms-Dropdown-item.ms-Dropdown-item--selected {\\r\\n    background-color: #1aebff;\\r\\n    border-color: #1aebff;\\r\\n    color: #000000;\\r\\n  }\\r\\n\\r\\n  .ms-Dropdown-item.is-selected:focus,\\r\\n  .ms-Dropdown-item.ms-Dropdown-item--selected:focus {\\r\\n    border-color: #000000;\\r\\n  }\\r\\n}\\r\\n\\r\\n@media screen and (-ms-high-contrast: black-on-white) {\\r\\n  .ms-Dropdown-item.is-selected,\\r\\n  .ms-Dropdown-item.ms-Dropdown-item--selected {\\r\\n    background-color: #37006e;\\r\\n    border-color: #37006e;\\r\\n    color: #ffffff;\\r\\n  }\\r\\n}\\r\\n</style>\\r\\n<script type=\"text/html\" id=\"panel-template\">\\r\\n\t<div class=\"ms-Pivot  ms-Pivot--large ms-Pivot--tabs\">\\r\\n\t  <ul class=\"ms-Pivot-links\">\\r\\n\t\t<li class=\"ms-Pivot-link is-selected\" data-content=\"columns\" title=\"Columns\" tabindex=\"1\">\\r\\n\t\t  Columns\\r\\n\t\t</li>\\r\\n\t\t<li class=\"ms-Pivot-link \" data-content=\"components\" title=\"Components\" tabindex=\"1\">\\r\\n\t\t  Components\\r\\n\t\t</li>\\r\\n\t\t<li class=\"ms-Pivot-link\" tabindex=\"1\">\\r\\n\t\t  <i class=\"ms-Pivot-ellipsis ms-Icon ms-Icon--More\"></i>\\r\\n\t\t</li>\\r\\n\t  </ul>\\r\\n\t  <div class=\"ms-Pivot-content\" data-content=\"columns\">\\r\\n\t\t<div>\\r\\n\t\t\t<div data-bind=\\'columnsGrid: columnsGridViewModel\\'></div>\\r\\n\t\t</div>\\r\\n\t\t<br>\\r\\n\t\t<div>\\r\\n\t\t\t<button data-bind=\"click: placeComponents\" style=\"float:left;\" class=\"ms-Button ms-Button--primary\"><span class=\"ms-Button-label\">Place on Form</span></button>\\r\\n\t\t\t<button data-bind=\"click: panelClosePickupPanel\" style=\"float:right;\" class=\"ms-Button ms-Button--primary\"><span class=\"ms-Button-label\">Close</span></button>\t\\r\\n\t\t</div>\\r\\n\t\t<br>\\r\\n\t\t<br>\\r\\n\t  </div>\\r\\n\t  <div class=\"ms-Pivot-content\" data-content=\"components\">\\r\\n\t\t<div data-bind=\"visible: panelNewForm\">\\r\\n\t\t\t<div class=\"Intro\">\\r\\n\t\t\t  <h2 class=\"Intro-title ms-fontSize-xl\">New Component</h2>\\r\\n\t\t\t</div>\\r\\n\t\t\t<div class=\"ms-TextField is-required\">\\r\\n\t\t\t\t<label class=\"ms-Label\">Name</label>\\r\\n\t\t\t\t<input class=\"ms-TextField-field\" type=\"text\" data-bind=\"value: newcomponent, valueUpdate: \\'afterkeydown\\'\">\\r\\n\t\t\t</div>\t\\r\\n            <div  tabindex=\"0\">\\r\\n\t\t\t\t<label class=\"ms-Label\">Prototype</label>\\r\\n\t\t\t\t<i class=\"ms-Dropdown-caretDown ms-Icon ms-Icon--caretDown\"></i>\\r\\n\t\t\t\t<select data-bind=\"options: protoComps,\\r\\n\t\t\t\t\t   optionsText: \\'Title\\',\\r\\n\t\t\t\t\t   value: prototypeComponent,\\r\\n\t\t\t\t\t   optionsCaption: \\'Select prototype component...\\'\">\\r\\n\t\t\t\t</select>\\r\\n\t\t\t</div>\t\t\t\\r\\n\t\t\t\\r\\n            <div class=\"ms-Dropdown\" tabindex=\"0\">\\r\\n\t\t\t\t<label class=\"ms-Label\">Prototype</label>\\r\\n\t\t\t\t<i class=\"ms-Dropdown-caretDown ms-Icon ms-Icon--caretDown\"></i>\\r\\n\t\t\t\t<select class=\"ms-Dropdown-select\" data-bind=\"options: form()._designComponents,\\r\\n\t\t\t\t\t   optionsText: \\'Title\\',\\r\\n\t\t\t\t\t   value: selectedcomponent,\\r\\n\t\t\t\t\t   optionsCaption: \\'Select prototype component...\\'\">\\r\\n\t\t\t\t</select>\\r\\n\t\t\t</div>\t\t\t\\r\\n\t\t\t<div>\t\t\t\\r\\n\t\t\t\t<br>\\r\\n\t\t\t\t<br>\\r\\n\t\t\t\t<br>\\r\\n\t\t\t\t<br>\\r\\n\t\t\t\t<br>\\r\\n\t\t\t\t<br>\\r\\n\t\t\t\t<br>\\r\\n\t\t\t\t<button data-bind=\"css: enablePanelButtonAddComponentClick, click: panelButtonAddComponentClick\" style=\"float:left;\" class=\"ms-Button ms-Button--primary\"><span class=\"ms-Button-label\">Create</span></button>\\r\\n\t\t\t\t<button data-bind=\"click: panelButtonCancelComponentClick\" style=\"float:right;\" class=\"ms-Button ms-Button--primary\"><span class=\"ms-Button-label\">Cancel</span></button>\\r\\n\t\t\t</div>\t\t\t\\r\\n\t\t</div>\\r\\n\t\t<div data-bind=\"visible: panelListForm\">\\r\\n\t\t\t<div>\\r\\n\t\t\t\t<button class=\"ms-Button ms-Button--hero\" data-bind=\"click: panelButtonNewClick\">\\r\\n\t\t\t\t\t<span class=\"ms-Button-icon\"><i class=\"ms-Icon ms-Icon--Add\"></i></span>\\r\\n\t\t\t\t\t<span class=\"ms-Button-label\">New component</span>\\r\\n\t\t\t\t</button>\\r\\n\t\t\t\t<br>\\r\\n\t\t\t</div>\\r\\n\t\t\t<div>\\r\\n\t\t\t\t<div data-bind=\\'componentsGrid: componentsGridViewModel\\'></div>\\r\\n\t\t\t</div>\\r\\n\t\t\t<br/>\\r\\n\t\t\t<div>\\r\\n\t\t\t\t<button data-bind=\"click: placeComponents\" style=\"float:left;\" class=\"ms-Button ms-Button--primary\"><span class=\"ms-Button-label\">Place on Form</span></button>\\r\\n\t\t\t\t<button data-bind=\"click: panelClosePickupPanel\" style=\"float:right;\" class=\"ms-Button ms-Button--primary\"><span class=\"ms-Button-label\">Close</span></button>\t\\r\\n\t\t\t</div>\\r\\n\t\t</div>\\r\\n\t  </div>\\r\\n\t</div>\t\\r\\n</script>\\r\\n<div class=\"ms-PanelDefaultExample\">\\r\\n  <!-- Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information. -->\\r\\n  <div class=\"ms-Panel ms-Panel--md\">\\r\\n    <button class=\"ms-Panel-closeButton ms-PanelAction-close\">\\r\\n      <i class=\"ms-Panel-closeIcon ms-Icon ms-Icon--Cancel\"></i>\\r\\n    </button>\\r\\n    <div class=\"ms-Panel-contentInner\">\\r\\n      <div class=\"ms-Panel-content\">\\r\\n\t\t<div data-bind=\"template: {name: \\'panel-template\\'}\" id=\"panel-container\"></div>\t\t\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n'}),define(\"toolbar-pickuppanel\",[\"text!./../Runtime/source/toolbar-pickuppanel.html\"],function(e){function t(e){var t=this;t.Toolbar=null,t.tabReset=ko.observable(!0),t.tabResetClick=function(){t.tabReset(!0),t.tabSourceControl(!1),t.tabMore(!1),t.tabPublish(!1),t.tabSourceControl2(!1),t.tabMore2(!1),t.tabPush(!1),t.tabPull(!1),t.tabSourceControl3(!1),t.tabMore3(!1)},t.tabSourceControl=ko.observable(!1),t.tabSourceControlClick=function(){t.tabReset(!1),t.tabSourceControl(!0),t.tabMore(!1),t.tabPublish(!1),t.tabSourceControl2(!1),t.tabMore2(!1),t.tabPush(!1),t.tabPull(!1),t.tabSourceControl3(!1),t.tabMore3(!1)},t.tabSourceControl2=ko.observable(!1),t.tabSourceControl2Click=function(){t.tabReset(!1),t.tabSourceControl(!1),t.tabMore(!1),t.tabPublish(!1),t.tabSourceControl2(!0),t.tabMore2(!1),t.tabPush(!1),t.tabPull(!1),t.tabSourceControl3(!1),t.tabMore3(!1)},t.tabSourceControl3=ko.observable(!1),t.tabSourceControl3Click=function(){t.tabReset(!1),t.tabSourceControl(!1),t.tabMore(!1),t.tabPublish(!1),t.tabSourceControl2(!1),t.tabMore2(!1),t.tabPush(!1),t.tabPull(!1),t.tabSourceControl3(!0),t.tabMore3(!1)},t.tabMore=ko.observable(!1),t.tabMoreClick=function(){t.tabReset(!1),t.tabSourceControl(!1),t.tabMore(!0),t.tabPublish(!1),t.tabSourceControl2(!1),t.tabMore2(!1),t.tabPush(!1),t.tabPull(!1),t.tabSourceControl3(!1),t.tabMore3(!1)},t.tabMore2=ko.observable(!1),t.tabMore2Click=function(){t.tabReset(!1),t.tabSourceControl(!1),t.tabMore(!1),t.tabPublish(!1),t.tabSourceControl2(!1),t.tabMore2(!0),t.tabPush(!1),t.tabPull(!1),t.tabSourceControl3(!1),t.tabMore3(!1)},t.tabMore3=ko.observable(!1),t.tabMore3Click=function(){t.tabReset(!1),t.tabSourceControl(!1),t.tabMore(!1),t.tabPublish(!1),t.tabSourceControl2(!1),t.tabMore2(!1),t.tabPush(!1),t.tabPull(!1),t.tabSourceControl3(!1),t.tabMore3(!0)},t.tabPublish=ko.observable(!0),t.tabPublishClick=function(){t.tabReset(!1),t.tabSourceControl(!1),t.tabMore(!1),t.tabPublish(!0),t.tabSourceControl2(!1),t.tabMore2(!1),t.tabPush(!1),t.tabPull(!1),t.tabSourceControl3(!1),t.tabMore3(!1)},t.tabPush=ko.observable(!0),t.tabPushClick=function(){t.tabReset(!1),t.tabSourceControl(!1),t.tabMore(!1),t.tabPublish(!1),t.tabSourceControl2(!1),t.tabMore2(!1),t.tabPush(!0),t.tabPull(!1),t.tabSourceControl3(!1),t.tabMore3(!1)},t.tabPull=ko.observable(!1),t.tabPullClick=function(){t.tabReset(!1),t.tabSourceControl(!1),t.tabMore(!1),t.tabPublish(!1),t.tabSourceControl2(!1),t.tabMore2(!1),t.tabPush(!1),t.tabPull(!0),t.tabSourceControl3(!1),t.tabMore3(!1)},t.publishTab=e?ko.observable(e.publish):ko.observable(!1),t.resetTab=e?ko.observable(e.reset):ko.observable(!0),t.gitTab=e?ko.observable(e.git):ko.observable(!1),t.panelNewForm=ko.observable(!0),t.panelListForm=ko.observable(!1),t.Init=function(e){t.Toolbar=e}}return function(){function e(e){if(\"number\"!=typeof e.length||0===e.length)return[];var t=[];for(var n in e[0])t.push({headerText:n,rowText:n});return t}ko.columnsGrid={viewModel:function(t){this.data=t.data,this.currentPageIndex=ko.observable(0),this.pageSize=t.pageSize||5,this.onChangePage=function(e){this.currentPageIndex(e)},this.columns=t.columns||e(ko.unwrap(this.data)),this.itemsOnCurrentPage=ko.computed(function(){var e=this.pageSize*this.currentPageIndex();return ko.unwrap(this.data).slice(e,e+this.pageSize)},this),this.maxPageIndex=ko.computed(function(){return Math.ceil(ko.unwrap(this.data).length/this.pageSize)-1},this)}};var t=new ko.nativeTemplateEngine;t.addTemplate=function(e,t){var n=$(\"<script type='text/html' id='\"+e+\"'>\"+t+\"</script>\");$(\"#templatesblock\").append(n)},t.addTemplate(\"ko_columnsGrid_grid\",'\t\t\t\t\t\t<table class=\"ms-Table  ms-Table--fixed ms-Table--selectable spa-Fields\" cellspacing=\"0\">\t\t\t\t\t\t\t<thead>\t\t\t\t\t\t\t\t<tr>\t\t\t\t\t\t\t\t   <th class=\"ms-Table-rowCheck\"></th>\t\t\t\t\t\t\t\t   <th>Column</th>\t\t\t\t\t\t\t\t   <th>Form Component</th>\t\t\t\t\t\t\t\t</tr>\t\t\t\t\t\t\t</thead>\t\t\t\t\t\t\t<tbody data-bind=\"foreach: {data: itemsOnCurrentPage, as: \\'field\\'}\">\t\t\t\t\t\t\t\t<tr data-bind=\"css: { \\'is-selected\\': true == field.selected() }\">\t\t\t\t\t\t\t\t\t<td class=\"ms-Table-rowCheck\" data-bind=\"click: function(field, event) { field.selected(!field.selected()); }\"></td>\t\t\t\t\t\t\t\t\t<td data-bind=\"text: field.Title\"></td>\t\t\t\t\t\t\t\t\t<td>\t\t\t\t\t\t\t\t\t\t<select style=\"margin-left:10px; margin-right:10px; margin-top:-5px; border-color:transparent; background-color:transparent;\" data-bind=\"options: field.comps, optionsText: \\'Title\\', value: field.selectedcomp, optionsCaption: \\'Pick component...\\'\"></select>\t\t\t\t\t\t\t\t\t</td>\t\t\t\t\t\t\t\t</tr>\t\t\t\t\t\t\t</tbody>\t\t\t\t\t\t</table>'),t.addTemplate(\"ko_columnsGrid_pageLinks\",'\t\t\t\t\t\t<br>\t\t\t\t\t\t<div class=\"ko-grid-pageLinks\">\t\t\t\t\t\t\t<span>Page:</span>\t\t\t\t\t\t\t<!-- ko foreach: ko.utils.range(0, maxPageIndex) -->\t\t\t\t\t\t\t\t   <a href=\"#\" data-bind=\"text: $data + 1, click: function() { $root.onChangePage($data) }, css: { selected: $data == $root.currentPageIndex() }\">\t\t\t\t\t\t\t\t</a>\t\t\t\t\t\t\t<!-- /ko -->\t\t\t\t\t\t</div>'),ko.bindingHandlers.columnsGrid={init:function(){return{controlsDescendantBindings:!0}},update:function(e,n,r){for(var i=n();e.firstChild;)ko.removeNode(e.firstChild);var s=r.get(\"columnsGridTemplate\")||\"ko_columnsGrid_grid\",o=r.get(\"columnsGridPagerTemplate\")||\"ko_columnsGrid_pageLinks\",u=e.appendChild(document.createElement(\"DIV\"));ko.renderTemplate(s,i,{templateEngine:t},u,\"replaceNode\");var a=e.appendChild(document.createElement(\"DIV\"));ko.renderTemplate(o,i,{templateEngine:t},a,\"replaceNode\")}}}(),function(){function e(e){if(\"number\"!=typeof e.length||0===e.length)return[];var t=[];for(var n in e[0])t.push({headerText:n,rowText:n});return t}ko.componentsGrid={viewModel:function(t){this.data=t.data,this.toolbar=t.toolbar,this.currentPageIndex=ko.observable(0),this.pageSize=t.pageSize||5,this.onChangePage=function(e){this.currentPageIndex(e)},this.columns=t.columns||e(ko.unwrap(this.data)),this.itemsOnCurrentPage=ko.computed(function(){var e=this.pageSize*this.currentPageIndex();return ko.unwrap(this.data).slice(e,e+this.pageSize)},this),this.maxPageIndex=ko.computed(function(){return Math.ceil(ko.unwrap(this.data).length/this.pageSize)-1},this),this.deleteComponent=function(e){console.log(\"delete component \"+e());var t=this.data()[e()];console.log(\"delete component \"+t.Title),this.toolbar.panelButtonDeleteComponentClick(e)},this.editComponent=function(e){console.log(\"edit component \"+e());var t=this.data()[e()];console.log(\"edit component \"+t.Title),this.toolbar.panelButtonEditComponentClick(e)}}};var t=new ko.nativeTemplateEngine;t.addTemplate=function(e,t){var n=$(\"<script type='text/html' id='\"+e+\"'>\"+t+\"</script>\");$(\"#templatesblock\").append(n)},t.addTemplate(\"ko_componentsGrid_grid\",'\t\t\t\t\t\t<table class=\"ms-Table  ms-Table--fixed ms-Table--selectable spa-Components\" cellspacing=\"0\">\t\t\t\t\t\t\t<thead>\t\t\t\t\t\t\t\t<tr>\t\t\t\t\t\t\t\t   <th class=\"ms-Table-rowCheck\"></th>\t\t\t\t\t\t\t\t   <th>Name</th>\t\t\t\t\t\t\t\t   <th></th>\t\t\t\t\t\t\t\t</tr>\t\t\t\t\t\t\t</thead>\t\t\t\t\t\t\t<tbody data-bind=\"foreach: {data: itemsOnCurrentPage, as: \\'component\\'}\">\t\t\t\t\t\t\t\t<tr data-bind=\"css: { \\'is-selected\\': true == component.selected() }\">\t\t\t\t\t\t\t\t\t<td class=\"ms-Table-rowCheck\" data-bind=\"click: function(component, event) { component.selected(!component.selected()); }\"></td>\t\t\t\t\t\t\t\t\t<td data-bind=\"text: component.Title\"></td>\t\t\t\t\t\t\t\t\t<td>\t\t\t\t\t\t\t\t\t\t<button class=\"ms-Button ms-Button--hero\" style=\"padding-left:0px; min-width:0px; display: inline; float:right;\" data-bind=\"click: function(data, event) { $parent.editComponent($index); }\" >\t\t\t\t\t\t\t\t\t\t\t<span class=\"ms-Button-icon\" ><i class=\"ms-Icon ms-Icon--Edit\" ></i></span>\t\t\t\t\t\t\t\t\t\t</button>\t\t\t\t\t\t\t\t\t\t<button class=\"ms-Button ms-Button--hero\" style=\"padding-left:0px; min-width:0px; display: inline; float:right;\" data-bind=\"click: function(data, event) { $parent.deleteComponent($index); }\" >\t\t\t\t\t\t\t\t\t\t\t<span data-bind=\"visible: enableDelete\" class=\"ms-Button-icon\" ><i class=\"ms-Icon ms-Icon--Cancel\" ></i></span>\t\t\t\t\t\t\t\t\t\t</button>\t\t\t\t\t\t\t\t\t</td>\t\t\t\t\t\t\t\t</tr>\t\t\t\t\t\t\t</tbody>\t\t\t\t\t\t</table>'),t.addTemplate(\"ko_componentsGrid_pageLinks\",'\t\t\t\t\t\t<br>\t\t\t\t\t\t<div class=\"ko-grid-pageLinks\">\t\t\t\t\t\t\t<span>Page:</span>\t\t\t\t\t\t\t<!-- ko foreach: ko.utils.range(0, maxPageIndex) -->\t\t\t\t\t\t\t\t   <a href=\"#\" data-bind=\"text: $data + 1, click: function() { $root.onChangePage($data) }, css: { selected: $data == $root.currentPageIndex() }\">\t\t\t\t\t\t\t\t</a>\t\t\t\t\t\t\t<!-- /ko -->\t\t\t\t\t\t</div>'),ko.bindingHandlers.componentsGrid={init:function(){return{controlsDescendantBindings:!0}},update:function(e,n,r){for(var i=n();e.firstChild;)ko.removeNode(e.firstChild);var s=r.get(\"componentsGridTemplate\")||\"ko_componentsGrid_grid\",o=r.get(\"componentsGridPagerTemplate\")||\"ko_componentsGrid_pageLinks\",u=e.appendChild(document.createElement(\"DIV\"));ko.renderTemplate(s,i,{templateEngine:t},u,\"replaceNode\");var a=e.appendChild(document.createElement(\"DIV\"));ko.renderTemplate(o,i,{templateEngine:t},a,\"replaceNode\")}}}(),function(){try{new window.CustomEvent(\"test\")}catch(e){var t=function(e,t){var n;return t=t||{bubbles:!1,cancelable:!1,detail:void 0},n=document.createEvent(\"CustomEvent\"),n.initCustomEvent(e,t.bubbles,t.cancelable,t.detail),n};t.prototype=window.Event.prototype,window.CustomEvent=t}}(),{viewModel:t,template:e}}),define(\"text!../Runtime/source/toolbar-gitpanel.html\",[],function(){return'<style type=\"text/css\">\\r\\n.validationMessage {\\r\\n\tcolor: red;\\r\\n\tfont-size: 11px;\\r\\n}\\r\\ninput.validationElement {\\r\\n    border: 1px solid #cc0000;\\r\\n}\\r\\n.ms-Dropdown {\\r\\n  font-family: \\'Segoe UI WestEuropean\\', \\'Segoe UI\\', -apple-system, BlinkMacSystemFont, \\'Roboto\\', \\'Helvetica Neue\\', sans-serif;\\r\\n  -webkit-font-smoothing: antialiased;\\r\\n  box-sizing: border-box;\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n  box-shadow: none;\\r\\n  color: #333333;\\r\\n  font-size: 14px;\\r\\n  font-weight: 400;\\r\\n  margin-bottom: 10px;\\r\\n  position: relative;\\r\\n  outline: 0;\\r\\n}\\r\\n\\r\\n.ms-Dropdown:hover .ms-Dropdown-title,\\r\\n.ms-Dropdown:hover .ms-Dropdown-caretDown,\\r\\n.ms-Dropdown:focus .ms-Dropdown-title,\\r\\n.ms-Dropdown:focus .ms-Dropdown-caretDown,\\r\\n.ms-Dropdown:active .ms-Dropdown-title,\\r\\n.ms-Dropdown:active .ms-Dropdown-caretDown {\\r\\n  color: #000000;\\r\\n}\\r\\n\\r\\n.ms-Dropdown:hover .ms-Dropdown-title,\\r\\n.ms-Dropdown:active .ms-Dropdown-title {\\r\\n  border-color: #767676;\\r\\n}\\r\\n\\r\\n.ms-Dropdown:focus .ms-Dropdown-title {\\r\\n  border-color: #0078d7;\\r\\n}\\r\\n\\r\\n.ms-Dropdown .ms-Label {\\r\\n  display: inline-block;\\r\\n  margin-bottom: 8px;\\r\\n}\\r\\n\\r\\n.ms-Dropdown.is-disabled .ms-Dropdown-title {\\r\\n  background-color: #f4f4f4;\\r\\n  border-color: #f4f4f4;\\r\\n  color: #a6a6a6;\\r\\n  cursor: default;\\r\\n}\\r\\n\\r\\n@media screen and (-ms-high-contrast: active) {\\r\\n  .ms-Dropdown.is-disabled .ms-Dropdown-title {\\r\\n    border-color: #00ff00;\\r\\n    color: #00ff00;\\r\\n  }\\r\\n}\\r\\n\\r\\n@media screen and (-ms-high-contrast: black-on-white) {\\r\\n  .ms-Dropdown.is-disabled .ms-Dropdown-title {\\r\\n    border-color: #600000;\\r\\n    color: #600000;\\r\\n  }\\r\\n}\\r\\n\\r\\n.ms-Dropdown.is-disabled .ms-Dropdown-caretDown {\\r\\n  color: #a6a6a6;\\r\\n}\\r\\n\\r\\n@media screen and (-ms-high-contrast: active) {\\r\\n  .ms-Dropdown.is-disabled .ms-Dropdown-caretDown {\\r\\n    color: #00ff00;\\r\\n  }\\r\\n}\\r\\n\\r\\n@media screen and (-ms-high-contrast: black-on-white) {\\r\\n  .ms-Dropdown.is-disabled .ms-Dropdown-caretDown {\\r\\n    color: #600000;\\r\\n  }\\r\\n}\\r\\n\\r\\n.ms-Dropdown.is-open .ms-Dropdown-items {\\r\\n  display: block;\\r\\n  position: absolute;\\r\\n}\\r\\n\\r\\n.ms-Panel .ms-Dropdown-items {\\r\\n  box-shadow: none;\\r\\n  overflow-y: auto;\\r\\n  padding-top: 4px;\\r\\n  max-height: 100%;\\r\\n}\\r\\n\\r\\n.ms-Panel .ms-Dropdown-items .ms-Dropdown-item {\\r\\n  padding: 0 16px;\\r\\n}\\r\\n\\r\\n.ms-Panel .ms-Dropdown-items::before {\\r\\n  content: none;\\r\\n  border: 0;\\r\\n}\\r\\n\\r\\n.ms-Dropdown-select {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.ms-Dropdown-caretDown {\\r\\n  color: #666666;\\r\\n  font-size: 17px;\\r\\n  position: absolute;\\r\\n  right: 9px;\\r\\n  bottom: 5px;\\r\\n  z-index: 1;\\r\\n  pointer-events: none;\\r\\n}\\r\\n\\r\\n.ms-Dropdown-title {\\r\\n  box-sizing: border-box;\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n  box-shadow: none;\\r\\n  background: #ffffff;\\r\\n  border: 1px solid #c8c8c8;\\r\\n  cursor: pointer;\\r\\n  display: block;\\r\\n  height: 32px;\\r\\n  line-height: 30px;\\r\\n  padding: 0 32px 0 10px;\\r\\n  position: relative;\\r\\n  overflow: hidden;\\r\\n}\\r\\n\\r\\n.ms-Dropdown-items {\\r\\n  box-sizing: border-box;\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n  box-shadow: none;\\r\\n  box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.4);\\r\\n  background-color: #ffffff;\\r\\n  display: none;\\r\\n  list-style-type: none;\\r\\n  position: absolute;\\r\\n  width: 100%;\\r\\n  max-height: 200px;\\r\\n  z-index: 400;\\r\\n  overflow-y: scroll;\\r\\n  top: auto;\\r\\n  right: auto;\\r\\n  bottom: auto;\\r\\n  left: auto;\\r\\n  max-width: 100%;\\r\\n}\\r\\n\\r\\n.ms-Dropdown-items::before {\\r\\n  content: \\'\\';\\r\\n  position: absolute;\\r\\n  z-index: -1;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n  bottom: 0;\\r\\n  border: 1px solid #eaeaea;\\r\\n}\\r\\n\\r\\n@media screen and (-ms-high-contrast: active) {\\r\\n  .ms-Dropdown-items {\\r\\n    border: 1px solid #ffffff;\\r\\n  }\\r\\n}\\r\\n\\r\\n@media screen and (-ms-high-contrast: black-on-white) {\\r\\n  .ms-Dropdown-items {\\r\\n    border: 1px solid #000000;\\r\\n  }\\r\\n}\\r\\n\\r\\n.ms-Dropdown-item {\\r\\n  box-sizing: border-box;\\r\\n  cursor: pointer;\\r\\n  display: block;\\r\\n  height: 40px;\\r\\n  line-height: 38px;\\r\\n  padding: 0 10px;\\r\\n  position: relative;\\r\\n  border: 1px solid transparent;\\r\\n  white-space: nowrap;\\r\\n}\\r\\n\\r\\n@media screen and (-ms-high-contrast: active) {\\r\\n  .ms-Dropdown-item {\\r\\n    border-color: #000000;\\r\\n  }\\r\\n}\\r\\n\\r\\n@media screen and (-ms-high-contrast: black-on-white) {\\r\\n  .ms-Dropdown-item {\\r\\n    border-color: #ffffff;\\r\\n  }\\r\\n}\\r\\n\\r\\n.ms-Dropdown-item:first-child,\\r\\n.ms-Dropdown-item:last-child {\\r\\n  height: 39px;\\r\\n}\\r\\n\\r\\n.ms-Dropdown-item:hover {\\r\\n  background-color: #eaeaea;\\r\\n  color: #000000;\\r\\n}\\r\\n\\r\\n@media screen and (-ms-high-contrast: active) {\\r\\n  .ms-Dropdown-item:hover {\\r\\n    background-color: #1aebff;\\r\\n    border-color: #1aebff;\\r\\n    color: #000000;\\r\\n  }\\r\\n\\r\\n  .ms-Dropdown-item:hover:focus {\\r\\n    border-color: #000000;\\r\\n  }\\r\\n}\\r\\n\\r\\n@media screen and (-ms-high-contrast: black-on-white) {\\r\\n  .ms-Dropdown-item:hover {\\r\\n    background-color: #37006e;\\r\\n    border-color: #37006e;\\r\\n    color: #ffffff;\\r\\n  }\\r\\n}\\r\\n\\r\\n.ms-Dropdown-item:active {\\r\\n  background-color: #eaeaea;\\r\\n  border-color: #0078d7;\\r\\n  color: #000000;\\r\\n}\\r\\n\\r\\n.ms-Dropdown-item.is-disabled {\\r\\n  background: #ffffff;\\r\\n  color: #a6a6a6;\\r\\n  cursor: default;\\r\\n  line-height: 40px;\\r\\n}\\r\\n\\r\\n.ms-Dropdown-item.is-selected,\\r\\n.ms-Dropdown-item.ms-Dropdown-item--selected {\\r\\n  background-color: #c7e0f4;\\r\\n  color: #000000;\\r\\n  line-height: 40px;\\r\\n}\\r\\n\\r\\n.ms-Dropdown-item.is-selected:hover,\\r\\n.ms-Dropdown-item.ms-Dropdown-item--selected:hover {\\r\\n  background-color: #c7e0f4;\\r\\n}\\r\\n\\r\\n@media screen and (-ms-high-contrast: active) {\\r\\n  .ms-Dropdown-item.is-selected,\\r\\n  .ms-Dropdown-item.ms-Dropdown-item--selected {\\r\\n    background-color: #1aebff;\\r\\n    border-color: #1aebff;\\r\\n    color: #000000;\\r\\n  }\\r\\n\\r\\n  .ms-Dropdown-item.is-selected:focus,\\r\\n  .ms-Dropdown-item.ms-Dropdown-item--selected:focus {\\r\\n    border-color: #000000;\\r\\n  }\\r\\n}\\r\\n\\r\\n@media screen and (-ms-high-contrast: black-on-white) {\\r\\n  .ms-Dropdown-item.is-selected,\\r\\n  .ms-Dropdown-item.ms-Dropdown-item--selected {\\r\\n    background-color: #37006e;\\r\\n    border-color: #37006e;\\r\\n    color: #ffffff;\\r\\n  }\\r\\n}\\r\\n</style>\\r\\n<script type=\"text/html\" id=\"gitpanel-template\">\\r\\n\t<div data-bind=\"visible: resetTab\">\\r\\n\t\t<div class=\"ms-Pivot  ms-Pivot--large ms-Pivot--tabs\">\\r\\n\t\t\t <ul class=\"ms-Pivot-links\">\\r\\n\t\t\t\t<li class=\"ms-Pivot-link\" data-content=\"reset\" title=\"Reset\" tabindex=\"1\" data-bind=\"css:{\\'is-selected\\': true == tabReset()}, click: tabResetClick\">\\r\\n\t\t\t\t  Form Project\\r\\n\t\t\t\t</li>\\r\\n\t\t\t\t<li class=\"ms-Pivot-link \" data-content=\"git\" title=\"Git\" tabindex=\"1\"  data-bind=\"css:{\\'is-selected\\': true == tabSourceControl()}, click: tabSourceControlClick\">\\r\\n\t\t\t\t  Source Control\\r\\n\t\t\t\t</li>\\r\\n\t\t\t\t<li class=\"ms-Pivot-link\" tabindex=\"1\" data-bind=\"css:{\\'is-selected\\': true == tabMore()}, click: tabMoreClick\">\\r\\n\t\t\t\t  <i class=\"ms-Pivot-ellipsis ms-Icon ms-Icon--More\"></i>\\r\\n\t\t\t\t</li>\\r\\n\t\t\t</ul>\\r\\n\t\t\t<div data-content=\"reset\" data-bind=\"visible:tabReset\">\\r\\n\t\t\t\t<br>\\r\\n\t\t\t\t<div class=\"Intro\">\\r\\n\t\t\t\t  <h2 class=\"Intro-title ms-fontSize-xl\">Initialize Form Project</h2>\\r\\n\t\t\t\t</div>\\r\\n\t\t\t\t<br>\\r\\n\t\t\t\t<div class=\"ms-ChoiceFieldGroup\" id=\"choicefieldgroup\" role=\"radiogroup\">\\r\\n\t\t\t\t  <div class=\"ms-ChoiceFieldGroup-title\">\\r\\n\t\t\t\t\t<label class=\"ms-Label  is-required \">Select one of the available options below and Apply to the form layout.</label>\\r\\n\t\t\t\t  </div>\\r\\n\t\t\t\t  <ul class=\"ms-ChoiceFieldGroup-list\">\\r\\n\t\t\t\t\t<!-- Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information. -->\\r\\n\t\t\t\t\t<div class=\"ms-RadioButton spa-Reset\">\\r\\n\t\t\t\t\t\t<input tabindex=\"-1\" type=radio\" class = \"ms-RadioButton-input\">\\r\\n\t\t\t\t\t\t<label role=\"radio\" class=\"ms-RadioButton-field\" tabindex=\"0\" aria-checked=\"false\" name=\"choicefieldgroup\"  title=\"empty\" data-bind=\"click: radResetClick\">\\r\\n\t\t\t\t\t\t\t<span class=\"ms-Label\">Empty Layout</span>\\r\\n\t\t\t\t\t\t</label>\\r\\n\t\t\t\t\t</div>\\r\\n\t\t\t\t\t<div class=\"ms-RadioButton spa-Reset\">\\r\\n\t\t\t\t\t\t<input tabindex=\"-1\" type=radio\" class = \"ms-RadioButton-input\">\\r\\n\t\t\t\t\t\t<label role=\"radio\" class=\"ms-RadioButton-field\" tabindex=\"0\" aria-checked=\"false\" name=\"choicefieldgroup\" title=\"columns\" data-bind=\"click: radResetClick\">\\r\\n\t\t\t\t\t\t\t<span class=\"ms-Label\">Layout with all SharePoint List Columns</span>\\r\\n\t\t\t\t\t\t</label>\\r\\n\t\t\t\t\t</div>\\r\\n\t\t\t\t\t<div class=\"ms-RadioButton spa-Reset\">\\r\\n\t\t\t\t\t\t<input tabindex=\"-1\" type=radio\" class = \"ms-RadioButton-input\">\\r\\n\t\t\t\t\t\t<label role=\"radio\" class=\"ms-RadioButton-field\" tabindex=\"0\" aria-checked=\"false\" name=\"choicefieldgroup\" title=\"lastcommit\" data-bind=\"click: radResetClick\">\\r\\n\t\t\t\t\t\t\t<span class=\"ms-Label\">Import from Source Control</span>\\r\\n\t\t\t\t\t\t</label>\\r\\n\t\t\t\t\t</div>\\r\\n\t\t\t\t  </ul>\\r\\n\t\t\t\t</div>  \\r\\n\t\t\t\t<div data-bind=\"visible: enableCommits\">\\r\\n\t\t\t\t\t<div style=\\'margin-left:25px;\\'>\\r\\n\t\t\t\t\t\t<div class=\"ms-TextField is-required\">\\r\\n\t\t\t\t\t\t\t<label class=\"ms-Label\">Source account:</label>\\r\\n\t\t\t\t\t\t\t<select data-bind=\"options: listAccounts, optionsText: \\'account\\', optionsCaption:\\'Add New Account...\\', value: selectedAccount\"></select>\\r\\n\t\t\t\t\t\t</div>\t\\r\\n\t\t\t\t\t\t<div data-bind=\"visible: selectRepository\">\\r\\n\t\t\t\t\t\t\t<div class=\"ms-TextField is-required\">\\r\\n\t\t\t\t\t\t\t\t<label class=\"ms-Label\">Source project repository:</label>\\r\\n\t\t\t\t\t\t\t\t<select data-bind=\"options: listRepos, optionsCaption:\\'Select Repository...\\', value: selectedRepo\"></select>\\r\\n\t\t\t\t\t\t\t</div>\t\\r\\n\t\t\t\t\t\t\t<div>\\r\\n\t\t\t\t\t\t\t\t<span class=\"ms-TextField-description\">Select source release from the list below to initialize form project:</span>\\r\\n\t\t\t\t\t\t\t</div>\\r\\n\t\t\t\t\t\t\t\t<div data-bind=\\'commitsGrid: commitsGridViewModel\\'></div>\\r\\n\t\t\t\t\t\t</div>\\r\\n\t\t\t\t\t\t<div data-bind=\"visible: selectAccount\">\\r\\n\t\t\t\t\t\t\t<div class=\"ms-ChoiceFieldGroup\" id=\"connectionfieldgroup\" role=\"radiogroup\">\\r\\n\t\t\t\t\t\t\t  <div class=\"ms-ChoiceFieldGroup-title\">\\r\\n\t\t\t\t\t\t\t\t<label class=\"ms-Label  is-required \">Account of:</label>\\r\\n\t\t\t\t\t\t\t  </div>\\r\\n\t\t\t\t\t\t\t  <ul class=\"ms-ChoiceFieldGroup-list\">\\r\\n\t\t\t\t\t\t\t\t<div class=\"ms-RadioButton spa-Reset\">\\r\\n\t\t\t\t\t\t\t\t\t<input tabindex=\"-1\" type=radio\" class = \"ms-RadioButton-input\">\\r\\n\t\t\t\t\t\t\t\t\t<label role=\"radio\" class=\"ms-RadioButton-field\" tabindex=\"0\" aria-checked=\"false\" name=\"connectionfieldgroup\">\\r\\n\t\t\t\t\t\t\t\t\t\t<span class=\"ms-Label\">Organization</span>\\r\\n\t\t\t\t\t\t\t\t\t</label>\\r\\n\t\t\t\t\t\t\t\t</div>\\r\\n\t\t\t\t\t\t\t\t<div class=\"ms-RadioButton spa-Reset\">\\r\\n\t\t\t\t\t\t\t\t\t<!-- title=\"organization\" title=\"user\" data-bind=\"click: radConnectionTypeClick\" -->\\r\\n\t\t\t\t\t\t\t\t\t<input tabindex=\"-1\" type=radio\" class = \"ms-RadioButton-input\">\\r\\n\t\t\t\t\t\t\t\t\t<label role=\"radio\" class=\"ms-RadioButton-field\" tabindex=\"0\" aria-checked=\"false\" name=\"connectionfieldgroup\">\\r\\n\t\t\t\t\t\t\t\t\t\t<span class=\"ms-Label\">User</span>\\r\\n\t\t\t\t\t\t\t\t\t</label>\\r\\n\t\t\t\t\t\t\t\t</div>\\r\\n\t\t\t\t\t\t\t  </ul>\\r\\n\t\t\t\t\t\t\t</div>  \\r\\n\t\t\t\t\t\t\t<div class=\"ms-TextField is-required\">\\r\\n\t\t\t\t\t\t\t\t<label class=\"ms-Label\">Account Name:</label>\\r\\n\t\t\t\t\t\t\t\t<input class=\"ms-TextField-field\" type=\"text\" data-bind=\"value: gitAccount, valueUpdate: \\'afterkeydown\\'\">\\r\\n\t\t\t\t\t\t\t</div>\t\\r\\n\t\t\t\t\t\t\t<div>\\r\\n\t\t\t\t\t\t\t\t<span data-bind=\"text: messageAddConnection\" style=\"color:red\"></span>\\r\\n\t\t\t\t\t\t\t</div>\\r\\n\t\t\t\t\t\t\t<div>\\r\\n\t\t\t\t\t\t\t\t<button data-bind=\"click: actionAddConnection, css: enableAddConnection\" style=\"float:left;\" class=\"ms-Button ms-Button--primary\"><span class=\"ms-Button-label\">Add</span></button>\\r\\n\t\t\t\t\t\t\t\t<button data-bind=\"click: actionAddConnectionCancel\" style=\"float:right;\" class=\"ms-Button ms-Button--primary\"><span class=\"ms-Button-label\">Cancel</span></button>\t\\r\\n\t\t\t\t\t\t\t</div>\\r\\n\t\t\t\t\t\t</div>\\r\\n\t\t\t\t\t</div>\t\t\t\t\t\t\\r\\n\t\t\t\t</div>\\r\\n\t\t\t\t<div data-bind=\"visible: disableCommits\">\\r\\n\t\t\t\t\t<div data-bind=\"visible:processForm\">\\r\\n\t\t\t\t\t\t<br>\\r\\n\t\t\t\t\t\t<br>\\r\\n\t\t\t\t\t\t<div data-bind=\"visible: processing\">\\r\\n\t\t\t\t\t\t\t<div style=\"max-width: 100px;\" class=\"ms-Spinner  ms-Spinner--large\">\\r\\n\t\t\t\t\t\t\t\t<div class=\"ms-Spinner-label\">\\r\\n\t\t\t\t\t\t\t\t  Working on it ...\\r\\n\t\t\t\t\t\t\t\t</div>\\r\\n\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\\r\\n\t\t\t\t\t\t</div>\\r\\n\t\t\t\t\t\t<div data-bind=\"visible: messagePanel\">\\r\\n\t\t\t\t\t\t\t<div style=\\'margin-left:25px;\\' data-bind=\"text: messageText\"></div>\\r\\n\t\t\t\t\t\t</div>\\r\\n\t\t\t\t\t\t<div data-bind=\"visible: completed\">\\r\\n\t\t\t\t\t\t\t<b>Completed.</b>\t\t\t\t\\r\\n\t\t\t\t\t\t\t<br>\\r\\n\t\t\t\t\t\t\t<br>\\r\\n\t\t\t\t\t\t\t<button data-bind=\"click: panelCloseGitPanel\" style=\"float:right;\" class=\"ms-Button ms-Button--primary\"><span class=\"ms-Button-label\">OK</span></button>\t\\r\\n\t\t\t\t\t\t</div>\\r\\n\t\t\t\t\t</div>\t\\r\\n\t\t\t\t</div>\\r\\n\t\t\t\t<br>\\r\\n\t\t\t\t<br>\\r\\n\t\t\t\t<div>\\r\\n\t\t\t\t\t<button data-bind=\"click: actionApplyResetForm, css: enableApplyResetForm, visible: showApplyResetForm\" style=\"float:left;\" class=\"ms-Button ms-Button--primary\"><span class=\"ms-Button-label\">Initialize</span></button>\\r\\n\t\t\t\t\t<button data-bind=\"click: panelCloseGitPanel, visible: enableCancelResetForm\" style=\"float:right;\" class=\"ms-Button ms-Button--primary\"><span class=\"ms-Button-label\">Close</span></button>\t\\r\\n\t\t\t\t</div>\\r\\n\t\t\t</div>\\r\\n\t\t\t<div  data-content=\"git\" data-bind=\"visible:tabSourceControl\">\\r\\n\t\t\t\t<br>\\r\\n\t\t\t\t<div class=\"Intro\">\\r\\n\t\t\t\t  <h2 class=\"Intro-title ms-fontSize-xl\">GitHub Connection Info</h2>\\r\\n\t\t\t\t</div>\\r\\n\t\t\t\t<br>\\r\\n\t\t\t\t<div class=\"ms-TextField is-required\">\\r\\n\t\t\t\t\t<label class=\"ms-Label\">Login</label>\\r\\n\t\t\t\t\t<input class=\"ms-TextField-field\" type=\"text\" data-bind=\"disable: gitConnected, value: gitUserName\">\\r\\n\t\t\t\t</div>\t\\r\\n\t\t\t\t<div class=\"ms-TextField is-required\">\\r\\n\t\t\t\t\t<label class=\"ms-Label\">Password</label>\\r\\n\t\t\t\t\t<input class=\"ms-TextField-field\" type=\"password\" data-bind=\"disable: gitConnected, value: gitUserPassword\">\\r\\n\t\t\t\t</div>\t\\r\\n\t\t\t\t<div class=\"ms-TextField\">\\r\\n\t\t\t\t\t<label class=\"ms-Label\">Organization</label>\\r\\n\t\t\t\t\t<input class=\"ms-TextField-field\" type=\"text\" data-bind=\"disable: gitConnected, value: gitOrganization\">\\r\\n\t\t\t\t\t<span class=\"ms-TextField-description\">Optional: GitHub Organization<a href=\"#\">Why not?</a></span>\\r\\n\t\t\t\t</div>\t\\r\\n\t\t\t\t\\r\\n\t\t\t\t<div>\t\t\t\\r\\n\t\t\t\t\t<br>\\r\\n\t\t\t\t\t<br>\\r\\n\t\t\t\t\t<br>\\r\\n\t\t\t\t\t<button data-bind=\"visible: enableConnect, click: actionConnect\" style=\"float:left;\" class=\"ms-Button ms-Button--primary\"><span class=\"ms-Button-label\">Connect</span></button>\\r\\n\t\t\t\t\t<button data-bind=\"visible: enableDisconnect, click: actionDisconnect\" style=\"float:left;\" class=\"ms-Button ms-Button--primary\"><span class=\"ms-Button-label\">Disconnect</span></button>\\r\\n\t\t\t\t\t<button data-bind=\"click: panelCloseGitPanel\" style=\"float:right;\" class=\"ms-Button ms-Button--primary\"><span class=\"ms-Button-label\">Close</span></button>\\r\\n\t\t\t\t</div>\t\t\t\\r\\n\t\t\t</div>\\r\\n\t\t\t<div  data-content=\"menu\" data-bind=\"visible:tabMore\">\\r\\n\t\t\t\t<br>\\r\\n\t\t\t\t<div data-bind=\"visible:processForm\">\\r\\n\t\t\t\t\t<br>\\r\\n\t\t\t\t\t<br>\\r\\n\t\t\t\t\t<div data-bind=\"visible: processing\">\\r\\n\t\t\t\t\t\t<div style=\"max-width: 100px;\" class=\"ms-Spinner  ms-Spinner--large\">\\r\\n\t\t\t\t\t\t\t<div class=\"ms-Spinner-label\">\\r\\n\t\t\t\t\t\t\t  Working on it ...\\r\\n\t\t\t\t\t\t\t</div>\\r\\n\t\t\t\t\t\t</div>\t\t\t\t\t\t\\r\\n\t\t\t\t\t</div>\\r\\n\t\t\t\t\t<div data-bind=\"visible: messagePanel\">\\r\\n\t\t\t\t\t\t<div style=\\'margin-left:25px;\\' data-bind=\"text: messageText\"></div>\\r\\n\t\t\t\t\t</div>\\r\\n\t\t\t\t\t<div data-bind=\"visible: completed\">\\r\\n\t\t\t\t\t\t<b>Completed.</b>\t\t\t\t\\r\\n\t\t\t\t\t\t<br>\\r\\n\t\t\t\t\t\t<br>\\r\\n\t\t\t\t\t\t<button data-bind=\"click: panelCloseGitPanel\" style=\"float:right;\" class=\"ms-Button ms-Button--primary\"><span class=\"ms-Button-label\">OK</span></button>\t\\r\\n\t\t\t\t\t</div>\\r\\n\t\t\t\t\t<br>\\r\\n\t\t\t\t\t<br>\\r\\n\t\t\t\t</div>\t\t\t\t\\r\\n\t\t\t\t<div>\\r\\n\t\t\t\t\t<div class=\"Intro\">\\r\\n\t\t\t\t\t  <h2 class=\"Intro-title ms-fontSize-xl\">Upgrade</h2>\\r\\n\t\t\t\t\t</div>\\r\\n\t\t\t\t\t<br>\\r\\n\t\t\t\t\t<div>\\r\\n\t\t\t\t\t\t<span class=\"ms-TextField-description\">Use \\'Sys Update\\' button to upgrade with latest released runtime and components library for SPA FORMS 365.</span>\\r\\n\t\t\t\t\t\t<br/>\\r\\n\t\t\t\t\t\t<span class=\"ms-TextField-description\">Current Version:&nbsp</span><span class=\"ms-TextField-description\" data-bind=\"text: gitSysVersion\"></span>\\r\\n\t\t\t\t\t\t<br/>\\r\\n\t\t\t\t\t\t<span class=\"ms-TextField-description\">Latest Released Version:&nbsp</span><span class=\"ms-TextField-description\" data-bind=\"text: gitSysRemoteVersion\"></span>\\r\\n\t\t\t\t\t</div>\\r\\n\t\t\t\t\t<br>\\r\\n\t\t\t\t\t<br>\\r\\n\t\t\t\t\t<div style=\"min-height:30px\">\\r\\n\t\t\t\t\t<button data-bind=\"click:sysupdate, enable: enableSysUpdateButton\" style=\"float:left;\" class=\"ms-Button ms-Button--primary\"><span class=\"ms-Button-label\">Sys Update</span></button>\t\t\\r\\n\t\t\t\t\t<button data-bind=\"click: panelCloseGitPanel\" style=\"float:right;\" class=\"ms-Button ms-Button--primary\"><span class=\"ms-Button-label\">Close</span></button>\t\\r\\n\t\t\t\t\t</div>\\r\\n\t\t\t\t\t<br/>\\r\\n\t\t\t\t\t<br/>\\r\\n\t\t\t\t\t<br/>\\r\\n\t\t\t\t\t<div style=\"min-height:30px\" data-bind=\"visible: showSysButtons\">\\r\\n\t\t\t\t\t\t<div class=\"ms-TextField is-required\">\\r\\n\t\t\t\t\t\t\t<label class=\"ms-Label\">Commit Message</label>\\r\\n\t\t\t\t\t\t\t<input class=\"ms-TextField-field\" type=\"text\" data-bind=\"enable: gitConnected, value: gitSysMessage\">\\r\\n\t\t\t\t\t\t\t<span class=\"ms-TextField-description\">Short description for this release<a href=\"#\">Why not?</a></span>\\r\\n\t\t\t\t\t\t</div>\t\\r\\n\t\t\t\t\t\t<div class=\"ms-TextField is-required\">\\r\\n\t\t\t\t\t\t\t<label class=\"ms-Label\">Release Version</label>\\r\\n\t\t\t\t\t\t\t<input class=\"ms-TextField-field\" type=\"text\" data-bind=\"enable: gitConnected, value: gitSysVersion\">\\r\\n\t\t\t\t\t\t\t<span class=\"ms-TextField-description\">Release version (v0.0.0.0)<a href=\"#\">Why not?</a></span>\\r\\n\t\t\t\t\t\t</div>\\r\\n\\r\\n\t\t\t\t\t\t<button data-bind=\"click:sysrelease\" style=\"float:left;\" class=\"ms-Button ms-Button--primary\"><span class=\"ms-Button-label\">Sys Release from /Runtime</span></button>\t\t\\r\\n\t\t\t\t\t</div>\\r\\n\t\t\t\t\t<br/>\\r\\n\t\t\t\t\t<br/>\\r\\n\t\t\t\t\t<br/>\\r\\n\t\t\t\t\t<div style=\"min-height:30px\" data-bind=\"visible: showSysButtons\">\\r\\n\t\t\t\t\t<button data-bind=\"click: buildsyslib\" style=\"float:left;\" class=\"ms-Button ms-Button--primary\"><span class=\"ms-Button-label\">Build SysLib from /syscomponents</span></button>\t\t\\r\\n\t\t\t\t\t</div>\\r\\n\t\t\t\t\t<br/>\\r\\n\t\t\t\t\t<div style=\"min-height:30px\" data-bind=\"visible: showSysButtons\">\\r\\n\t\t\t\t\t<button data-bind=\"click: $buildRuntime\" style=\"float:left;\" class=\"ms-Button ms-Button--primary\"><span class=\"ms-Button-label\">Build Runtime from /source</span></button>\t\t\\r\\n\t\t\t\t\t</div>\\r\\n\t\t\t\t\t<br/>\\r\\n\t\t\t\t\t<div style=\"min-height:30px\" data-bind=\"visible: showSysButtons\">\\r\\n\t\t\t\t\t<button data-bind=\"click: $buildRuntimeProxy\" style=\"float:left;\" class=\"ms-Button ms-Button--primary\"><span class=\"ms-Button-label\">Build Runtime Proxy from /source</span></button>\t\t\\r\\n\t\t\t\t\t</div>\\r\\n\t\t\t\t\t<br/>\\r\\n\t\t\t\t\t<div style=\"min-height:30px\" data-bind=\"visible: showSysButtons\">\\r\\n\t\t\t\t\t<button data-bind=\"click: $buildDesigntime\" style=\"float:left;\" class=\"ms-Button ms-Button--primary\"><span class=\"ms-Button-label\">Build Designtime from /source</span></button>\t\t\\r\\n\t\t\t\t\t</div>\\r\\n\t\t\t\t\t<br/>\\r\\n\t\t\t\t\t<br/>\\r\\n\t\t\t\t\t<br/>\\r\\n\t\t\t\t</div>\t\t\t\t\\r\\n\t\t\t</div>\\r\\n\t\t</div>\\r\\n\t</div>\\r\\n\t<div data-bind=\"visible: publishTab\">\\r\\n\t\t<div class=\"ms-Pivot  ms-Pivot--large ms-Pivot--tabs\">\\r\\n\t\t  <ul class=\"ms-Pivot-links\">\\r\\n\t\t\t<li class=\"ms-Pivot-link\" data-content=\"publish\" title=\"Publish\" tabindex=\"1\" data-bind=\"css:{\\'is-selected\\': true == tabPublish()}, click: tabPublishClick\">\\r\\n\t\t\t  Form Project\\r\\n\t\t\t</li>\\r\\n\t\t\t<li class=\"ms-Pivot-link \" data-content=\"git2\" title=\"Git2\" tabindex=\"1\"  data-bind=\"css:{\\'is-selected\\': true == tabSourceControl2()}, click: tabSourceControl2Click\">\\r\\n\t\t\t  Source Control\\r\\n\t\t\t</li>\\r\\n\t\t\t<li class=\"ms-Pivot-link\" tabindex=\"1\"  data-bind=\"css:{\\'is-selected\\': true == tabMore2()}, click: tabMore2Click\">\\r\\n\t\t\t  <i class=\"ms-Pivot-ellipsis ms-Icon ms-Icon--More\"></i>\\r\\n\t\t\t</li>\\r\\n\t\t  </ul>\\r\\n\t\t\t<div  data-content=\"publish\" data-bind=\"visible:tabPublish\">\\r\\n\t\t\t\t<div data-bind=\"visible:inputForm\">\\r\\n\t\t\t\t\t<br>\\r\\n\t\t\t\t\t<div class=\"Intro\">\\r\\n\t\t\t\t\t  <h2 class=\"Intro-title ms-fontSize-xl\">Publish Release</h2>\\r\\n\t\t\t\t\t</div>\\r\\n\t\t\t\t\t<br>\\r\\n\t\t\t\t\t\t<span class=\"ms-TextField-description\">Currently saved viewmodel and custom components will be combined and minified into model file. Upon completion, updated model will be used by form runtime .</span>\\r\\n\t\t\t\t\t<br>\\r\\n\t\t\t\t\t<br>\\r\\n\t\t\t\t\t<div  data-bind=\"visible: gitConnected\">\\r\\n\t\t\t\t\t\t<div class=\"ms-CheckBox\">\\r\\n\t\t\t\t\t\t\t<input tabindex=\"-1\" type=\"checkbox\" class=\"ms-CheckBox-input\">\\r\\n\t\t\t\t\t\t\t<!-- data-bind=\"click: chkClick\" -->\\r\\n\t\t\t\t\t\t\t<label role=\"checkbox\" class=\"ms-CheckBox-field \" tabindex=\"0\" aria-checked=\"true\" name=\"checkboxa\" data-bind=\"click: chkClick\">\\r\\n\t\t\t\t\t\t\t\t<span class=\"ms-Label\">Release project code to Source Control.</span>\\r\\n\t\t\t\t\t\t\t</label>\\r\\n\t\t\t\t\t\t</div>\t\\r\\n\t\t\t\t\t</div>\t\t\t\t\t\\r\\n\t\t\t\t\t<br>\\r\\n\t\t\t\t\t<div  data-bind=\"visible: gitConnectedAndDesired\">\\r\\n\t\t\t\t\t\t<div>\\r\\n\t\t\t\t\t\t\t<span class=\"ms-TextField-description\">Current version of the form project\\'s saved source code will be commited into Source Control as new release.</span>\\r\\n\t\t\t\t\t\t</div>\t\t\t\t\t\t\\r\\n\t\t\t\t\t\t<br>\\r\\n\t\t\t\t\t\t<div class=\"ms-TextField is-required\">\\r\\n\t\t\t\t\t\t\t<label class=\"ms-Label\">Commit Message</label>\\r\\n\t\t\t\t\t\t\t<input class=\"ms-TextField-field\" type=\"text\" data-bind=\"enable: gitConnected, value: gitMessage, valueUpdate: \\'afterkeydown\\'\" required=\"required\">\\r\\n\t\t\t\t\t\t</div>\t\\r\\n\t\t\t\t\t\t<div class=\"ms-Grid\">\\r\\n\t\t\t\t\t\t\t<div class=\"ms-Grid-row\" style=\"display: block;\">\\r\\n\t\t\t\t\t\t\t\t<div class=\"ms-Grid-col\" >\\r\\n\t\t\t\t\t\t\t\t\t<div  class=\"ms-Label\" style=\"margin-top:4px; font-size:13px;\">\\r\\n\t\t\t\t\t\t\t\t\t\t<span>Version: </span><span data-bind=\"text: gitVersion\"></span>\\r\\n\t\t\t\t\t\t\t\t\t</div>\\r\\n\t\t\t\t\t\t\t\t</div>\\r\\n\t\t\t\t\t\t\t\t<div class=\"ms-Grid-col\">\\r\\n\t\t\t\t\t\t\t\t\t<div class=\"ms-CheckBox\">\\r\\n\t\t\t\t\t\t\t\t\t\t<input tabindex=\"-1\" type=\"checkbox\" class=\"ms-CheckBox-input\">\\r\\n\t\t\t\t\t\t\t\t\t\t<label role=\"checkbox\" class=\"ms-CheckBox-field \" tabindex=\"0\" aria-checked=\"false\" name=\"checkboxa\" data-bind=\"click: chkMajorVersionClick\">\\r\\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"ms-Label\">Major version</span>\\r\\n\t\t\t\t\t\t\t\t\t\t</label>\\r\\n\t\t\t\t\t\t\t\t\t</div>\t\\r\\n\t\t\t\t\t\t\t\t</div>\\r\\n\t\t\t\t\t\t\t</div>\\r\\n\t\t\t\t\t\t</div>\\r\\n\t\t\t\t\t</div>\t\t\t\t\t\\r\\n\t\t\t\t\t<div data-bind=\"visible: gitDisconnected\">\\r\\n\t\t\t\t\t\t<b>Note:</b> There is a recommended best practice to commit published form\\'s project code into the Source Control. You may open \\'Source Control\\' tab now to setup connection for your GitHub source control.\t\t\t\t\\r\\n\t\t\t\t\t</div>\\r\\n\t\t\t\t\t<br>\\r\\n\t\t\t\t\t<div>\\r\\n\t\t\t\t\t\t<button data-bind=\"click: publishForm, css:enablePublishForm\" style=\"float:left;\" class=\"ms-Button ms-Button--primary\"><span class=\"ms-Button-label\">Publish</span></button>\\r\\n\t\t\t\t\t\t<button data-bind=\"click: panelCloseGitPanel\" style=\"float:right;\" class=\"ms-Button ms-Button--primary\"><span class=\"ms-Button-label\">Close</span></button>\t\\r\\n\t\t\t\t\t</div>\\r\\n\t\t\t\t</div>\\r\\n\t\t\t\t<div data-bind=\"visible:processForm\">\\r\\n\t\t\t\t\t<br>\\r\\n\t\t\t\t\t<br>\\r\\n\t\t\t\t\t<div data-bind=\"visible: processing\">\\r\\n\t\t\t\t\t\t<div style=\"max-width: 100px;\" class=\"ms-Spinner  ms-Spinner--large\">\\r\\n\t\t\t\t\t\t\t<div class=\"ms-Spinner-label\">\\r\\n\t\t\t\t\t\t\t  Publishing...\\r\\n\t\t\t\t\t\t\t</div>\\r\\n\t\t\t\t\t\t</div>\t\t\t\t\t\t\\r\\n\t\t\t\t\t</div>\\r\\n\t\t\t\t\t<div data-bind=\"visible: completed\">\\r\\n\t\t\t\t\t\t<b>Completed.</b>\t\t\t\t\\r\\n\t\t\t\t\t\t<br>\\r\\n\t\t\t\t\t\t<br>\\r\\n\t\t\t\t\t\t<button data-bind=\"click: panelCloseGitPanel\" style=\"float:right;\" class=\"ms-Button ms-Button--primary\"><span class=\"ms-Button-label\">Close</span></button>\t\\r\\n\t\t\t\t\t</div>\\r\\n\t\t\t\t</div>\\r\\n\t\t\t</div>\t\\r\\n\t\t\t<div  data-content=\"git2\" data-bind=\"visible:tabSourceControl2\">\\r\\n\t\t\t\t<br>\\r\\n\t\t\t\t<div class=\"Intro\">\\r\\n\t\t\t\t  <h2 class=\"Intro-title ms-fontSize-xl\">GitHub Connection Info</h2>\\r\\n\t\t\t\t</div>\\r\\n\t\t\t\t<br>\\r\\n\t\t\t\t<div class=\"ms-TextField is-required\">\\r\\n\t\t\t\t\t<label class=\"ms-Label\">Login</label>\\r\\n\t\t\t\t\t<input class=\"ms-TextField-field\" type=\"text\" data-bind=\"disable: gitConnected, value: gitUserName\">\\r\\n\t\t\t\t</div>\t\\r\\n\t\t\t\t<div class=\"ms-TextField is-required\">\\r\\n\t\t\t\t\t<label class=\"ms-Label\">Password</label>\\r\\n\t\t\t\t\t<input class=\"ms-TextField-field\" type=\"password\" data-bind=\"disable: gitConnected, value: gitUserPassword\">\\r\\n\t\t\t\t</div>\t\\r\\n\t\t\t\t<div class=\"ms-TextField\">\\r\\n\t\t\t\t\t<label class=\"ms-Label\">Organization</label>\\r\\n\t\t\t\t\t<input class=\"ms-TextField-field\" type=\"text\" data-bind=\"disable: gitConnected, value: gitOrganization\">\\r\\n\t\t\t\t\t<span class=\"ms-TextField-description\">Optional: GitHub Organization<a href=\"#\">Why not?</a></span>\\r\\n\t\t\t\t</div>\t\\r\\n\t\t\t\t\\r\\n\t\t\t\t<div>\t\t\t\\r\\n\t\t\t\t\t<br>\\r\\n\t\t\t\t\t<br>\\r\\n\t\t\t\t\t<br>\\r\\n\t\t\t\t\t<button data-bind=\"visible: enableConnect, click: actionConnect\" style=\"float:left;\" class=\"ms-Button ms-Button--primary\"><span class=\"ms-Button-label\">Connect</span></button>\\r\\n\t\t\t\t\t<button data-bind=\"visible: enableDisconnect, click: actionDisconnect\" style=\"float:left;\" class=\"ms-Button ms-Button--primary\"><span class=\"ms-Button-label\">Disconnect</span></button>\\r\\n\t\t\t\t\t<button data-bind=\"click: panelCloseGitPanel\" style=\"float:right;\" class=\"ms-Button ms-Button--primary\"><span class=\"ms-Button-label\">Close</span></button>\\r\\n\t\t\t\t</div>\t\t\t\\r\\n\t\t\t</div>\t\\r\\n\t\t\t<div  data-content=\"menu2\"  data-bind=\"visible:tabMore2\">\\r\\n\t\t\t\tmore\\r\\n\t\t\t</div>\\r\\n\t\t</div>\t\\r\\n\t</div>\\r\\n\t<div data-bind=\"visible: gitTab\">\\r\\n\t\t<div class=\"ms-Pivot  ms-Pivot--large ms-Pivot--tabs\">\\r\\n\t\t  <ul class=\"ms-Pivot-links\">\\r\\n\t\t\t<li class=\"ms-Pivot-link\" data-content=\"push\" title=\"Pull\" tabindex=\"1\" data-bind=\"css:{\\'is-selected\\': true == tabPull()}, click: tabPullClick\">\\r\\n\t\t\t  Component\\r\\n\t\t\t</li>\\r\\n\t\t\t<li class=\"ms-Pivot-link \" data-content=\"git3\" title=\"Git3\" tabindex=\"1\"  data-bind=\"css:{\\'is-selected\\': true == tabSourceControl3()}, click: tabSourceControl3Click\">\\r\\n\t\t\t  Source Control\\r\\n\t\t\t</li>\\r\\n\t\t\t<li class=\"ms-Pivot-link\" tabindex=\"1\"  data-bind=\"css:{\\'is-selected\\': true == tabMore3()}, click: tabMore3Click\">\\r\\n\t\t\t  <i class=\"ms-Pivot-ellipsis ms-Icon ms-Icon--More\"></i>\\r\\n\t\t\t</li>\\r\\n\t\t  </ul>\\r\\n\t\t\t<div  data-content=\"pull\" data-bind=\"visible:tabPull\">\\r\\n\t\t\t\t<div data-bind=\"visible: panelNewForm\">\\r\\n\t\t\t\t\t<br>\\r\\n\t\t\t\t\t<div class=\"Intro\">\\r\\n\t\t\t\t\t  <h2 class=\"Intro-title ms-fontSize-xl\">New Version</h2>\\r\\n\t\t\t\t\t</div>\\r\\n\t\t\t\t\t<br>\\r\\n\t\t\t\t\t\t<span class=\"ms-TextField-description\">NOTE: only last saved source code files will be copied to source control. Any not-saved changes in online editor will be ignored.</span>\\r\\n\t\t\t\t\t<br>\\r\\n\t\t\t\t\t<br>\\r\\n\t\t\t\t\t<div class=\"ms-TextField is-required\" data-bind=\"visible:gitConnected\">\\r\\n\t\t\t\t\t\t<label class=\"ms-Label\">Commit Message</label>\\r\\n\t\t\t\t\t\t<input class=\"ms-TextField-field\" type=\"text\" data-bind=\"value: gitMessage, valueUpdate: \\'afterkeydown\\'\">\\r\\n\t\t\t\t\t</div>\t\\r\\n\t\t\t\t\t<div data-bind=\"visible: gitDisconnected\">\\r\\n\t\t\t\t\t\t<b>Warning:</b> Source Control is disconnected.  Open \\'Source Control\\' tab to configure or restore connection.\t\t\t\t\\r\\n\t\t\t\t\t</div>\\r\\n\t\t\t\t\t<br>\\r\\n\t\t\t\t\t<br>\\r\\n\t\t\t\t\t<div>\\r\\n\t\t\t\t\t\t<button data-bind=\"click: commitCompVersion, visible:showCommitButton, css:enableCommitButton\" style=\"float:left;\" class=\"ms-Button ms-Button--primary\"><span class=\"ms-Button-label\">Save New Version</span></button>\\r\\n\t\t\t\t\t\t<button data-bind=\"click: hideNewCommitForm\" style=\"float:right;\" class=\"ms-Button ms-Button--primary\"><span class=\"ms-Button-label\">Cancel</span></button>\t\\r\\n\t\t\t\t\t</div>\\r\\n\t\t\t\t</div>\\r\\n\t\t\t\t<div data-bind=\"visible: panelListForm\">\\r\\n\t\t\t\t\t<br>\\r\\n\t\t\t\t\t<div class=\"Intro\">\\r\\n\t\t\t\t\t  <h2 class=\"Intro-title ms-fontSize-xl\">Versions History</h2>\\r\\n\t\t\t\t\t</div>\\r\\n\t\t\t\t\t<br>\\r\\n\t\t\t\t\t<div data-bind=\"visible: gitReady\">\\r\\n\t\t\t\t\t\t<div>\\r\\n\t\t\t\t\t\t\t<button class=\"ms-Button ms-Button--hero\" data-bind=\"click: showNewCommitForm\">\\r\\n\t\t\t\t\t\t\t\t<span class=\"ms-Button-icon\"><i class=\"ms-Icon ms-Icon--Add\"></i></span>\\r\\n\t\t\t\t\t\t\t\t<span class=\"ms-Button-label\">New Version</span>\\r\\n\t\t\t\t\t\t\t</button>\\r\\n\t\t\t\t\t\t\t<br>\\r\\n\t\t\t\t\t\t</div>\\r\\n\t\t\t\t\t\t<div style=\\'margin-left:25px;\\' data-bind=\\'commitsGrid: commitsGridViewModel\\'></div>\\r\\n\t\t\t\t\t</div>\\r\\n\t\t\t\t\t<div data-bind=\"visible:processForm\">\\r\\n\t\t\t\t\t\t<br>\\r\\n\t\t\t\t\t\t<br>\\r\\n\t\t\t\t\t\t<div data-bind=\"visible: processing\">\\r\\n\t\t\t\t\t\t\t<div style=\"max-width: 100px;\" class=\"ms-Spinner  ms-Spinner--large\">\\r\\n\t\t\t\t\t\t\t\t<div class=\"ms-Spinner-label\">\\r\\n\t\t\t\t\t\t\t\t  Working on it ...\\r\\n\t\t\t\t\t\t\t\t</div>\\r\\n\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\\r\\n\t\t\t\t\t\t</div>\\r\\n\t\t\t\t\t\t<div data-bind=\"visible: messagePanel\">\\r\\n\t\t\t\t\t\t\t<div style=\\'margin-left:25px;\\' data-bind=\"text: messageText\"></div>\\r\\n\t\t\t\t\t\t</div>\\r\\n\t\t\t\t\t\t<div data-bind=\"visible: completed\">\\r\\n\t\t\t\t\t\t\t<b>Completed.</b>\t\t\t\t\\r\\n\t\t\t\t\t\t\t<br>\\r\\n\t\t\t\t\t\t\t<br>\\r\\n\t\t\t\t\t\t\t<button data-bind=\"click: panelCloseGitPanel\" style=\"float:right;\" class=\"ms-Button ms-Button--primary\"><span class=\"ms-Button-label\">OK</span></button>\t\\r\\n\t\t\t\t\t\t</div>\\r\\n\t\t\t\t\t</div>\t\t\t\t\\r\\n\t\t\t\t\t<br>\\r\\n\t\t\t\t\t<div>\\r\\n\t\t\t\t\t\t<button data-bind=\"click: restoreCommit, visible:showRestoreCommit, css:enableRestoreCommit\" style=\"float:left;\" class=\"ms-Button ms-Button--primary\"><span class=\"ms-Button-label\">Restore Version</span></button>\\r\\n\t\t\t\t\t\t<button data-bind=\"click: panelCloseGitPanel\" style=\"float:right;\" class=\"ms-Button ms-Button--primary\"><span class=\"ms-Button-label\">Close</span></button>\t\\r\\n\t\t\t\t\t</div>\\r\\n\t\t\t\t</div>\\r\\n\t\t\t</div>\t\\r\\n\t\t\t<div  data-content=\"git3\" data-bind=\"visible:tabSourceControl3\">\\r\\n\t\t\t\t<br>\\r\\n\t\t\t\t<div class=\"Intro\">\\r\\n\t\t\t\t  <h2 class=\"Intro-title ms-fontSize-xl\">GitHub Connection Info</h2>\\r\\n\t\t\t\t</div>\\r\\n\t\t\t\t<br>\\r\\n\t\t\t\t<div class=\"ms-TextField is-required\">\\r\\n\t\t\t\t\t<label class=\"ms-Label\">Login</label>\\r\\n\t\t\t\t\t<input class=\"ms-TextField-field\" type=\"text\" data-bind=\"disable: gitConnected, value: gitUserName\">\\r\\n\t\t\t\t</div>\t\\r\\n\t\t\t\t<div class=\"ms-TextField is-required\">\\r\\n\t\t\t\t\t<label class=\"ms-Label\">Password</label>\\r\\n\t\t\t\t\t<input class=\"ms-TextField-field\" type=\"password\" data-bind=\"disable: gitConnected, value: gitUserPassword\">\\r\\n\t\t\t\t</div>\t\\r\\n\t\t\t\t<div class=\"ms-TextField\">\\r\\n\t\t\t\t\t<label class=\"ms-Label\">Organization</label>\\r\\n\t\t\t\t\t<input class=\"ms-TextField-field\" type=\"text\" data-bind=\"disable: gitConnected, value: gitOrganization\">\\r\\n\t\t\t\t\t<span class=\"ms-TextField-description\">Optional: GitHub Organization<a href=\"#\">Why not?</a></span>\\r\\n\t\t\t\t</div>\t\\r\\n\t\t\t\t\\r\\n\t\t\t\t<div>\t\t\t\\r\\n\t\t\t\t\t<br>\\r\\n\t\t\t\t\t<br>\\r\\n\t\t\t\t\t<br>\\r\\n\t\t\t\t\t<button data-bind=\"visible: enableConnect, click: actionConnect\" style=\"float:left;\" class=\"ms-Button ms-Button--primary\"><span class=\"ms-Button-label\">Connect</span></button>\\r\\n\t\t\t\t\t<button data-bind=\"visible: enableDisconnect, click: actionDisconnect\" style=\"float:left;\" class=\"ms-Button ms-Button--primary\"><span class=\"ms-Button-label\">Disconnect</span></button>\\r\\n\t\t\t\t\t<button data-bind=\"click: panelCloseGitPanel\" style=\"float:right;\" class=\"ms-Button ms-Button--primary\"><span class=\"ms-Button-label\">Close</span></button>\\r\\n\t\t\t\t</div>\t\t\t\\r\\n\t\t\t</div>\t\\r\\n\t\t\t<div  data-content=\"menu3\"  data-bind=\"visible:tabMore3\">\\r\\n\t\t\t\tmenu\\r\\n\t\t\t</div>\\r\\n\t\t</div>\t\\r\\n\t</div>\\r\\n\t\\r\\n</script>\\r\\n<div class=\"ms-PanelDefaultGit\">\\r\\n  <!-- Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information. -->\\r\\n  <div class=\"ms-Panel ms-Panel--md\">\\r\\n    <button class=\"ms-Panel-closeButton ms-PanelAction-close\">\\r\\n      <i class=\"ms-Panel-closeIcon ms-Icon ms-Icon--Cancel\"></i>\\r\\n    </button>\\r\\n    <div class=\"ms-Panel-contentInner\">\\r\\n      <div class=\"ms-Panel-content\">\\r\\n\t\t<div data-bind=\"template: {name: \\'gitpanel-template\\'}\" id=\"gitpanel-container\"></div>\t\t\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n'}),define(\"toolbar-gitgrid\",[\"text!./../Runtime/source/toolbar-gitpanel.html\"],function(templateMarkup){!function(){function e(e){if(\"number\"!=typeof e.length||0===e.length)return[];var t=[];for(var n in e[0])t.push({headerText:n,rowText:n});return t}ko.commitsGrid={viewModel:function(t){this.data=t.data,this.currentPageIndex=ko.observable(0),this.pageSize=t.pageSize||5,this.onChangePage=function(e){this.currentPageIndex(e)},this.columns=t.columns||e(ko.unwrap(this.data)),this.itemsOnCurrentPage=ko.computed(function(){var e=this.pageSize*this.currentPageIndex();return ko.unwrap(this.data).slice(e,e+this.pageSize)},this),this.maxPageIndex=ko.computed(function(){return Math.ceil(ko.unwrap(this.data).length/this.pageSize)-1},this)}};var t=new ko.nativeTemplateEngine;t.addTemplate=function(e,t){var n=$(\"<script type='text/html' id='\"+e+\"'>\"+t+\"</script>\");$(\"#templatesblock\").append(n)},t.addTemplate(\"ko_commitsGrid_grid\",'\t\t\t\t\t\t<table class=\"ms-Table  ms-Table--fixed ms-Table--selectable spa-Components\" cellspacing=\"0\">\t\t\t\t\t\t\t<thead>\t\t\t\t\t\t\t\t<tr>\t\t\t\t\t\t\t\t   <th class=\"ms-Table-rowCheck\"></th>\t\t\t\t\t\t\t\t   <th>Commits</th>\t\t\t\t\t\t\t\t</tr>\t\t\t\t\t\t\t</thead>\t\t\t\t\t\t\t<tbody data-bind=\"foreach: {data: itemsOnCurrentPage, as: \\'commit\\'}\">\t\t\t\t\t\t\t\t<tr data-bind=\"css: { \\'is-selected\\': true == commit.selected() }\">\t\t\t\t\t\t\t\t\t<td class=\"ms-Table-rowCheck\" data-bind=\"click: function(commit, event) { commit.selected(!commit.selected()); }\"></td>\t\t\t\t\t\t\t\t\t<td data-bind=\"text: commit.Title\"></td>\t\t\t\t\t\t\t\t</tr>\t\t\t\t\t\t\t</tbody>\t\t\t\t\t\t</table>'),t.addTemplate(\"ko_commitsGrid_pageLinks\",'\t\t\t\t\t\t<br>\t\t\t\t\t\t<div class=\"ko-grid-pageLinks\">\t\t\t\t\t\t\t<span>Page:</span>\t\t\t\t\t\t\t<!-- ko foreach: ko.utils.range(0, maxPageIndex) -->\t\t\t\t\t\t\t\t   <a href=\"#\" data-bind=\"text: $data + 1, click: function() { $root.onChangePage($data) }, css: { selected: $data == $root.currentPageIndex() }\">\t\t\t\t\t\t\t\t</a>\t\t\t\t\t\t\t<!-- /ko -->\t\t\t\t\t\t</div>'),ko.bindingHandlers.commitsGrid={init:function(){return{controlsDescendantBindings:!0}},update:function(e,n,r){for(var i=n();e.firstChild;)ko.removeNode(e.firstChild);var s=r.get(\"commitsGridTemplate\")||\"ko_commitsGrid_grid\",o=r.get(\"commitsGridPagerTemplate\")||\"ko_commitsGrid_pageLinks\",u=e.appendChild(document.createElement(\"DIV\"));ko.renderTemplate(s,i,{templateEngine:t},u,\"replaceNode\");var a=e.appendChild(document.createElement(\"DIV\"));ko.renderTemplate(o,i,{templateEngine:t},a,\"replaceNode\")}}}(),function(){try{new window.CustomEvent(\"test\")}catch(e){var t=function(e,t){var n;return t=t||{bubbles:!1,cancelable:!1,detail:void 0},n=document.createEvent(\"CustomEvent\"),n.initCustomEvent(e,t.bubbles,t.cancelable,t.detail),n};t.prototype=window.Event.prototype,window.CustomEvent=t}}();var GitPanel=function(e){var t=this;t.Toolbar=null,t.tabReset=ko.observable(!0),t.tabResetClick=function(){t.tabReset(!0),t.tabSourceControl(!1),t.tabMore(!1),t.tabPublish(!1),t.tabSourceControl2(!1),t.tabMore2(!1),t.tabPush(!1),t.tabPull(!1),t.tabSourceControl3(!1),t.tabMore3(!1)},t.tabSourceControl=ko.observable(!1),t.tabSourceControlClick=function(){t.tabReset(!1),t.tabSourceControl(!0),t.tabMore(!1),t.tabPublish(!1),t.tabSourceControl2(!1),t.tabMore2(!1),t.tabPush(!1),t.tabPull(!1),t.tabSourceControl3(!1),t.tabMore3(!1)},t.tabSourceControl2=ko.observable(!1),t.tabSourceControl2Click=function(){t.tabReset(!1),t.tabSourceControl(!1),t.tabMore(!1),t.tabPublish(!1),t.tabSourceControl2(!0),t.tabMore2(!1),t.tabPush(!1),t.tabPull(!1),t.tabSourceControl3(!1),t.tabMore3(!1)},t.tabSourceControl3=ko.observable(!1),t.tabSourceControl3Click=function(){t.tabReset(!1),t.tabSourceControl(!1),t.tabMore(!1),t.tabPublish(!1),t.tabSourceControl2(!1),t.tabMore2(!1),t.tabPush(!1),t.tabPull(!1),t.tabSourceControl3(!0),t.tabMore3(!1)},t.tabMore=ko.observable(!1),t.tabMoreClick=function(){t.tabReset(!1),t.tabSourceControl(!1),t.tabMore(!0),t.tabPublish(!1),t.tabSourceControl2(!1),t.tabMore2(!1),t.tabPush(!1),t.tabPull(!1),t.tabSourceControl3(!1),t.tabMore3(!1),t.checkSysButtons()},t.tabMore2=ko.observable(!1),t.tabMore2Click=function(){t.tabReset(!1),t.tabSourceControl(!1),t.tabMore(!1),t.tabPublish(!1),t.tabSourceControl2(!1),t.tabMore2(!0),t.tabPush(!1),t.tabPull(!1),t.tabSourceControl3(!1),t.tabMore3(!1)},t.tabMore3=ko.observable(!1),t.tabMore3Click=function(){t.tabReset(!1),t.tabSourceControl(!1),t.tabMore(!1),t.tabPublish(!1),t.tabSourceControl2(!1),t.tabMore2(!1),t.tabPush(!1),t.tabPull(!1),t.tabSourceControl3(!1),t.tabMore3(!0)},t.tabPublish=ko.observable(!0),t.tabPublishClick=function(){t.tabReset(!1),t.tabSourceControl(!1),t.tabMore(!1),t.tabPublish(!0),t.tabSourceControl2(!1),t.tabMore2(!1),t.tabPush(!1),t.tabPull(!1),t.tabSourceControl3(!1),t.tabMore3(!1),t.gitConnected()&&t.$getnextreleaseversion()},t.tabPush=ko.observable(!1),t.tabPushClick=function(){t.tabReset(!1),t.tabSourceControl(!1),t.tabMore(!1),t.tabPublish(!1),t.tabSourceControl2(!1),t.tabMore2(!1),t.tabPush(!0),t.tabPull(!1),t.tabSourceControl3(!1),t.tabMore3(!1)},t.tabPull=ko.observable(!0),t.tabPullClick=function(){t.tabReset(!1),t.tabSourceControl(!1),t.tabMore(!1),t.tabPublish(!1),t.tabSourceControl2(!1),t.tabMore2(!1),t.tabPush(!1),t.tabPull(!0),t.tabSourceControl3(!1),t.tabMore3(!1),t.getVersions(this.component)},t.deployWorkflow=function(){t.Toolbar.deployWorkflow()},t.messagePanel=ko.observable(!1),t.gitReady=ko.pureComputed(function(){return!t.messagePanel()&&!t.processing()}),t.messageText=ko.observable(\"\"),t.message=function(e){e?(t.messagePanel(!0),t.messageText(e)):(t.messagePanel(!1),t.messageText(\"\"))},t.start=function(){t.processForm(!0),t.completed(!1),t.processing(!0),t.message()},t.success=function(e){t.processing(!1),t.message(),void 0==e&&t.completed(!0),\"ok\"==e&&t.processForm(!1)},t.failure=function(e){t.message(e),t.processing(!1),t.completed(!1)},t.radResetSelected=ko.observable(\"\"),this.radResetClick=function(e,n){\"lastcommit\"==n.currentTarget.title&&t.actionAddProjectConnection(!0),t.radResetSelected(n.currentTarget.title)},t.chkCommitRelease=ko.observable(!0),this.chkClick=function(e,n){window.setTimeout(function(){var e=!1;n.currentTarget.classList.forEach(function(t){\"is-checked\"==t&&(e=!0)}),t.chkCommitRelease(e?!0:!1)},10)},this.chkMajorVersionClick=function(e,t){var n=this;window.setTimeout(function(){var e=!1;if(t.currentTarget.classList.forEach(function(t){\"is-checked\"==t&&(e=!0)}),e){var r=n.gitVersion().split(\".\");if(r.length<2)r.push(\"1.0\");else{var i=parseInt(r[0]);isNaN(i)&&(i=0),r[0]=(i+1).toString(),r[1]=\"0\"}var s=r[0]+\".\"+r[1];n.gitVersion(s)}else n.gitVersion(n.$minorversion)},10)},this.enableCommits=ko.pureComputed(function(){return!t.messagePanel()&&!t.processing()&&\"lastcommit\"==t.radResetSelected()},this),this.disableCommits=ko.pureComputed(function(){return\"lastcommit\"==t.radResetSelected()},this),this.gitConnectedAndDesired=ko.pureComputed(function(){return t.gitConnected()&&t.chkCommitRelease()}),this.enableCancelResetForm=ko.pureComputed(function(){return\"lastcommit\"==t.radResetSelected()&&t.selectAccount()?!1:!0},this),this.gitDisconnected=ko.pureComputed(function(){var e=t.gitConnected()?!1:!0,n=t.processing()?!1:!0;return e&&n},this),t.publishTab=e?ko.observable(e.publish):ko.observable(!1),t.resetTab=e?ko.observable(e.reset):ko.observable(!0),t.gitTab=e?ko.observable(e.git):ko.observable(!1),t.gitUserName=ko.observable().extend({required:{params:!0,message:\"GitHub Login Name is required\"}}),t.gitUserPassword=ko.observable().extend({required:{params:!0,message:\"GitHub password is required\"}}),t.gitOrganization=ko.observable(),t.gitRepoName=ko.observable(),t.gitMessage=ko.observable(\"\").extend({required:{params:!0,message:\"Short description for this commit is required\"}}).extend({minLength:3}).extend({maxLength:36}),t.gitVersion=ko.observable('\"v0.1\"').extend({required:{params:!0,message:\"Release version formatted as v0.1 is required\"}}).extend({minLength:4}),t.publishSubForm=ko.validatedObservable({p1:t.gitMessage,p2:t.gitVersion}),t.gitConnected=ko.observable(!1),t.errors=ko.validation.group([t.gitMessage]),t.loginSubForm=ko.validatedObservable({property1:t.gitUserName,property1:t.gitUserPassword}),t.enablePublishForm=ko.pureComputed(function(){return 0==t.gitConnected()?\"\":0==t.chkCommitRelease()?\"\":t.publishSubForm.isValid()?\"\":\"is-disabled\"}),t.enableLoginForm=ko.pureComputed(function(){return t.loginSubForm.isValid()}),t.listRepos=ko.observableArray(),t.gitConnected.subscribe(function(e){\"lastcommit\"==t.radResetSelected()&&t.actionAddProjectConnection(e)}),t.actionAddProjectConnection=function(e){var n={type:\"user\",account:t.gitUserName()};e?t.gitConnected()&&(t.radConnectionTypeSelected(\"user\"),t.gitAccount(t.gitUserName()),t.actionAddConnection()):(t.listAccounts.pop(n),t.selectedAccount(void 0),t.selectedRepo(void 0),t.commits.removeAll(),t.listRepos([]),t.gitAccount(\"\"))},t.gitSysMessage=ko.observable(\"\"),t.gitSysVersion=ko.observable(\"v1.0.0.0\"),t.gitSysRemoteVersion=ko.observable(\"v1.0.0.0\"),t.commits=ko.observableArray(),t.inputForm=ko.observable(!0),t.processForm=ko.observable(!1),t.processing=ko.observable(!1),t.completed=ko.observable(!1),t.panelNewForm=ko.observable(!1),t.panelListForm=ko.observable(!0),t.showSysButtons=ko.observable(!1),this.enableSysUpdateButton=ko.pureComputed(function(){return this.gitSysVersion()!=this.gitSysRemoteVersion()},this),t.checkSysButtons=function(){try{requirejs([\"text!./../Runtime/source/uglify.js\"],function(e){e&&t.showSysButtons(!0)},function(e){})}catch(e){}t.$getlastsysreleaseversion().done(function(e){t.gitSysRemoteVersion(e)})},t.setConnectionInfo=function(){var e={};e.gitUserName=t.gitUserName(),e.gitUserPassword=t.gitUserPassword(),e.gitOrganization=t.gitOrganization(),e.gitRepoName=t.gitRepoName(),e.gitConnected=t.gitConnected(),window.Cookies.set(\"List\"+t.Toolbar.form()._formListName,e,{expires:365})},t.getConnectionInfo=function(){var e=window.Cookies.get(\"List\"+t.Toolbar.form()._formListName),n=e?JSON.parse(e):{};t.gitUserName(n.gitUserName?n.gitUserName:\"\"),t.gitUserPassword(n.gitUserPassword?n.gitUserPassword:\"\"),t.gitOrganization(n.gitOrganization?n.gitOrganization:\"\"),t.gitRepoName(n.gitRepoName?n.gitRepoName:t.Toolbar.form()._formListName),t.gitConnected(n.gitConnected?n.gitConnected:!1)},t.selectedRepo=ko.observable(void 0),t.gitAccount=ko.observable(\"\").extend({required:{params:!0,message:\"Account Name is required\"}}),t.listAccounts=ko.observableArray(),t.selectedAccount=ko.observable(void 0),t.lastSelectedAccount=void 0,t.selectAccount=ko.observable(!0),t.selectRepository=ko.observable(!1),t.selectedAccount.subscribe(function(e){e?(t.lastSelectedAccount=e,t.$getRepos(e),t.selectAccount(!1),t.selectRepository(!0)):(t.messageAddConnection(\"\"),t.selectAccount(!0),t.selectRepository(!1))}),t.$getRepos=function(n){var r=$.Deferred();return requirejs([\"octokat\"],function(i){var s=n&&\"organization\"==n.type?n.account:void 0,u=n?\"user\"==n.type?n.account:void 0:t.gitUserName();t.$getPublicRepos(i,s,u).done(function(i){t.listRepos(i),t.gitConnected()&&n&&n.account==t.gitUserName()?window.setTimeout(function(){t.selectedRepo(e.runtime._formListName),r.resolve()},200):r.resolve()}).fail(function(e){r.reject(e)})}),r.promise()},t.selectedRepo.subscribe(function(e){t.$selectedReleaseLinesCount(0),e?t.getReleases(e):t.commits.removeAll()}),t.radConnectionTypeSelected=ko.observable(),this.radConnectionTypeClick=function(e,n){t.radConnectionTypeSelected(n.currentTarget.title)},t.messageAddConnection=ko.observable(),t.enableAddConnection=ko.pureComputed(function(){return t.gitAccount.isValid()?\"\":\"is-disabled\"}),t.actionAddConnection=function(){var e={type:t.radConnectionTypeSelected(),account:t.gitAccount()};t.$getRepos(e).done(function(){t.listAccounts.push(e),t.selectedAccount(e),t.selectAccount(!1),t.selectRepository(!0),t.gitAccount(\"\")}).fail(function(e){t.messageAddConnection(e)})},t.actionAddConnectionCancel=function(){t.selectAccount(!1),t.selectRepository(!0),t.gitAccount(\"\"),0==t.listAccounts().length&&t.panelCloseGitPanel(),t.selectedAccount(t.lastSelectedAccount),t.messageAddConnection(\"\")},t.enableConnect=ko.pureComputed(function(){return t.gitConnected()?!1:t.gitUserName.isValid()&&t.gitUserPassword.isValid()}),t.actionConnect=function(){t.message(),requirejs([\"octokat\"],function(e){t.$getOrCreateRepo(e).then(function(e){t.gitConnected(!0),t.setConnectionInfo()},function(e){t.message(e),t.gitConnected(!1),t.setConnectionInfo()})})},t.enableDisconnect=ko.pureComputed(function(){return t.gitConnected()?!0:!1}),t.actionDisconnect=function(){t.gitConnected(!1),t.setConnectionInfo()},t.publishForm=function(){t.inputForm(!1),t.start();var e=t.chkCommitRelease()&&t.gitConnected()?t.gitVersion():void 0;t.$publish(t.gitMessage(),e).then(function(){t.success()},function(e){t.failure(e)})},t.actionApplyResetForm=function(){$(\".spa-Reset > label.is-checked\").each(function(e,n){var r=$(this).attr(\"title\");switch(r){case\"empty\":t.Toolbar.resetFormToEmpty();break;case\"columns\":t.Toolbar.resetFormToColumns();break;case\"lastcommit\":t.resetCommit();break;default:return}})},this.enableApplyResetForm=ko.pureComputed(function(){return\"\"!=t.radResetSelected()&&\"lastcommit\"!=t.radResetSelected()?\"\":\"lastcommit\"==t.radResetSelected()?t.$selectedReleaseLinesCount()<1?\"is-disabled\":t.selectAccount()?\"is-disabled\":\"\":\"is-disabled\"},this),this.showApplyResetForm=ko.pureComputed(function(){return\"lastcommit\"==t.radResetSelected()&&t.selectAccount()?!1:!0},this),t.resetCommit=function(){ko.unwrap(t.commits).forEach(function(e,n){e.selected()&&(e.selected(!1),t.$resetFormCommit(e.sha))})},t.$resetFormCommit=function(e){t.$restoreCommit(e)},t.panelCloseGitPanel=function(){t.Toolbar.GitPanel.dismiss()},t.hideNewCommitForm=function(){t.panelNewForm(!1),t.panelListForm(!0)},t.showNewCommitForm=function(){t.panelListForm(!1),t.panelNewForm(!0)},t.enableCommitButton=ko.pureComputed(function(){return t.gitMessage.isValid()?\"\":\"is-disabled\"}),t.showCommitButton=ko.pureComputed(function(){return t.gitConnected()&&!t.processing()}),t.commitCompVersion=function(){t.hideNewCommitForm(),t.start();var n=e.component,r=t.Toolbar.getCodePanel(n);r.saveComponent().done(function(){t.$readComponentFiles(n).then(function(e){t.$compress(n).then(function(r){t.$commit(e,t.gitMessage(),n).then(function(e){var r={sha:e,commit:{message:t.gitMessage()+\" loading...\"}};t.newcommitline=t.$getCommitLine(r),t.newcommitline.selectable(!1),t.commits.unshift(t.newcommitline),t.$checkCommitCount=0,window.setTimeout(function(){t.$checkCommit(e,n,5)},5e3),t.success(\"ok\")},function(e){t.failure(e)})},function(e){t.failure(e)})},function(e){t.failure(e)})})},t.enableRestoreCommit=ko.pureComputed(function(){return t.$selectedCommitLinesCount()<1?\"is-disabled\":\"\"}),t.showRestoreCommit=ko.pureComputed(function(){return t.gitConnected()&&!t.processing()}),t.restoreCommit=function(){ko.unwrap(t.commits).forEach(function(n,r){if(n.selected()){n.selected(!1);var i=e?e.component:void 0;t.$restoreCommit(n.sha,i)}})},t.$restoreCommit=function(e,n){t.start();var r=n?void 0:\"organization\"==t.selectedAccount().type?t.selectedAccount().account:void 0,i=n?t.gitUserName():\"user\"==t.selectedAccount().type?t.selectedAccount().account:void 0,s=n?t.gitUserPassword():void 0,o=n?t.gitRepoName():t.selectedRepo();t.$getPublicRepo(r,i,s,o).then(function(r){t.$getCommit(r,e,n).then(function(){t.$gitFiles[\"comp.project\"]&&delete t.$gitFiles[\"comp.project\"],t.$gitFiles[\"README.md\"]&&delete t.$gitFiles[\"README.md\"];var e={restoreFiles:JSON.stringify(t.$gitFiles)};t.Toolbar.$form._formDesignSave(e,\"Design/\").then(function(){var e=0;for(filename in t.$gitFiles)\"README.md\"!=filename&&\"LICENSE\"!=filename&&\"comp.project\"!=filename&&e++;if(e>2)window.location.reload();else{var r=n?n.toLowerCase():\"viewmodel\",i=t.Toolbar.getCodePanel(n);t.$gitFiles[r+\".js\"]&&i.modelEditor.setValue(t.$gitFiles[r+\".js\"],-1),t.$gitFiles[r+\".html\"]&&(i.show(t.$gitFiles[r+\".html\"]),i.save()),t.success(\"ok\"),void 0===n&&t.Toolbar.panelCloseGitPanel()}},function(e){t.failure(e)})},function(e){t.failure(e)})},function(e){t.failure(e)})},t.buildsyslib=function(){var e=this;e.start(),e.$buildSysLib().then(function(t,n){e.success(\"ok\")},function(t){e.failure(t)})},t.sysrelease=function(){var e=this;e.start(),e.$buildSysLib(\"getconfig\").then(function(t,n){var r=[];e.$compFiles={},e.$compFiles.syscomponents=t,e.$compFiles.dist=\"./../Runtime/runtime.min.js\\n./../Runtime/designer.min.js\\n./../Runtime/syscomponents.min.js\\n./../Runtime/model.proxy.min.js\\n\";for(var i in e.$compFiles)\"dist\"==i?r.push(e.$readCompFiles(e.$compFiles[i],i,\"./../Runtime/\")):r.push(e.$readCompFiles(e.$compFiles[i],i,\"./../Runtime/syscomponents/\"));$.when.apply($,r).done(function(){e.$sysrelease(e.$gitFiles,e.gitSysMessage(),e.gitSysVersion(),\"prerelease\").then(function(){e.success(\"ok\")},function(t){e.failure(t)})})},function(t){e.failure(t)})},t.sysupdate=function(){t.start(),this.$sysupdate().then(function(){t.success()},function(e){t.failure(e)})},t.$selectedCommitLinesCount=ko.observable(0),t.$getCommitLine=function(e){var n={Title:ko.observable(e.commit.message),selected:ko.observable(!1),enableDelete:ko.observable(!1),selectable:ko.observable(!0),sha:e.sha};return n.selected.subscribe(function(e){if(e){var n=this;ko.unwrap(t.commits).forEach(function(e){e.sha!=n.sha&&e.selected(!1)})}var r=0;ko.unwrap(t.commits).forEach(function(e){e.selected()&&r++}),t.$selectedCommitLinesCount(r)},n),n},t.$selectedReleaseLinesCount=ko.observable(0),t.$getReleaseLine=function(e){var n={Title:e.tag_name+\" - \"+e.body,selected:ko.observable(!1),enableDelete:ko.observable(!1),sha:e.target_commitish};return n.selected.subscribe(function(e){if(e){var n=this;r=1,ko.unwrap(t.commits).forEach(function(e){e.sha!=n.sha&&e.selected(!1)})}var r=0;ko.unwrap(t.commits).forEach(function(e){e.selected()&&r++}),t.$selectedReleaseLinesCount(r)},n),n},t.getReleases=function(e){$.Deferred(),t.start(),t.$releases(e).then(function(){t.success(\"ok\")},function(e){t.failure(e)})},t.getVersions=function(e){$.Deferred(),t.start(),t.$versions(e).then(function(){t.success(\"ok\")},function(e){t.failure(e)})},t.Init=function(n){var r=$.Deferred();return t.Toolbar=n,t.getConnectionInfo(),t.gitSysVersion(t.Toolbar.$runtime._formVersion),t.gitSysRemoteVersion(t.Toolbar.$runtime._formVersion),this.component=e?e.component:\"\",t.commitsGridViewModel=new ko.commitsGrid.viewModel({data:t.commits,pageSize:5}),t.gitTab()&&t.getVersions(this.component),t.tabPublish()&&t.gitConnected()&&t.$getnextreleaseversion(),e.upgrade&&t.tabMoreClick(),r.resolve()}};return function(){this.$compFiles={},this.$workers={},this.$readCompFiles=function(e,t,n){var r=$.Deferred(),i={},s=e.split(\"\\n\");s.forEach(function(e){var t=e.lastIndexOf(\"/\"),n=e.lastIndexOf(\"!\"),r=t>0?e.substring(t+1):n>0?e.substring(n+1):null;r&&(i[r]=null)}),delete i[\"text.js\"];var o=[];for(var u in i)o.push(this.$getFile(u,t,n));return $.when.apply($,o).done(function(){r.resolve(self.$gitFiles)}),r.promise()},this.$readProjectFiles=function(e,t){var n=$.Deferred(),r=this,i=JSON.parse(e),s=[];return r.$compFiles={},t?s.push(r.$compress(\"viewmodel\")):s.push(r.$compress(r.Toolbar.$runtime._formListName)),i.components.forEach(function(e){s.push(r.$compress(e.Title))},r),$.when.apply($,s).done(function(){r.$gitFiles={};var e=new Date;i.timestamp=e.toString(),r.$gitFiles[\"project.js\"]=\"define([], function( ) { return  JSON.stringify(\"+JSON.stringify(i)+\");});\";var t=[];for(var s in r.$compFiles)t.push(r.$readCompFiles(r.$compFiles[s],s,\"./../Design/\"));$.when.apply($,t).done(function(){n.resolve(r.$gitFiles)})}),n.promise()},this.$readComponentFiles=function(e){var t=$.Deferred(),n=this,r=[];n.$compFiles={},r.push(n.$compress(e)),n.$gitFiles={};var i=new Date;return n.$gitFiles[e+\"/comp.project\"]=JSON.stringify({timestamp:i.toString()}),$.when.apply($,r).done(function(){var e=[];for(var r in n.$compFiles)e.push(n.$readCompFiles(n.$compFiles[r],r,\"./../Design/\"));$.when.apply($,e).done(function(){t.resolve(n.$gitFiles)})}),t.promise()},this.$publish=function(e,t){var n=$.Deferred(),r=this;return r.Toolbar.cloneAndSaveViewModelComponent().done(function(){requirejs([\"project\"],function(i){r.$readProjectFiles(i).then(function(s){r.$compress().then(function(s,u){void 0==t?(r.Toolbar.$saveModel(u),n.resolve()):r.$readProjectFiles(i,!0).then(function(i){r.$getRepo().then(function(s){r.$release(s,i,e,t).then(function(){r.Toolbar.$saveModel(u),n.resolve()},function(e){n.reject(e)})},function(e){n.reject(e)})},function(e){n.reject(e)})},function(e){n.reject(e)})},function(e){n.reject(e)})})}),n.promise()},this.$compress=function(e){var t=$.Deferred(),n=this,r=e?e.toLowerCase():e,i=e?e.toLowerCase():\"default\";this.$workers[i]=new Worker(\"Form/Runtime/r-worker.js\"),this.$workers[i].onerror=function(e){t.reject(\"Worker Error \"+e)},this.$workers[i].onmessage=function(e){var s=JSON.parse(e.data),o=s.buildText,u=s.out;r&&(n.$compFiles[r]=o),n.$workers[i].terminate(),t.resolve(o,u)};var s={baseUrl:\"./../Design\",paths:{d:\"sub/d\",text:\"../Runtime/text\",project:\"../Design/project\"},include:[]},o=function(e){s.paths[e]=e,s.include.push(e)};return void 0===r?o(n.Toolbar.$runtime._formListName):\"viewmodel\"===r&&o(\"viewmodel\"),r||s.include.push(\"project\"),this.Toolbar.$runtime._customComponents().forEach(function(e){var t=JSON.parse(JSON.stringify(e));console.log(t.Require.name),void 0===r?o(t.Require.name):r===t.Title&&o(t.Require.name)}),r&&(s.optimize=\"none\"),this.$workers[i].postMessage(JSON.stringify({cmd:\"run\",config:s})),t.promise()},this.$commit=function(e,t,n){var r=$.Deferred(),i=this;return i.$getRepo().then(function(s){i.$putCommit(s,e,t,n).then(function(e){r.resolve(e)},function(e){r.reject(e)})},function(e){r.reject(e)}),r.promise()},this.$versions=function(e){var t=$.Deferred(),n=this;return n.$getRepo().then(function(r){$.getJSON(r.url+\"/commits?path=\"+e).done(function(e){n.commits.removeAll(),e.forEach(function(e,t){n.commits.push(n.$getCommitLine(e))}),t.resolve()}).fail(function(e,n,r){var i=n+\", \"+r;t.reject(i)})},function(e){t.reject(e)}),t.promise()},this.$releases=function(e){var t=$.Deferred(),n=this,r=e&&\"organization\"==n.selectedAccount().type?n.selectedAccount().account:void 0,i=e?\"user\"==n.selectedAccount().type?n.selectedAccount().account:void 0:n.gitUserName(),s=e?void 0:n.gitUserPassword(),o=e?n.selectedRepo():n.gitRepoName();return n.$getPublicRepo(r,i,s,o).then(function(e){$.getJSON(e.url+\"/releases\").done(function(e){n.commits.removeAll(),e.forEach(function(e,t){n.commits.push(n.$getReleaseLine(e))}),t.resolve()}).fail(function(e,n,r){var i=n+\", \"+r;t.reject(i)})},function(e){t.reject(e)}),t.promise()},this.$getlastsysreleaseversion=function(){var e=$.Deferred(),t=this,n=\"spaforms365\",r=void 0,i=void 0,s=\"components\";return t.$getPublicRepo(n,r,i,s).then(function(t){$.getJSON(t.url+\"/releases/latest\").done(function(t){var n=t.tag_name;e.resolve(n)}).fail(function(t,n,r){var i=n+\", \"+r;e.reject(i)})},function(t){e.reject(t)}),e.promise()},this.$getlastreleaseversion=function(){var e=$.Deferred(),t=this;return t.$getRepo().then(function(t){$.getJSON(t.url+\"/releases/latest\").done(function(t){var n=t.tag_name;e.resolve(n)}).fail(function(t,n,r){var i=n+\", \"+r;e.reject(i)})},function(t){e.reject(t)}),e.promise()},this.$minorversion=\"0.1\",this.$getnextreleaseversion=function(){var e=$.Deferred(),t=this;return this.$getlastreleaseversion().then(function(n){var r=n.split(\".\");if(r.length<2)r.push(\"0.1\");else{var i=parseInt(r[r.length-1]);isNaN(i)&&(i=0),r[r.length-1]=(i+1).toString()}var s=r.join(\".\");t.$minorversion=s,t.gitVersion(s),e.resolve(s)},function(t){e.reject(t)}),e.promise()},this.$sysupdate=function(){var e=$.Deferred(),t=this,n=\"spaforms365\",r=void 0,i=void 0,s=\"components\";return t.$getPublicRepo(n,r,i,s).then(function(n){$.getJSON(n.url+\"/releases/latest\").done(function(r){var i=r.target_commitish;console.log(i),t.$getCommit(n,i,void 0).then(function(){var n={};for(filename in t.$gitFiles)\"runtime.min.js\"!=filename&&\"designer.min.js\"!=filename&&\"syscomponents.min.js\"!=filename&&\"model.proxy.min.js\"!=filename?\"LICENSE\"!=filename&&\"README.md\"!=filename&&(n[\"syscomponents/\"+filename]=t.$gitFiles[filename]):n[filename]=decodeURIComponent(escape(atob(t.$gitFiles[filename])));var r={restoreFiles:JSON.stringify(n)};t.Toolbar.$form._formDesignSave(r,\"Runtime/\").then(function(){window.location.reload(),e.resolve()},function(t){e.reject(t)})},function(t){e.reject(t)})}).fail(function(t,n,r){var i=n+\", \"+r;e.reject(i)})},function(t){e.reject(t)}),e.promise()},this.$sysrelease=function(e,t,n,r){var i=$.Deferred(),s=this;return this.$getRepo(\"spaforms365\",\"components\").then(function(u){s.$release(u,e,t,n,r).then(function(){i.resolve()},function(e){i.reject(e)})},function(e){i.reject(e)}),i.promise()},this.$release=function(e,t,n,r,i){var s=$.Deferred(),o=this,u=void 0;return o.$putCommit(e,t,n,u).then(function(t){o.$putRelease(e,n,t,r,i).then(function(e){s.resolve()},function(e){s.reject(e)})},function(e){s.reject(e)}),s.promise()},this.$putRelease=function(e,t,n,r,i){var s=$.Deferred(),o={tag_name:r,target_commitish:n,name:r,body:t,draft:!1,prerelease:i?!0:!1};return e.releases.create(o).then(function(e){s.resolve(e)},function(e){s.reject(e)}),s.promise()},this.$getRepo=function(e,t){var n=$.Deferred(),r=this;if(!this.gitConnected()){var i=\"GIT source control is not connected. Use Source Control tab to configure connection.\";return n.reject(i)}return requirejs([\"octokat\"],function(i){try{var s=new i({username:r.gitUserName(),password:r.gitUserPassword()});s.repos(e?e:r.gitUserName(),t?t:r.gitRepoName()).fetch().then(function(e){n.resolve(e)},function(e){n.reject(e)})}catch(u){return n.reject(u.message)}},function(e){n.reject(e)}),n.promise()},this.$getPublicRepos=function(e,t,n,r){var i=$.Deferred(),s=this;s.message();var o=[];try{var u=\"\";t&&(u=\"https://api.github.com/orgs/\"+t+\"/repos?type=public\"),n&&(u=\"https://api.github.com/users/\"+n+\"/repos?type=public\"),$.getJSON(u).done(function(e){e.forEach(function(e,t){o.push(e.name)}),i.resolve(o)}).fail(function(e,t,n){var r=t+\", \"+n;i.reject(r)})}catch(a){return a.message(a.message),i.reject(a.message)}return i.promise()},this.$getPublicRepo=function(e,t,n,r){var i=$.Deferred(),s=this,o=e?e:t?t:this.gitUserName();return requirejs([\"octokat\"],function(e){try{var t=s.gitConnected()?{username:s.gitUserName(),password:s.gitUserPassword()}:{},n=new e(t);n.repos(o,r?r:s.gitRepoName()).fetch().then(function(e){i.resolve(e)},function(e){i.reject(e)})}catch(u){return i.reject(u.message)}},function(e){i.reject(e)}),i.promise()},this.$getOrCreateRepo=function(e){var t=$.Deferred(),n=this;n.message();try{var r=new e({username:this.gitUserName(),password:this.gitUserPassword()});r.user.repos.fetch().then(function(e){var i=null;if(e.forEach(function(e,t){e.name==n.gitRepoName()&&(i=e)}),null==i){var s={name:n.gitRepoName(),description:\"SPA-FORMS 365, Project \"+n.gitRepoName(),\"private\":!1,auto_init:!0};r.user.repos.create(s).then(function(e){console.log(e),t.resolve(e)},function(e){n.message(e.message),t.reject(e.message)})}else t.resolve(i)},function(e){n.message(e.message),t.reject(e.message)})}catch(i){return i.message(i.message),t.reject(i.message)}return t.promise()},this.$gitFiles={},this.$getFile=function(e,t,n){var r=$.Deferred(),i=this,s=n?n+e:e,o=\"text!\"+s;return requirejs([o],function(n){var s=t?t.toUpperCase()+\"/\":\"\";i.$gitFiles[s+e]=n,r.resolve()}),r.promise()},this.$getTree=function(e,t,n){var r,i=$.Deferred(),s=this;if(\"undefined\"!=typeof window&&null!==window)r=window.btoa;else{if(\"undefined\"!=typeof global&&null!==global?!global.Buffer:!0)throw new Error(\"Native btoa function or Buffer is missing\");r=function(e){var t;return t=new global.Buffer(e,\"binary\"),t.toString(\"base64\")}}var o={};o.base_tree=t,o.tree=[];for(var u in s.$gitFiles){var a=\"DIST/runtime.min.js\"==u||\"DIST/designer.min.js\"==u||\"DIST/syscomponents.min.js\"==u||\"DIST/model.proxy.min.js\"==u?!0:!1;o.tree.push({path:u,mode:\"100644\",type:\"blob\",content:a?btoa(unescape(encodeURIComponent(s.$gitFiles[u]))):s.$gitFiles[u]})}return i.resolve(o)},this.$fetchFile=function(e,t,n){var r=$.Deferred(),i=this;return e.git.blobs(n).fetch().done(function(e){i.$gitFiles[t]=atob(e.content),r.resolve()}),r.promise()},this.$checkCommitCount=0,this.$checkCommit=function(e,t,n){var r=$.Deferred(),i=this;return t?t.toUpperCase():t,i.$getRepo().then(function(s){s.commits(e).fetch().then(function(e){i.newcommitline.Title(i.gitMessage()),i.newcommitline.selectable(!0),r.resolve()},function(s){i.$checkCommitCount<n&&(i.$checkCommitCount++,window.setTimeout(function(){i.$checkCommit(e,t,n)},1e4)),r.reject(s)})},function(e){r.reject(e)}),r.promise()},this.$getCommit=function(e,t,n){var r=$.Deferred(),i=this,s=n?n.toUpperCase():n;return i.$gitFiles={},e.commits(t).fetch().then(function(t){e.git.trees(t.commit.tree.sha).fetch({recursive:1}).then(function(t){var n=[];t.tree.forEach(function(t){if(\"blob\"==t.type&&\"100644\"==t.mode){var r=t.path.indexOf(\"/\")>0?t.path.split(\"/\"):(\"./\"+t.path).split(\"/\");s!=r[0]&&s||n.push(i.$fetchFile(e,r[1],t.sha))}}),$.when.apply($,n).then(function(){r.resolve()},function(e){r.reject(e)})},function(e){r.reject(e)})},function(e){r.reject(e)}),r.promise()},this.$putCommit=function(e,t,n,r){var i=$.Deferred(),s=this;return e.git.refs(\"heads/master\").fetch().then(function(u){var a=u.object.sha;e.git.commits(a).fetch().then(function(u){var f=u.tree.sha;s.$getTree(t,f,r).then(function(t){e.git.trees.create(t).then(function(t){var r=t.sha,s={message:n,tree:r,parents:[a]};e.git.commits.create(s).then(function(t){var n=t.sha,r={sha:n};e.git.refs(\"heads/master\").update(r).then(function(e){i.resolve(n)},function(e){i.reject(e)})},function(e){i.reject(e)})},function(e){i.reject(e)})},function(e){i.reject(e)})},function(e){i.reject(e)})},function(e){i.reject(e)}),i.promise()},this.$buildRuntime=function(){var e={baseUrl:\"\",paths:{d:\"sub/d\",text:\"text\",loader:\"../Runtime/source/form-loader2\",jquery:\"empty:\",knockout:\"empty:\",parsley:\"empty:\",validation:\"empty:\",moment:\"empty:\",fabriccomp:\"empty:\",\"css-builder\":\"empty:\",form2:\"../Runtime/source/form2\",cookie:\"../Runtime/source/js-cookie\",ribbonedit:\"../Runtime/source/ribbonedit\"},include:[\"ribbonedit\",\"form2\",\"cookie\"]};this.$buildsys(e,\"Runtime/runtime.min.js\")},this.$buildRuntimeProxy=function(){var e={baseUrl:\"\",paths:{d:\"sub/d\",text:\"text\",proxy:\"../Runtime/source/model.proxy.min\"},include:[\"proxy\"]};this.$buildsys(e,\"Runtime/model.proxy.min.js\")},this.$buildDesigntime=function(){var e={baseUrl:\"\",paths:{d:\"sub/d\",text:\"text\",\"toolbar-gitgrid\":\"../Runtime/source/toolbar-gitgrid\",\"toolbar-pickuppanel\":\"../Runtime/source/toolbar-pickuppanel\",beautify:\"../Runtime/source/beautify\",beautifyhtml:\"../Runtime/source/beautify-html\",\"beautify-css\":\"../Runtime/source/beautify-css\",grideditor:\"../Runtime/source/jquery.grideditor.uifabric\",jsoneditor:\"empty:\",json5:\"../Runtime/source/json5\",ribbon:\"../Runtime/source/ribbon\",toolbar:\"../Runtime/source/toolbar\"},include:[\"toolbar-gitgrid\",\"toolbar-pickuppanel\",\"beautify\",\"beautifyhtml\",\"beautify-css\",\"grideditor\",\"ribbon\",\"json5\",\"toolbar\"]};this.$buildsys(e,\"Runtime/designer.min.js\")},this.$buildSysLib=function(e){var t=$.Deferred(),n=this,r={baseUrl:\"\",paths:{d:\"sub/d\",text:\"text\",jquery:\"empty:\",buttons:\"../Runtime/syscomponents/buttons\",workflow:\"../Runtime/syscomponents/workflow\",attachment:\"../Runtime/syscomponents/attachment\",forminfo:\"../Runtime/syscomponents/forminfo\",messagebox:\"../Runtime/syscomponents/messagebox\",textbox:\"../Runtime/syscomponents/textbox\",observable2:\"../Runtime/syscomponents/observable2\",checkbox:\"../Runtime/syscomponents/checkbox\",radiogroup:\"../Runtime/syscomponents/radiogroup\",checkboxgroup:\"../Runtime/syscomponents/checkboxgroup\",dropdown:\"../Runtime/syscomponents/dropdown\",datetimebox:\"../Runtime/syscomponents/datetimebox\",personabox:\"../Runtime/syscomponents/personabox\",filebox:\"../Runtime/syscomponents/filebox\",lookupbox:\"../Runtime/syscomponents/lookupbox\",numberbox:\"../Runtime/syscomponents/numberbox\",currencybox:\"../Runtime/syscomponents/currencybox\",notebox:\"../Runtime/syscomponents/notebox\"},include:[\"buttons\",\"workflow\",\"attachment\",\"forminfo\",\"messagebox\",\"textbox\",\"observable2\",\"checkbox\",\"dropdown\",\"checkboxgroup\",\"radiogroup\",\"datetimebox\",\"personabox\",\"filebox\",\"lookupbox\",\"numberbox\",\"currencybox\",\"notebox\"]};return this.worker=new Worker(\"Form/Runtime/r-worker.js\"),this.worker.onerror=function(e){console.error(\"WORKER ERROR\",e),t.reject(\"Worker Error \"+e)},this.worker.onmessage=function(r){var i=JSON.parse(r.data),s=i.buildText,o=\"/*\"+n.gitSysVersion()+\"*/ \"+i.out;console.log(s),void 0===e&&(n.Toolbar.$form._closeOnDesignSave=!1,n.Toolbar.$form._formDesignPublish(o,\"Runtime/syscomponents.min.js\")),n.worker.terminate(),t.resolve(s,o)},this.worker.postMessage(JSON.stringify({cmd:\"run\",config:r})),t.promise()},this.$buildsys=function(e,t){var n=this;requirejs([\"uglify\"],function(){n.processForm(!0),n.processing(!0),window.uglify2=function(e,t,n){n||(n={});var r=window.uglify.parser,i=window.uglify.uglify,s=r.parse(e,n.strict_semicolons);s=i.ast_mangle(s,n.mangle_options),s=i.ast_squeeze(s,n.squeeze_options);var o=i.gen_code(s,n.gen_options);return o},n.worker=new Worker(\"Form/Runtime/r-worker.js\"),n.worker.onerror=function(e){console.error(\"WORKER ERROR\",e)},n.worker.onmessage=function(e){var r=JSON.parse(e.data),i=r.buildText,s=r.out;console.log(i);var o=\"/*\"+n.gitSysVersion()+\"*/ \"+n.$slimmest(s);n.Toolbar.$form._closeOnDesignSave=!1,n.Toolbar.$form._formDesignPublish(o,t),n.processing(!1),n.completed(!0),n.worker.terminate()},n.worker.postMessage(JSON.stringify({cmd:\"run\",config:e}))})},this.$slimmest=function(strTextOrCode,bln){function weightRay2(e,t){var n={};e.filter(/./.test,/[\\w\\W]{2}/).forEach(function(e){n[e]=1});var r=Object.keys(n),i=e.join(\" \"),s=[];return r.map(function(e){i.indexOf(e)!==i.lastIndexOf(e)&&(s[(i.split(e).length-2)*(e.length-1)]=e)}),s.slice(-1)}function weightRay(e){var t={};e.filter(/./.test,/[\\w\\W]{2}/).forEach(function(e){t[e]=1});var n=Object.keys(t),r=e.join(\" \");return n.map(function(e){return Math.max(0,r.split(e).length-2)}).map(function(e,t,r){var i=n[t];return(\"00000000\"+e*i.length).slice(-8)+\",\"+i}).sort().slice(-2).reverse().map(function(e){return e.slice(9)})}function getUnused(e){var t=\"\";return\" $0123456789;ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyzªµºÃÄÅÆÇÈÉÊËÒÓÔÕÖØÙÚÛÜàáâãäåæçèéêëðñòóôõöøùúûüýþßàáâãäåæçèéêëîïðõöøùúûüýþÿăĄąĆćĈĉĊċĔĕĖėĘęĚěĜĞğĠġĢģĤĥĦħĨĩĪīĬİıĲĳĴĵĶķĸĹĺĻļĽľĿŃńŅņŇňŉŊŋŒœŔŕŖŗŘřŚśšŢţŤťŦŧŨũŪūŬŮůŰűŲųŴŵŶŷŸŹźŻżŽžſƃƄƅƆƇƈƉƊƋƌƒƓƔƕƖƗƘƙƚƛƞƟƠơƢƣƤƥƦƧƨƩƪƫƯưƱƲƳƴƵƶƷƸƹƺƻƼƽƾǄǅǆǇǈǉǊǋǒǓǔǕǖǗǘǙǚǛǜǠǡǢǣǤǥǦǧǨǩǪǫǰǱǲǳǴǵǶǷǸǹǺǻǼǽǾǿȃȄȅȆȇȈȉȊȋȒȓȔȕȖȗȘșȚțȟȠȡȢȣȤȥȦȧȨȩȪȫȯȰȱȲȳȴȵȶȷȸȹȺȻȼȽȾȿɃɄɅɆɇɈɉɊɒɓɔɕɖɗɘəɚɛɟɠɡɢɣɤɥɦɧɨɩɮɯɰɱɲɳɴɵɶɷɹɺɻɼɽɾɿʅʆʇʈʉʊʋʒʓʔʕʖʗʘʙʚʟʠʡʢʣʤʥʦʧʨʩʪʫʮʯʰʱʲʳʴʵʶʷΈΉΊΑΒΓΔΕΖΗΘΙΚΟΠΡΣΤΥΦΧΨΩίΰαβγδεζηθικλμνξοτυφχψωϊϋϕϖϗϘϙϚϟϠϡϢϣϤϥϦϧϨϩϪϮϯϰϱϲϳϴϵϷϸϹϺϻϼϽϾϿЇЈЉЊЋВГДЕЖЗИЙКПРСТУФХЦЧШЩЪЯабвгдежз\".split(\"\").every(function(n,r){return-1!==e.indexOf(n)?!0:void (t=n)}),[t]}function escRx(e){return e.replace(/([.*+?^${}()|[\\]\\/\\\\])/g,\"\\\\$1\")}function safeString(e){return JSON.stringify(e).replace(/\\\\n/g,\"\\\\n\").replace(/\\\	/g,\"\t\")}var App=window.App||{},s=App.orig=strTextOrCode,App=window.App||this.$slimmest.App||{},ok=isCode=!1;this.$slimmest.App=App,App.input=s+\"\";try{Function(s),isCode=!0,\"<\"==s.trim().slice(0,1)&&(isCode=!1)}catch(y){isCode=!1;try{Function(\"0||\"+s),isCode=!0}catch(yy){}}App.isCode=isCode,isCode&&(s=uglify2(s));var s2=s+\"\",count=App.count=0,unused=getUnused(s2),reps=App.reps=[],RXs=[/\\b/g,/(\\w{4,7})/g,/(\\w{3})/g,/\\W+/g],lastResult=s2+\"\",lastSize=5+s2.length+reps.join(\"\t\").length,badCount=0,badCount2=0,orig=s+\"\",sizes=App.sizes=[],sizeLen=0,isStillValid=!0;App.log=[],isCode&&(RXs.push(/([\\w._$(){};\\\\]+)/g),RXs.push(/([\\w._();,\\s]+)/g),RXs.unshift(/(\\s?\\w+\\s?)/gm),RXs.unshift(/([\\w\\s().,;]+)/g),RXs.unshift(/(\\w+)/g),RXs.push(/\\[[^\\]]+\\]/g),RXs.push(/\\([^\\)]+\\)/g));var mod=RXs.length,census=App.census={};for(RXs.map(function(e){census[e]=0});count++<360;){App.count=count;var newUnused=getUnused(s2);if(!newUnused[0]){App.log.push(\"out of keys\");break}var lastResult=s2+\"\",repBloat=reps.join(\"\t\t\").length;if(s2.length<1.1*repBloat+reps.length){App.log.push(\"too many replacements...\");break}var lastSize=s2.length+repBloat,best={len:0,rx:null,r:[],str:s2+\"\"};RXs.map(function(e,t){var n=s2.split(e),r=weightRay(n)[0],i=s2+\"\";i.length;if(r){var s=RegExp(escRx(r),\"g\");i=i.replace(s,newUnused[0]);var o=i.length+2+r.length;(!best.len||best.len>o)&&(best.len=o,best.rx=e,best.str=i+\"\",best.r=n,best.key=r)}}),s2=best.str;var newSize=s2.length+reps.join(\"\t\t\").length;if(reps.length>30&&reps.slice(-10).join(\"\").length<33&&(App.log.push(\"accumlating low-power hits\"),newSize=lastSize+1),newSize>=lastSize){s2=lastResult,App.log.push(\"not smaller, aborting\");break}reps.push(newUnused[0]+best.key),census[best.rx]++,App.sizes.push([best.key,best.rx])}var verb=isCode?\"eval(\":\"\",outcode=\"���������­=\",outbody=safeString(s2),outreps=safeString(App.reps.reverse().join(\"`\")),output=verb+\"[ó=\"+outbody+\",\"+outreps+\".split('`').map(function(a){ó=ó.split(a[0]).join(a.slice(1))}),ó,delete ó][2]\"+(verb?\")\":\"\");App.outcode=outcode,App.outbody=outbody,App.outreps=outreps;var valid=!1;return isCode||App.isCSS||(App.preOut=output,valid=s==eval(output),valid||alert(\"ERROR: String mode mismatch (output  does not match origional) \")),isCode&&Function(output),App.output=output}}.call(GitPanel.prototype),{viewModel:GitPanel,template:templateMarkup}}),define(\"text!toolbar.html\",[],function(){return'<div class=\"ms-Table\"  data-bind=\"initTB: {}, template : {afterRender: postProcessingLogic }\" style=\"display:none;\">\\r\\n\t<div class=\"ms-Table-row\" style=\"min-height:100px !important\">\\r\\n\t</div>\\r\\n\t<div class=\"ms-Table-row\" style=\"background-color:#0078d7;\" >\\r\\n\t\t<span class=\"ms-Table-cell\" />\\r\\n\t\t</span>\\r\\n\t\t<span class=\"ms-Table-cell\" />\\r\\n\t\t\t<input class=\"ms-TextField-field validate\" type=\"text\" data-parsley-type=\"alphanum\" data-parsley-required=\"true\" data-bind=\"value: newcomponent\" />\\r\\n\t\t</span>\\r\\n\t\t<span class=\"ms-Table-cell\" />\\r\\n\t\t<select style=\"margin-left:10px; margin-right:10px;\" data-bind=\"options: fields,\\r\\n                       optionsText: \\'Title\\',\\r\\n                       value: selectedfield,\\r\\n                       optionsCaption: \\'Select column...\\'\"></select>\\r\\n\t\t<select style=\"margin-left:10px; margin-right:10px;\" data-bind=\"options: form()._customComponents,\\r\\n\t\t\t   optionsText: \\'Title\\',\\r\\n\t\t\t   value: selectedcomponent,\\r\\n\t\t\t   optionsCaption: \\'Select component...\\'\"></select>\\r\\n\t\t</span>\\r\\n\t\t<!--\\r\\n\t\t<p>Runtime: <input type=\"checkbox\" data-bind=\"checked: form()._formRuntime\" /></p>\\r\\n\t\t<div style=\"background-color:white\" data-bind=\"visible: selectedfield\"> \\r\\n\t\t\tintName:\\r\\n\t\t\t<span data-bind=\"text: selectedfield() ? selectedfield().InternalName : \\'unknown\\'\"></span>.\\r\\n\t\t</div>\\r\\n\t\t, value: buildMessages\\r\\n\t\t, value: buildOutput\\r\\n\t\t-->\\r\\n\t\t<textarea id=\"buildMessages\" data-bind=\"visible: buildOn\"></textarea>\\r\\n\t\t<textarea id=\"output\" data-bind=\"visible: buildOn\"></textarea>\\r\\n\\r\\n\t\t\\r\\n\t\t\\r\\n\t\t<span class=\"ms-Table-cell\" />\\r\\n\t</div>\\r\\n\t<div class=\"ms-Table-row\"></div>\\r\\n</div>\\r\\n'}),define(\"toolbar\",[\"text!./toolbar.html\"],function(e){function t(e){var t=this;t.designsaved=ko.observable(!1),t.form=ko.observable(),t.params=e,t.index=0,t.fields=ko.observableArray(),t.selectedfield=ko.observable(),t.selectedcomponent=ko.observable(),t.selectedDeviceDisplayName=\"Desktop\",t.rawfields={},t.selectedInternalName=\"\",t.selectedDisplayName=\"Select content type...\",t.selectedcontrol=ko.observable(!1),t.selectedcontrol1=void 0,t.insertioncontrol=ko.observable(!1),t.insertioncontrol1=void 0,t.buildMessages=ko.observable(\"msg\"),t.buildOutput=ko.observable(\"out\"),t.buildOn=ko.observable(!1),t._formGridEditor=ko.observable(!1),t._formEditingGrid=ko.observable(!1),t._formEditingText=ko.observable(!1),t._formEditingLibrary=ko.observable(!1),t._formHTMLOld=\"\",t._formHTMLNew=\"\",t.panelComps=ko.observableArray(),t.protoComps=ko.observableArray(),t.newcomponent=ko.observable(\"\").extend({required:{params:!0,message:\"New component name is required\"}}).extend({pattern:{params:\"^[a-zA-Z0-9_]*$\",message:\"Only letters and digits are allowed\"}}),t.prototypeComponent=ko.observable().extend({required:{message:\"Prototype component is required\"}}),t.errors=ko.validation.group([t.newcomponent,t.prototypeComponent]),t.validationNewCompForm=ko.validatedObservable({p1:t.newcomponent,p2:t.prototypeComponent}),t.enablePanelButtonAddComponentClick=ko.pureComputed(function(){return t.validationNewCompForm.isValid()?\"\":\"is-disabled\"}),t.codePanels={},t.codePanel=null,t.resetEmpty=ko.observable(!0),t.resetAllColumns=ko.observable(!1),t.resetLastCommit=ko.observable(!1),t.hasGitHubConnection=ko.observable(!1),t.enableLastCommit=ko.pureComputed(function(){return 1==this.hasGitHunConnection()?\"\":\"is-disabled\"},t),t.$getListId=function(e){var t=$.Deferred(),n=SP.ClientContext.get_current(),r=n.get_web().get_lists().getByTitle(e);return n.load(r,\"Id\"),n.executeQueryAsync(function(){t.resolve(r.get_id())},function(){t.resolve(null)}),t.promise()},t.$createList=function(e,n){var r=$.Deferred();return t.$getListId(e).done(function(i){if(null==i){var s=SP.ClientContext.get_current(),u=s.get_web(),a=new SP.ListCreationInformation;a.set_title(e),a.set_templateType(n);var f=u.get_lists().add(a);s.load(f),s.executeQueryAsync(Function.createDelegate(this,function(){t.$createSubscription=!0,r.resolve(f.get_id())}),Function.createDelegate(this,function(){r.reject(null)}))}else r.resolve(i)}),r.promise()},t.deployWorkflow=function(e){t.$createSubscription=!1,t.$createList(t.form()._formListName+e.historyListTitle,SP.ListTemplateType.workflowHistory).done(function(n){console.log(\"history id=\"+n.toString()),e.historyId=n,t.$createList(t.form()._formListName+e.tasksListTitle,171).done(function(n){console.log(\"tasks id=\"+n.toString()),e.tasksId=n,t.$createSubscription&&t.$deployWorkflow2(e).done(function(){})})})},t.$deployWorkflow2=function(e){console.log(\"creating subscription...\");var n=$.Deferred(),r=e.historyId,i=e.tasksId;return jQuery.getScript(\"/_layouts/15/sp.workflowservices.js\",function(){var s=SP.ClientContext.get_current(),u=SP.WorkflowServices.WorkflowServicesManager.newObject(s,s.get_web());console.log(\"preparing workflow definition...\");var a=SP.WorkflowServices.WorkflowDefinition.newObject(s,s.get_web());a.set_xaml(e.xaml),a.set_displayName(e.title),a.set_restrictToType(\"List\");var f=u.getWorkflowDeploymentService();f.saveDefinition(a),s.load(a,\"Id\");var l=s.get_web().get_lists().getByTitle(t.form()._formListTitle);s.load(l,\"Id\"),s.executeQueryAsync(function(){console.log(\"target list id=\"+l.get_id().toString()),console.log(\"definition id=\"+a.get_id().toString()),f.publishDefinition(a.get_id()),s.executeQueryAsync(function(){var t=new SP.WorkflowServices.WorkflowSubscription(s);t.set_name(e.title),t.set_enabled(!0),t.set_definitionId(a.get_id()),t.set_eventSourceId(l.get_id()),t.set_eventTypes([\"ItemAdded\"]),t.setProperty(\"TaskListId\",i),t.setProperty(\"HistoryListId\",r),t.setProperty(\"FormData\",\"\");var f=u.getWorkflowSubscriptionService();f.publishSubscriptionForList(t,l.get_id()),s.executeQueryAsync(function(){console.log(\"workflow provisioned\"),n.resolve()},function(e,t){console.log(\"error: \"+e+\" \"+t.get_message()),n.resolve()})})})}),n.promise()},t.panelNewForm=ko.observable(!1),t.panelListForm=ko.observable(!0),t.panelButtonNewClick=function(){t.panelListForm(!1),t.panelNewForm(!0)},t.panelButtonAddComponentClick=function(){return t.cloneAndSaveNewComponent(t.prototypeComponent().Title),t.panelListForm(!0),t.panelNewForm(!1),!1},t.cloneAndSaveNewComponent=function(e){var n=\"empty\";void 0!==e&&(n=e);var r=n.split(\"-\").join(\"\"),i=\"text!./\"+n+\".html\",s=\"text!./\"+n+\".js\";requirejs([i,s],function(e,i){var s=t.newcomponent().toLowerCase(),u=i.split(n).join(s),a=e.split(n).join(s),f=n.lastIndexOf(\"-\");f>0&&(a=a.split(r).join(s),u=u.split(r).join(s));var l={Title:s,Require:{name:s,proto:!1,path:\"\"+s},Markup:{tag:\"component-\"+s}},c=JSON.parse(JSON.stringify(t.form().$registeredSchemas[n]));c.Title=s,c.Require={name:s,proto:!1,path:s},c.Markup={tag:\"component-\"+s},t.form().$registeredSchemas[l.Title]=c,t.form()._registeredComponents().push(c),t.form()._designComponents.push(c),(void 0===c.Connections||void 0===c.Connections.ListItem)&&t.form()._panelComponents().push(c),l.selected=ko.observable(!1),l.enableDelete=ko.observable(!0);var h={};h.paths={},h.paths[l.Title]=l.Require.path,requirejs.config(h),t.form()._customComponents.push(l),t.form()._formRuntime(!1);var p=t.form()._formSaveFormState();p.viewModel=u,p.template=a,ko.components.register(\"component-\"+s,{require:s}),t.panelComps.unshift(l),t.form()._closeOnDesignSave=!1,t.form()._formDesignSave(p,\"Design/\"+s).done(function(){RefreshCommandUI()})})},t.cloneAndSaveViewModelComponent=function(){var e=$.Deferred(),n=\"viewmodel\",r=n.split(\"-\").join(\"\"),i=\"text!./\"+n+\".html\",s=\"text!./\"+n+\".js\";return requirejs([i,s],function(i,s){var u=t.form()._formListName.toLowerCase(),a=s.split(n+\".html\").join(u+\".html\"),f=i,l=n.lastIndexOf(\"-\");l>0&&(f=f.split(r).join(u),a=a.split(r).join(u)),t.form()._formRuntime(!1);var c=t.form()._formSaveFormState();c.viewModel=a,c.template=f,t.form()._closeOnDesignSave=!1,t.form()._formDesignSave(c,\"Design/\"+u).done(function(){RefreshCommandUI(),e.resolve()})}),e.promise()},t.panelButtonDeleteComponentClick=function(e){console.log(\"delete component index=\"+e());var n=t.panelComps()[e()];for(t.panelComps.remove(n),i=0;i<t.form()._panelComponents().length;i++){var r=t.form()._panelComponents()[i];if(r.Title==n.Title){t.form()._panelComponents.remove(r);break}}for(i=0;i<t.form()._registeredComponents().length;i++){var r=t.form()._registeredComponents()[i];if(r.Title==n.Title){t.form()._registeredComponents.remove(r);break}}for(i=0;i<t.form()._customComponents().length;i++){var r=t.form()._customComponents()[i];if(r.Title==n.Title){t.form()._customComponents.remove(r);break}}for(i=0;i<t.form()._designComponents().length;i++){var r=t.form()._designComponents()[i];if(r.Title==n.Title){t.form()._designComponents.remove(r);break}}ko.components.unregister(n.Title),t.form()._formRuntime(!1),t.form()._closeOnDesignSave=!1,t.form()._formDesignSave(t.form()._formSaveFormState(),\"\").done(function(){})},t.openDialog=function(e){requirejs([e],function(e){$(\"#ppanel\").first().html(e.template);var n=new e.viewModel(t),r=document.getElementById(\"dialog-container\");ko.applyBindings(n,r),n.Init(t),n.openDialog()})},t.panelButtonCancelComponentClick=function(){return t.panelListForm(!0),t.panelNewForm(!1),!1},t.panelClosePickupPanel=function(){$(t.PickerCell).removeClass(\"ui-state-hover\"),t.PickerPanel.dismiss()},t.panelOpenPickupPanel=function(e){for(t.panelComps.removeAll(),i=0;i<t.form()._designComponents().length;i++){var n=t.form()._designComponents()[i];if(void 0===n.Require.sys){var r=JSON.parse(JSON.stringify(n));r.enableDelete=ko.observable(!0),r.selected=ko.observable(!1),t.panelComps.push(r)}else if(!n.Connections||!n.Connections.ListItem){var r=JSON.parse(JSON.stringify(n));r.enableDelete=ko.observable(!1),r.selected=ko.observable(!1),t.panelComps.push(r)}}requirejs([\"toolbar-pickuppanel\"],function(n){if(\"object\"==typeof fabric){$(\"#ppanel\").first().html(n.template),t.InitFields(),t.columnsGridViewModel=new ko.columnsGrid.viewModel({data:t.fields,pageSize:8}),t.componentsGridViewModel=new ko.componentsGrid.viewModel({data:t.panelComps,toolbar:t,pageSize:8});var r=document.getElementById(\"panel-container\");ko.applyBindings(t,r);var i=document.querySelector(\".ms-PanelDefaultExample .ms-Panel\");t.PickerPanel=new fabric.Panel(i),t.PickerCell=e,t.PickerPanel.dismiss=function(){$(t.PickerCell).removeClass(\"ui-state-hover\"),fabric.Panel.prototype.dismiss.call(t.PickerPanel)};for(var s=document.querySelectorAll(\".ms-Pivot\"),o=0;o<s.length;o++)new fabric.Pivot(s[o])}})},t.InitFields=function(e){for(t.protoComps.removeAll(),i=0;i<t.form()._registeredComponents().length;i++){var n=t.form()._registeredComponents()[i];if(void 0!==n.Require.proto&&1==n.Require.proto){var r=JSON.parse(JSON.stringify(n));t.protoComps.push(r)}}t.form()._formGetFields().done(function(n){var r=t.form()._designComponents();n.forEach(function(e,t){e.selectedcomp=ko.observable(),e.comps=ko.observableArray(),e.selected=ko.observable(!1),e.click=function(){this.selected(!this.selected()),console.log(\"field selected = \"+this.selected())},r.forEach(function(t,n){if(void 0!=t.Connections&&void 0!=t.Connections.ListItem)for(var r=0,i=t.Connections.ListItem.length;i>r;r++)if(e.TypeAsString==t.Connections.ListItem[r]){var s={Title:t.Title};e.comps.push(s),0==r&&e.selectedcomp(s)}})}),t.fields(n),e&&e()})},t.enableFormsCommandSave=function(){var e=t.getViewModelCodePanel();return e?e.enableFormModelCommandSave():!1},t.getTemplateHTML=function(){var e=$(\".ms-Grid\").first().gridEditor(\"getHtml\"),n=$(\"component-form\").clone();n.html(\"<div class='ms-Grid'>\"+e+\"</div>\");for(var r=$(n).find(\"*\").filter(function(){return/^component\\-/i.test(this.nodeName)}),i=0;i<r.length;i++)$(r[i]).empty();var s=n.html(),o=t.html_beautify(s,{preserve_newlines:!1});return o},t.actionFormsCommandSave=function(){t.designsaved(!0);var e=t.getViewModelCodePanel();e&&(t.form()._doNotReloadDesign=!0,e.actionFormModelCommandSave())},t.enableFormsCommandPublish=function(){var e=function(){return navigator.appVersion.indexOf(\"MSIE\")>0},n=t.designsaved()?!1:!0,r=e()?!1:!0;return n&&r},t.$saveModel=function(e){t.form()._formRuntime(!0);var n=t.form()._formSaveFormState();n.fileContent=e,t.form()._closeOnDesignSave=!1,t.form()._formDesignPublish(n,\"Runtime/model.min.js\").done(function(){var e={deleteTempFiles:\"Design/\"+t.form()._formListName};t.form()._closeOnDesignSave=!1,t.form()._formDesignSave(e,\"Design/\")})},t.actionFormsCommandPublish=function(){t.panelOpenGITPanel({publish:!0,reset:!1})},t.actionFormsCommandUpgrade=function(){t.panelOpenGITPanel({publish:!1,reset:!0,git:!1,upgrade:!0})},t.actionFormsCommandGit=function(e){t.panelOpenGITPanel({publish:!1,reset:!1,git:!0,component:e})},t.actionFormsCommandSourceControl=function(e){t.panelOpenGITPanel({publish:!0,reset:!1,git:!1})},t.panelOpenGITPanel=function(e){requirejs([\"toolbar-gitgrid\"],function(n){if(\"object\"==typeof fabric){$(\"#epanel\").first().html(n.template);var r=document.getElementById(\"gitpanel-container\"),i=e?e:{reset:!0};i.runtime=t.$form;var s=new n.viewModel(i);s.Init(t).done(function(){ko.applyBindings(s,r);var e=document.querySelector(\".ms-PanelDefaultGit .ms-Panel\");t.GitPanel=new fabric.Panel(e);for(var n=e.querySelectorAll(\".ms-ChoiceFieldGroup\"),i=0;i<n.length;i++)new fabric.ChoiceFieldGroup(n[i]);for(var u=e.querySelectorAll(\".ms-CheckBox\"),i=0;i<u.length;i++)new fabric.CheckBox(u[i]);for(var a=e.querySelectorAll(\".ms-Spinner\"),i=0;i<a.length;i++)new fabric.Spinner(a[i])})}})},t.panelCloseGitPanel=function(){t.GitPanel.dismiss()},t.enableFormsCommandCancel=function(){return!0},t.actionFormsCommandCancel=function(){t.form()._formRedirectToList()},t.enableFormsCommandUndo=function(){var e=t.getViewModelCodePanel();return e?e.enableTemplateCommandUndo():!1},t.actionFormsCommandUndo=function(){var e=t.getViewModelCodePanel();e&&(e.actionTemplateCommandUndo(),e.save())},t.enableFormsCommandRedo=function(){var e=t.getViewModelCodePanel();return e?e.enableTemplateCommandRedo():!1},t.actionFormsCommandRedo=function(){var e=t.getViewModelCodePanel();e&&(e.actionTemplateCommandRedo(),e.save())},t.activeTabCommandId=\"\",t.actionCheckTemplateTab=function(e,n){if(e!=n){var r=t.codePanels[e],i=t.codePanels[n];if(void 0!=i){var s=$(\"#s4-workspace\");return s.css(\"overflow\",\"hidden\"),document.getElementById(\"formpanel\").style.display=\"none\",void 0!=r&&r.hide(),t.codePanel=i,document.getElementById(\"codepanel\").style.display=\"block\",\"FormModelEdit.Command.Tab.VIEWMODEL\"==n?t.codePanel.show(t.getTemplateHTML()):t.codePanel.show(),void t.onResize()}if(document.getElementById(\"codepanel\").style.display=\"none\",void 0!=r){var s=$(\"#s4-workspace\");s.css(\"overflow\",\"visible\"),t.codePanel.isReadOnly()?document.getElementById(\"formpanel\").style.display=\"block\":t.codePanel.save(),t.codePanel.hide(),document.getElementById(\"codepanel\").style.display=\"none\",RefreshCommandUI()}}},t.onResize=function(){t.codePanel&&window.setTimeout(function(){t.codePanel.resize()},100)},t.panelButtonEditComponentClick=function(e){console.log(\"edit component index=\"+e());var n=t.panelComps()[e()];t.openCodePanel(n.Title,n.Require.path),t.PickerPanel.dismiss()},t.getViewModelCodePanel=function(){var e=\"FormModelEdit.Command.Tab.VIEWMODEL\",n=t.codePanels[e];return n},t.getCodePanel=function(e){if(e){var n=\"FormModelEdit.Command.Tab.\"+e,r=t.codePanels[n];return r}return t.getViewModelCodePanel()},t.$updateViewModelCodePanel=function(e){window.setTimeout(function(){var e=t.getTemplateHTML(),n=t.getViewModelCodePanel();n.templateEditor.setValue(e,-1),n.editor=n.templateEditor,window.setTimeout(function(){RefreshCommandUI()},300)},100)},t.openViewModelCodePanel=function(){t.openCodePanel(\"VIEWMODEL\",\"viewmodel\",t.getTemplateHTML())},t.openCodePanel=function(e,n,r,i){var s=\"FormModelEdit.Command.Tab.\"+e,o=t.codePanels[s];void 0===o?t.$createCodePanel(e,n,r,i):(t.codePanel=o,i||o.select())},t.$createCodePanel=function(e,n,r,i){window.acecodepanel?t.$createCodePanel2(e,n,r,i):(require.config({paths:{ace:\"../Runtime\"}}),define(\"codepanel\",[\"ace/codepanel\"],function(s){window.acecodepanel=s,t.$createCodePanel2(e,n,r,i)}),require([\"codepanel\"]))},t.$createCodePanel2=function(e,n,r,i){var s=require(\"ace/codepanel\").CodePanel,o=document.getElementById(\"codepanel\");new s(t.form(),o,e,r,n,function(e){null!==e.$panelcontainer?(t.codePanel=e,t.codePanels[e.getPanelCommand()]=e,i||e.select()):delete t.codePanels[e.getPanelCommand()]})},t.actionFormsCommandRestore=function(e){t.panelOpenGITPanel()},t.actionFormsCommandGrid=function(e){return t.form()._formDesignMode(e),t._formGridEditor()?$(\".ms-Grid\").first().gridEditor(\"editGrid\",e):t._activateGrid(e,t._formEditingText()),t.resetCallback&&setTimeout(function(){t.resetCallback()},100),RefreshCommandUI(),!0},t.queryFormsCommandGrid=function(e){return t.form()._formDesignMode()?0==t._formEditingGrid()&&(t._activateGrid(!0,t._formEditingText()),t._formEditingGrid(!0)):0==t._formEditingGrid()&&(t._activateGrid(!1,t._formEditingText()),t._formEditingGrid(!0)),t.form()._formDesignMode()},t._activateGrid=function(e,n){requirejs([\"beautifyhtml\",\"json5\",\"css!grideditorcss\",\"jqueryui\",\"css!jsoneditorcss\",\"grideditor\"],function(r){t.html_beautify=r.html_beautify;var i=t.form().sourceControl.selectedDeviceNumber?parseInt(t.form().sourceControl.selectedDeviceNumber):0;0==t._formGridEditor()?($(\".ms-Grid\").first().gridEditor({content_types:[\"summernote\"],showGrid:e,editText:n,layout_devNumber:i,form:t.form()}),RefreshCommandUI(),t.openCodePanel(\"VIEWMODEL\",\"viewmodel\",t.getTemplateHTML(),\"not selected\")):$(\".ms-Grid\").first().gridEditor(\"editGrid\",e),t._formGridEditor(!0)})},t.actionFormsCommandSelectDevice=function(e,n){$(\".ms-Grid\").first().gridEditor(\"Device\",n),t.selectedDeviceDisplayName=e,t.form().sourceControl.selectedDeviceNumber=n,t.form().sourceControl.selectedDeviceDisplayName=e,t.saveFormState()},t.actionFormsCommandQueryDevices=function(){return t.selectedDeviceDisplayName},t.actionFormsCommandPopulateDevices=function(){var e=[{Title:\"Desktop\",Device:0},{Title:\"Tablet\",Device:1},{Title:\"Phone\",Device:2}];return t.getDevicesDropdownItemsXml(e)},t.getDevicesDropdownItemsXml=function(e){var t=new Sys.StringBuilder;return t.append(\"<Menu Id='Forms.Tab.GridGroup.DevicesDropdown.Menu'>\"),t.append(\"<MenuSection DisplayMode='Menu' Id='Forms.Tab.GridGroup.DevicesDropdown.Menu.Manage'>\"),t.append(\"<Controls Id='Forms.Tab.GridGroup.DevicesDropdown.Menu.Manage.Controls'>\"),e.forEach(function(e){t.append(\"<Button\"),t.append(\" Id='Forms.Tab.GridGroup.DevicesDropdown.Menu.Manage.\"),t.append(e.Device),t.append(\"'\"),t.append(\" Command='\"),t.append(\"Forms.Command.SelectDevice\"),t.append(\"'\"),t.append(\" LabelText='\"),t.append(e.Title),t.append(\"'\"),t.append(\" CommandValueId='\"),t.append(e.Device),t.append(\"'\"),t.append(\"/>\")}),t.append(\"</Controls>\"),t.append(\"</MenuSection>\"),t.append(\"</Menu>\"),t.toString()},t.actionFormsCommandEditor=function(e){if(0==t._formGridEditor())t._activateGrid(t._formEditingGrid(),e);else{var n=t.form();$(\".ms-Grid\").first().gridEditor(\"editText\",e,n)}return t._formEditingText(e),RefreshCommandUI(),!0},t.actionFormsCommandDesktop=function(){$(\".ms-Grid\").first().gridEditor(\"Device\",0),RefreshCommandUI()},t.actionFormsCommandTablet=function(){$(\".ms-Grid\").first().gridEditor(\"Device\",1),RefreshCommandUI()},t.actionFormsCommandPhone=function(){$(\".ms-Grid\").first().gridEditor(\"Device\",2),RefreshCommandUI()},t.enableFormsCommandCreate=function(){return!0},t.actionFormsCommandCreate=function(){},t.saveFormState=function(){var e=t.form()._formSaveFormState();e.noreply=!0,t.form()._formDesignSave(e,\"\")},t.enableCancel=function(){var e=t.selectedcontrol();return\"true\"==e.toString().toLowerCase()?!0:!1},t._formButtonGetColumnsClick=function(){if(t.form()._formIsSearchContext)t.fields([]);else{var e=t.form()._formListName;$.ajax({url:_spPageContextInfo.webAbsoluteUrl+\"/_api/web/lists/getbytitle('\"+e+\"')/fields?$filter=Hidden eq false and ReadOnlyField eq false\",type:\"GET\",headers:{accept:\"application/json;odata=verbose\"},success:function(e){t.fields(e.d.results),t.rawfields=e.d.results},error:function(t){top.postMessage(JSON.stringify([\"formError\",JSON.stringify(t),e,0]),\"*\")}})}},t.postProcessingLogic=function(e){},t.resetFormToEmpty=function(){requirejs([\"text!./../Runtime/src/viewmodel.js\",\"text!./../Runtime/src/viewmodel.html\"],function(e,n){t.codePanel.modelEditor.setValue(e.toString(),-1),t.codePanel.show(n),t.panelCloseGitPanel(),t.codePanel.save(),RefreshCommandUI()})},t.resetFormToColumns=function(){requirejs([\"text!./../Runtime/src/viewmodel.js\",\"text!./../Runtime/src/viewmodelallcolumns.html\"],function(e,n){t.codePanel.modelEditor.setValue(e.toString(),-1),t.codePanel.show(n),t.panelCloseGitPanel(),t.codePanel.save(),t.resetCallback=function(){$(document).find(\".ms-Grid-col\").each(function(){t.PickerCell=$(this)});var e=t.form()._designComponents();t.InitFields(function(){t.fields().forEach(function(n,r){var i=n.selectedcomp()?n.selectedcomp().Title:\"\";e.forEach(function(e,r){e.Title==i&&t.placeComponent(t.PickerCell,n,e)})})}),t.resetCallback=null},RefreshCommandUI()})},t.placeComponents=function(){var e=t.form()._designComponents();t.fields().forEach(function(n,r){if(n.selected()){n.selected(!1);var i=void 0==t.fields()[r].selectedcomp()?void 0:t.fields()[r].selectedcomp().Title;e.forEach(function(e,n){e.Title==i&&t.placeComponent(t.PickerCell,t.fields()[r],e)})}}),t.panelComps().forEach(function(e,n){e.selected()&&(e.selected(!1),t.placeComponent(t.PickerCell,null,e))}),window.setTimeout(t.placeComponents2,100)},t.placeComponents2=function(){$(\".ms-Grid\").first().gridEditor(\"createCompControls\"),void 0!=t.PickerPanel&&($(t.PickerCell).removeClass(\"ui-state-hover\"),t.PickerPanel.dismiss()),t.$updateViewModelCodePanel(\"placeComponents2! \")},t.placeComponent=function(e,t,n){var r=n.Params;if(t)for(var i in r)t.hasOwnProperty(i)&&(r[i]=t[i]&&t[i].results?t[i].results:t[i]);$(\".ms-Grid\").first().gridEditor(\"placeComponent\",e,n)},t.Init=function(e){t.form(e),t.$form=e,t.$runtime=e,t.$viewmodel=e.$viewmodel,t.$formReadOnly=ko.computed(function(){return this._formReadOnly()},t.$runtime),t.$formDesignMode=ko.computed(function(){return this._formDesignMode()},t.$runtime),t.$readonly=ko.computed(function(){return this._formReadOnly()},t.$runtime),t.$designmode=ko.computed(function(){return this._formDesignMode()},t.$runtime),window.f_toolbar=t,t.$form.$ribbon&&(t.$form.$ribbon.Toolbar=t,window.setTimeout(function(){RefreshCommandUI()},100)),window.onresizedesign=t.onResize,$(window).resize(function(){window.onresizedesign()}),$(document).on(\"ribbontabselected\",function(e,n){t.actionCheckTemplateTab(t.activeTabCommandId,n),t.activeTabCommandId=n})}}return ko.bindingHandlers.initTB={init:function(e,t,n,r,i){r.form(i.$root),r.Init(r.params),r.form().Toolbar=r,window.f_toolbar=r,r.$form.$ribbon&&(r.$form.$ribbon.Toolbar=r,window.setTimeout(function(){RefreshCommandUI()},100)),r.windowOnResize=window.onresize,window.onresize=r.onResize,$(document).on(\"ribbontabselected\",function(e,t){r.actionCheckTemplateTab(r.activeTabCommandId,t),r.activeTabCommandId=t})}},{viewModel:t,template:e}})","".split('`').map(function(a){ó=ó.split(a[0]).join(a.slice(1))}),ó,delete ó][2])