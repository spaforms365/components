/*1.0.6.0.b*/ /*
 A JavaScript implementation of the SHA-1 family of hashes, as
 defined in FIPS PUB 180-4 and FIPS PUB 202, as well as the corresponding
 HMAC implementation as defined in FIPS PUB 198a

 Copyright Brian Turek 2008-2016
 Distributed under the BSD License
 See https://caligatio.github.io/jsSHA/
 See http://caligatio.github.com/jsSHA/ for more information

 Several functions taken from Paul Johnston
*/

/**
 * Copyright spaforms365.com
 */

/**
 * @license text 2.0.14 Copyright jQuery Foundation and other contributors.
 * Released under MIT license, http://github.com/requirejs/text/LICENSE
 */

Type.registerNamespace("FormEdit.Ribbon.PageComponent"),define("ribbonedit",[],function(){return FormEdit.Ribbon={},FormEdit.Ribbon.ribbonTab=function(e,t){var o="";o+="<div><div><a href='#' onclick=\"alert('"+t+"')\" ><img src='/_layouts/images/NoteBoard_32x32.png' /></a><br/>Ribbon Example</div></div>";var r=SP.Ribbon.PageManager.get_instance(),n=r.get_ribbon();n&&this.createTab(n)},FormEdit.Ribbon.createTab=function(e){var t=_spPageContextInfo.webAbsoluteUrl.substring(0,_spPageContextInfo.webAbsoluteUrl.indexOf(_spPageContextInfo.webServerRelativeUrl)),o=t+JSRequest.PathName,r=(o.substring(o.indexOf("/Lists/")+7,o.lastIndexOf("/")),o.substring(0,o.lastIndexOf("/"))+"/Form/Runtime/formatmap32x32.png?rev23"),n=new CUI.Tab(e,"FormEdit.Tab","FORM","Tab description","FormEdit.Command.Tab",!1,"",null,null);e.addChild(n);var i=new CUI.Group(e,"FormEdit.Tab.ManageGroup","Manage","Group Description","FormEdit.Command.ManageGroup",null);n.addChild(i);var s=new CUI.Layout(e,"FormEdit.Tab.ManageGroup.Layout","The LayoutB");i.addChild(s);var a=new CUI.Section(e,"FormEdit.Tab.ManageGroup.Section",2,"Top");s.addChild(a);var m=new CUI.ControlProperties;m.Command="FormEdit.Command.Edit",m.QueryCommand="FormEdit.Command.QueryEdit",m.Id="FormEdit.Edit.ControlProperties",m.TemplateAlias="o1",m.ToolTipDescription="Use this button",m.Image32by32=r,m.Image32by32Left="-509",m.Image32by32Top="-100",m.ToolTipTitle="A Button",m.LabelText="Edit";var l=new CUI.Controls.ToggleButton(e,"FormEdit.Tab.ManageGroup.Edit",m),d=l.createComponentForDisplayMode("Large"),u=a.getRow(1);u.addChild(d),i.selectLayout("The LayoutB");var c=new CUI.Group(e,"FormEdit.Tab.CommitGroup","Commit","Group Description","FormEdit.Command.CommitGroup",null);n.addChild(c);var p=new CUI.Layout(e,"FormEdit.Tab.CommitGroup.Layout","The LayoutA");c.addChild(p);var f=new CUI.Section(e,"FormEdit.Tab.CommitGroup.Section",2,"Top");p.addChild(f);var g=new CUI.ControlProperties;g.Command="FormEdit.Command.Save",g.Id="FormEdit.Save.ControlProperties",g.TemplateAlias="o1",g.ToolTipDescription="Save form data & exit to default list view",g.Image32by32=r,g.Image32by32Left="-305",g.Image32by32Top="-475",g.ToolTipTitle="Save data & Exit",g.LabelText="Save";var h=new CUI.ControlProperties;h.Command="FormEdit.Command.Close",h.Id="FormEdit.Close.ControlProperties",h.TemplateAlias="o1",h.ToolTipDescription="Do not save form data & exit to default list view",h.Image32by32=r,h.Image32by32Left="-273",h.Image32by32Top="-510",h.ToolTipTitle="Dismiss data changes & Exit",h.LabelText="Close";var b=new CUI.Controls.Button(e,"FormEdit.Tab.CommitGroup.Save",g),y=new CUI.Controls.Button(e,"FormEdit.Tab.CommitGroup.Close",h),S=b.createComponentForDisplayMode("Large"),v=y.createComponentForDisplayMode("Large"),_=f.getRow(1);_.addChild(S),_.addChild(v),c.selectLayout("The LayoutA");var R=new CUI.Group(e,"FormEdit.Tab.CodeGroup","Actions","Group Description","FormEdit.Command.CodeGroup",null);n.addChild(R);var F=new CUI.Layout(e,"FormEdit.Tab.CodeGroup.Layout","The LayoutD");R.addChild(F);var C=new CUI.Section(e,"FormEdit.Tab.CodeGroup.Section",2,"Top");F.addChild(C);var P=C.getRow(1),A=new CUI.ControlProperties;A.Command="FormEdit.Command.Delete",A.Id="FormEdit.Delete.ControlProperties",A.TemplateAlias="o1",A.ToolTipDescription="Delete form list item & exit to default list view",A.Image32by32=r,A.Image32by32Left="-509",A.Image32by32Top="-68",A.ToolTipTitle="Delete item & Exit",A.LabelText="Delete";var O=function(){var t=new CUI.ControlProperties;t.Command="FormEdit.Command.Submit",t.Id="FormEdit.Submit.ControlProperties",t.TemplateAlias="o1",t.ToolTipDescription="Save form data, mark form as readonly and Submit for processing. Exit to default list view",t.Image32by32=r,t.Image32by32Left="-272",t.Image32by32Top="-68",t.ToolTipTitle="Save & Submit for processing",t.LabelText="Submit";var o=new CUI.Controls.Button(e,"FormEdit.Tab.CodeGroup.Submit",t),n=o.createComponentForDisplayMode("Large");P.addChild(n)},M=function(){var t=new CUI.ControlProperties;t.Command="FormEdit.Command.Cancel",t.Id="FormEdit.Cancel.ControlProperties",t.TemplateAlias="o1",t.ToolTipDescription="Use this button",t.Image32by32=r,t.Image32by32Left="-272",t.Image32by32Top="-102",t.ToolTipTitle="Cancel form processing and keep form as readonly. Exit to default list view",t.LabelText="Cancel";var o=new CUI.Controls.Button(e,"FormEdit.Tab.GridGroup.Cancel",t),n=o.createComponentForDisplayMode("Large");P.addChild(n)},x=new CUI.Controls.Button(e,"FormEdit.Tab.CommitGroup.Delete",A),w=x.createComponentForDisplayMode("Large");P.addChild(w),top.SPAFORM.form.submitControl=O,top.SPAFORM.form.cancelControl=M,R.selectLayout("The LayoutD");var E=function(){var t=new CUI.Group(e,"FormEdit.Tab.DesignGroup","Design","Group Description","FormEdit.Command.DesignGroup",null);n.addChild(t);var o=new CUI.Layout(e,"FormEdit.Tab.DesignGroup.Layout","The LayoutC");t.addChild(o);var i=new CUI.Section(e,"FormEdit.Tab.DesignGroup.Section",2,"Top");o.addChild(i);var s=new CUI.ControlProperties;s.Command="FormEdit.Command.Design",s.Id="FormEdit.Design.ControlProperties",s.TemplateAlias="o1",s.ToolTipDescription="Open SPA Form Designer 365",s.Image32by32=r,s.Image32by32Left="-477",s.Image32by32Top="-2",s.ToolTipTitle="Open SPA Form Designer 365",s.LabelText="Designer";var a=new CUI.Controls.ToggleButton(e,"FormEdit.Tab.GridGroup.Grid",s),m=a.createComponentForDisplayMode("Large"),l=i.getRow(1);l.addChild(m),t.selectLayout("The LayoutC"),RefreshCommandUI()};top.productdesigncontrol=E,top.SPAFORM.list.canDesign&&setTimeout(function(){E()},200);try{e.removeChild("Ribbon.ListForm.Display")}catch(T){}try{e.removeChild("Ribbon.ListForm.Edit")}catch(T){}try{e.removeChild("Ribbon.WebPartPage")}catch(T){}SelectRibbonTab("FormEdit.Tab",!0),document.getElementsByClassName("ms-cui-tabContainer")[0].style.display="block"},FormEdit.Ribbon.loadRibbon=function(e,t){var o=this;SP.SOD.executeOrDelayUntilScriptLoaded(function(){try{var r=SP.Ribbon.PageManager.get_instance();r.add_ribbonInited(function(){o.ribbonTab(e,t)});var n=null;try{n=r.get_ribbon()}catch(i){}n?o.ribbonTab(e,t):"function"==typeof _ribbonStartInit&&_ribbonStartInit(_ribbon.initialTabId,!1,null)}catch(i){}},"sp.ribbon.js")},FormEdit.Ribbon.PageComponent=function(){FormEdit.Ribbon.PageComponent.initializeBase(this)},FormEdit.Ribbon.PageComponent.initialize=function(){ExecuteOrDelayUntilScriptLoaded(Function.createDelegate(null,FormEdit.Ribbon.PageComponent.initializePageComponent),"SP.Ribbon.js")},FormEdit.Ribbon.PageComponent.initializePageComponent=function(){var e=SP.Ribbon.PageManager.get_instance();null!==e&&e.addPageComponent(FormEdit.Ribbon.PageComponent.instance)},FormEdit.Ribbon.PageComponent.prototype={init:function(){},receiveFocus:function(){return!0},yieldFocus:function(){return!0},isFocusable:function(){return!0},getFocusedCommands:function(){return["FormEdit.Command.FieldControl.GroupCommand","FormEdit.Command.FieldControl.TabCommand","FormEdit.Command.FieldControl.ContextualGroupCommand","FormEdit.Command.FieldControl.RibbonCommand"]},getGlobalCommands:function(){return["FormEdit.Command.Tab","FormEdit.Command.ManageGroup","FormEdit.Command.Edit","FormEdit.Command.QueryEdit","FormEdit.Command.CommitGroup","FormEdit.Command.Save","FormEdit.Command.Delete","FormEdit.Command.Cancel","FormEdit.Command.Close","FormEdit.Command.CodeGroup","FormEdit.Command.Submit","FormEdit.Command.DesignGroup","FormEdit.Command.Design"]},canHandleCommand:function(e){var t=this.Toolbar,o=top.SPAFORM.form;switch(e){case"FormEdit.Command.Tab":return!0;case"FormEdit.Command.DesignGroup":var r=document.getElementById("FormEdit.Tab.DesignGroup");return r.style.cssFloat="right",!0;case"FormEdit.Command.Design":return top.SPAFORM.list.canDesign?!0:!1;case"FormEdit.Command.ManageGroup":return!0;case"FormEdit.Command.Edit":return t?!0:!1;case"FormEdit.Command.QueryEdit":return!0;case"FormEdit.Command.CommitGroup":return!0;case"FormEdit.Command.Save":return o.isValid&&(o.updateReady||o.saveReady)?!0:!1;case"FormEdit.Command.Delete":return o.deleteReady?!0:!1;case"FormEdit.Command.Cancel":return o.cancelReady?!0:!1;case"FormEdit.Command.Close":return!0;case"FormEdit.Command.CodeGroup":return!0;case"FormEdit.Command.Submit":return o.isValid&&o.submitReady?!0:!1;default:return!1}return!1},handleCommand:function(e,t,o){var r=this.Toolbar;if(void 0===r)return"FormEdit.Command.Close"==e&&(window.location=_spPageContextInfo.webAbsoluteUrl+"/Lists/"+top.SPAFORM.list.name),void("FormEdit.Command.Design"==e&&(window.location=window.location.href+"&DisplayMode=Design"));switch(e){case"FormEdit.Command.Edit":r.actionFormsCommandEdit(t.On);break;case"FormEdit.Command.QueryEdit":t[CUI.Controls.ToggleButtonCommandProperties.On]=r.queryFormsCommandEdit();break;case"FormEdit.Command.Save":r.actionFormsCommandSave(),RefreshCommandUI();break;case"FormEdit.Command.Delete":r.actionFormsCommandDelete(),RefreshCommandUI();break;case"FormEdit.Command.Cancel":r.actionFormsCommandCancel(),RefreshCommandUI();break;case"FormEdit.Command.Close":r.actionFormsCommandClose(),RefreshCommandUI();break;case"FormEdit.Command.Design":window.location=window.location.href+"&DisplayMode=Design",RefreshCommandUI();break;case"FormEdit.Command.Submit":r.actionFormsCommandSubmit(),RefreshCommandUI();break;default:return}return!0}},FormEdit.Ribbon.loadRibbon("TAB","MESSAGE"),FormEdit.Ribbon.PageComponent.registerClass("FormEdit.Ribbon.PageComponent",CUI.Page.PageComponent),FormEdit.Ribbon.PageComponent.instance=new FormEdit.Ribbon.PageComponent,FormEdit.Ribbon.PageComponent.initialize(),FormEdit.Ribbon.PageComponent.instance}),function(e){function t(e,t,o){var r,n,i,c,p,f,y,S,v,_=0,R=[],F=0,C=!1,P=[],A=[],O=!1;if(o=o||{},r=o.encoding||"UTF8",v=o.numRounds||1,i=u(t,r),v!==parseInt(v,10)||1>v)throw Error("numRounds must a integer >= 1");if("SHA-1"!==e)throw Error("Chosen SHA variant is not supported");p=512,f=h,y=b,c=160,S=function(e){return e.slice()},n=g(e),this.setHMACKey=function(t,o,i){var s;if(!0===C)throw Error("HMAC key already set");if(!0===O)throw Error("Cannot set HMAC key after calling update");if(r=(i||{}).encoding||"UTF8",o=u(o,r)(t),t=o.binLen,o=o.value,s=p>>>3,i=s/4-1,t/8>s){for(o=y(o,t,0,g(e),c);o.length<=i;)o.push(0);o[i]&=4294967040}else if(s>t/8){for(;o.length<=i;)o.push(0);o[i]&=4294967040}for(t=0;i>=t;t+=1)P[t]=909522486^o[t],A[t]=1549556828^o[t];n=f(P,n),_=p,C=!0},this.update=function(e){var t,o,r,s=0,a=p>>>5;for(t=i(e,R,F),e=t.binLen,o=t.value,t=e>>>5,r=0;t>r;r+=a)e>=s+p&&(n=f(o.slice(r,r+a),n),s+=p);_+=s,R=o.slice(s>>>5),F=e%p,O=!0},this.getHash=function(t,o){var r,i,u,p;if(!0===C)throw Error("Cannot call getHash after setting HMAC key");switch(u=d(o),t){case"HEX":r=function(e){return s(e,c,u)};break;case"B64":r=function(e){return a(e,c,u)};break;case"BYTES":r=function(e){return m(e,c)};break;case"ARRAYBUFFER":try{i=new ArrayBuffer(0)}catch(f){throw Error("ARRAYBUFFER not supported by this environment")}r=function(e){return l(e,c)};break;default:throw Error("format must be HEX, B64, BYTES, or ARRAYBUFFER")}for(p=y(R.slice(),F,_,S(n),c),i=1;v>i;i+=1)p=y(p,c,0,g(e),c);return r(p)},this.getHMAC=function(t,o){var r,i,u,h;if(!1===C)throw Error("Cannot call getHMAC without first setting HMAC key");switch(u=d(o),t){case"HEX":r=function(e){return s(e,c,u)};break;case"B64":r=function(e){return a(e,c,u)};break;case"BYTES":r=function(e){return m(e,c)};break;case"ARRAYBUFFER":try{r=new ArrayBuffer(0)}catch(b){throw Error("ARRAYBUFFER not supported by this environment")}r=function(e){return l(e,c)};break;default:throw Error("outputFormat must be HEX, B64, BYTES, or ARRAYBUFFER")}return i=y(R.slice(),F,_,S(n),c),h=f(A,g(e)),h=y(i,c,p,h,c),r(h)}}function o(e,t,o){var r,n,i,s,a,m=e.length;if(t=t||[0],o=o||0,a=o>>>3,0!==m%2)throw Error("String of HEX type must be in byte increments");for(r=0;m>r;r+=2){if(n=parseInt(e.substr(r,2),16),isNaN(n))throw Error("String of HEX type contains invalid characters");for(s=(r>>>1)+a,i=s>>>2;t.length<=i;)t.push(0);t[i]|=n<<8*(3-s%4)}return{value:t,binLen:4*m+o}}function r(e,t,o){var r,n,i,s,a=[],a=t||[0];for(o=o||0,n=o>>>3,r=0;r<e.length;r+=1)t=e.charCodeAt(r),s=r+n,i=s>>>2,a.length<=i&&a.push(0),a[i]|=t<<8*(3-s%4);return{value:a,binLen:8*e.length+o}}function n(e,t,o){var r,n,i,s,a,m,l=[],d=0,l=t||[0];if(o=o||0,t=o>>>3,-1===e.search(/^[a-zA-Z0-9=+\/]+$/))throw Error("Invalid character in base-64 string");if(n=e.indexOf("="),e=e.replace(/\=/g,""),-1!==n&&n<e.length)throw Error("Invalid '=' found in base-64 string");for(n=0;n<e.length;n+=4){for(a=e.substr(n,4),i=s=0;i<a.length;i+=1)r="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".indexOf(a[i]),s|=r<<18-6*i;for(i=0;i<a.length-1;i+=1){for(m=d+t,r=m>>>2;l.length<=r;)l.push(0);l[r]|=(s>>>16-8*i&255)<<8*(3-m%4),d+=1}}return{value:l,binLen:8*d+o}}function i(e,t,o){var r,n,i,s=[],s=t||[0];for(o=o||0,r=o>>>3,t=0;t<e.byteLength;t+=1)i=t+r,n=i>>>2,s.length<=n&&s.push(0),s[n]|=e[t]<<8*(3-i%4);return{value:s,binLen:8*e.byteLength+o}}function s(e,t,o){var r="";t/=8;var n,i;for(n=0;t>n;n+=1)i=e[n>>>2]>>>8*(3-n%4),r+="0123456789abcdef".charAt(i>>>4&15)+"0123456789abcdef".charAt(15&i);return o.outputUpper?r.toUpperCase():r}function a(e,t,o){var r,n,i,s="",a=t/8;for(r=0;a>r;r+=3)for(n=a>r+1?e[r+1>>>2]:0,i=a>r+2?e[r+2>>>2]:0,i=(e[r>>>2]>>>8*(3-r%4)&255)<<16|(n>>>8*(3-(r+1)%4)&255)<<8|i>>>8*(3-(r+2)%4)&255,n=0;4>n;n+=1)s+=t>=8*r+6*n?"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(i>>>6*(3-n)&63):o.b64Pad;return s}function m(e,t){var o,r,n="",i=t/8;for(o=0;i>o;o+=1)r=e[o>>>2]>>>8*(3-o%4)&255,n+=String.fromCharCode(r);return n}function l(e,t){var o,r=t/8,n=new ArrayBuffer(r);for(o=0;r>o;o+=1)n[o]=e[o>>>2]>>>8*(3-o%4)&255;return n}function d(e){var t={outputUpper:!1,b64Pad:"=",shakeLen:-1};if(e=e||{},t.outputUpper=e.outputUpper||!1,!0===e.hasOwnProperty("b64Pad")&&(t.b64Pad=e.b64Pad),"boolean"!=typeof t.outputUpper)throw Error("Invalid outputUpper formatting option");if("string"!=typeof t.b64Pad)throw Error("Invalid b64Pad formatting option");return t}function u(e,t){var s;switch(t){case"UTF8":case"UTF16BE":case"UTF16LE":break;default:throw Error("encoding must be UTF8, UTF16BE, or UTF16LE")}switch(e){case"HEX":s=o;break;case"TEXT":s=function(e,o,r){var n,i,s,a,m,l=[],d=[],u=0,l=o||[0];if(o=r||0,s=o>>>3,"UTF8"===t)for(n=0;n<e.length;n+=1)for(r=e.charCodeAt(n),d=[],128>r?d.push(r):2048>r?(d.push(192|r>>>6),d.push(128|63&r)):55296>r||r>=57344?d.push(224|r>>>12,128|r>>>6&63,128|63&r):(n+=1,r=65536+((1023&r)<<10|1023&e.charCodeAt(n)),d.push(240|r>>>18,128|r>>>12&63,128|r>>>6&63,128|63&r)),i=0;i<d.length;i+=1){for(m=u+s,a=m>>>2;l.length<=a;)l.push(0);l[a]|=d[i]<<8*(3-m%4),u+=1}else if("UTF16BE"===t||"UTF16LE"===t)for(n=0;n<e.length;n+=1){for(r=e.charCodeAt(n),"UTF16LE"===t&&(i=255&r,r=i<<8|r>>>8),m=u+s,a=m>>>2;l.length<=a;)l.push(0);l[a]|=r<<8*(2-m%4),u+=2}return{value:l,binLen:8*u+o}};break;case"B64":s=n;break;case"BYTES":s=r;break;case"ARRAYBUFFER":try{s=new ArrayBuffer(0)}catch(a){throw Error("ARRAYBUFFER not supported by this environment")}s=i;break;default:throw Error("format must be HEX, TEXT, B64, BYTES, or ARRAYBUFFER")}return s}function c(e,t){return e<<t|e>>>32-t}function p(e,t){var o=(65535&e)+(65535&t);return((e>>>16)+(t>>>16)+(o>>>16)&65535)<<16|65535&o}function f(e,t,o,r,n){var i=(65535&e)+(65535&t)+(65535&o)+(65535&r)+(65535&n);return((e>>>16)+(t>>>16)+(o>>>16)+(r>>>16)+(n>>>16)+(i>>>16)&65535)<<16|65535&i}function g(e){var t=[];if("SHA-1"!==e)throw Error("No SHA variants supported");return t=[1732584193,4023233417,2562383102,271733878,3285377520]}function h(e,t){var o,r,n,i,s,a,m,l=[];for(o=t[0],r=t[1],n=t[2],i=t[3],s=t[4],m=0;80>m;m+=1)l[m]=16>m?e[m]:c(l[m-3]^l[m-8]^l[m-14]^l[m-16],1),a=20>m?f(c(o,5),r&n^~r&i,s,1518500249,l[m]):40>m?f(c(o,5),r^n^i,s,1859775393,l[m]):60>m?f(c(o,5),r&n^r&i^n&i,s,2400959708,l[m]):f(c(o,5),r^n^i,s,3395469782,l[m]),s=i,i=n,n=c(r,30),r=o,o=a;return t[0]=p(o,t[0]),t[1]=p(r,t[1]),t[2]=p(n,t[2]),t[3]=p(i,t[3]),t[4]=p(s,t[4]),t}function b(e,t,o,r){var n;for(n=(t+65>>>9<<4)+15;e.length<=n;)e.push(0);for(e[t>>>5]|=128<<24-t%32,t+=o,e[n]=4294967295&t,e[n-1]=t/4294967296|0,t=e.length,n=0;t>n;n+=16)r=h(e.slice(n,n+16),r);return r}"function"==typeof define&&define.amd?define("sha1",[],function(){return t}):"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(module.exports=t),exports=t):e.jsSHA=t}(this),function(e,t){"function"==typeof define&&define.amd?define("form-loader2",t):"object"==typeof exports?module.exports=t():e.formLoader=t()}(this,function(){JSRequest.EnsureSetup();var e=function(){console.log("offset: +"+(Date.now()-top.startTime)+" - form-loader2.js: starting listener..."),"undefined"==typeof top.SPAFORM&&(top.SPAFORM={isSearchContext:!1,list:{name:"",title:"",id:"listId",item:{id:0}},$registeredSchemas:{},closeOnDesignSave:!0}),"undefined"==typeof top.SPAFORM.form.$runtime&&(top.SPAFORM.form.$runtime=null,top.SPAFORM.form.$design=null,top.SPAFORM.runtimeForm=function(){return top.SPAFORM.form.$runtime?top.SPAFORM.form.$runtime:top.SPAFORM.form.$design},top.SPAFORM.designForm=function(){return top.SPAFORM.form.$design?top.SPAFORM.form.$design:top.SPAFORM.form.$runtime}),window.$designready=!1;var e=function(){var e={},t=null;return function(o){try{var r=JSON.parse(o.data),n=r[0],i=r[1],s=r[2],a=r[3];switch(n){case"sandboxLoaded":if(console.log("offset: +"+(Date.now()-top.startTime)+" - form-loader2: SANDBOX-Frame Loaded: "+a+" e.data: "+o.data),"0"!=a&&"1"!=a)return void console.log("offset: +"+(Date.now()-top.startTime)+" - form-loader2: ERROR CONDITION - IGNORE ");if(t){var m=null,l=top.SPAFORM.buffer.sandbox[parseInt(a)],d=parent.document.getElementById(l.iframeId);m=d?d.contentWindow:null,m&&m.postMessage(JSON.stringify(["preloadScripts","",t,l.id]),"*")}break;case"sandboxReady":if(console.log("offset: +"+(Date.now()-top.startTime)+" - form-loader2: SANDBOX READY-Frame: "+a),t){var m=null,l=top.SPAFORM.buffer.sandbox[parseInt(a)];if("next"==l.command){var d=parent.document.getElementById(l.iframeId);m=d?d.contentWindow:null,m&&m.postMessage(JSON.stringify(["proxyReady","",t,l.id]),"*")}else{top.SPAFORM.buffer.setState(l.id,"pending");var u=top.SPAFORM.project,c=top.SPAFORM.form;c.design().buildProjectFile2(!1).done(function(e){u.setFile("project.js",e),u.write(),console.log("offset: +"+(Date.now()-top.startTime)+" - form2-loader2: buildProjectFile2 completed"),c.design()._formEnsureColumns(c.ensureComponentColumns).done(function(){console.log("offset: +"+(Date.now()-top.startTime)+" - form2-loader2: _formEnsureColumns completed"),top.SPAFORM.buffer.isRunning=!1,RefreshCommandUI()})})}}break;case"proxyReady":console.log("offset: +"+(Date.now()-top.startTime)+" - form-loader2: PROXY READY"),top.SPAFORM.list.proxy=top.SPAFORM.list.title?top:parent.document.getElementById("model-proxy").contentWindow,t=s,top.SPAFORM.jsonConfig&&(top.SPAFORM.jsonConfig.requireConfig.waitSeconds=30,t.registeredComponents=top.SPAFORM.jsonConfig.registeredComponents,t.requireConfig=top.SPAFORM.jsonConfig.requireConfig,t.version=top.SPAFORM.productVersion),top.SPAFORM.list.canEdit=t.permissions.canEdit,top.SPAFORM.list.canDesign=t.permissions.canDesign,top.SPAFORM.list.canDesign&&top.productdesigncontrol&&top.productdesigncontrol(),requirejs.config(t.requireConfig),requirejs.onError=function(e){console.log("form-loader2 - requirejs error: "+e)},requirejs(["jquery","knockout","form2","fabriccomp"],function(o,r,n){window.ko=r,o("#formContainer").html(n.template),e=new n.viewModel,e._formInit(t,!1,_spPageContextInfo.webAbsoluteUrl,JSRequest.QueryString.ID)});break;case"formHeader":document.getElementById("headerFormId").innerHTML=a,document.getElementById("headerFormTitle").innerHTML=i,document.getElementById("headerFormStatus").innerHTML=s;break;case"formError":document.getElementById("formContainer").innerHTML="PROXY ERROR: "+i;break;default:e.formListener(n,i,a)}}catch(p){document.getElementById("formContainer").innerHTML="ERROR: "+p}return!0}}();"undefined"!=typeof window.addEventListener?window.addEventListener("message",e,!1):"undefined"!=typeof window.attachEvent&&window.attachEvent("onmessage",e)};return e}),function(e,t){"function"==typeof define&&define.amd?define("form-loader-proxy",t):"object"==typeof exports?module.exports=t():e.proxyLoader=t()}(this,function(){JSRequest.EnsureSetup();var e=function(){var e=this;console.log("offset: +"+(Date.now()-top.startTime)+" - form-proxy-loader.js: starting listener...");var t=location.pathname;top.SPAFORM.list.name=t.substring(t.indexOf("/Lists/")+7,t.lastIndexOf("/"));var o=_spPageContextInfo.webAbsoluteUrl+"/Lists/"+top.SPAFORM.list.name+"/Form/";e.formList=top.SPAFORM.list.name,e.formID=JSRequest.QueryString.ID,e.formPath=o,e.requireBaseUrl=e.formPath+"Design",e._formRequestRuntime=!1,e._formAttachmentsContent={};var r=function(e,t,o){if("object"==typeof e&&null!==e)if(e.fileContent)e.templateFile?n(e.fileContent,t,e.templateFile).done(function(){n(e.modelContent,t,e.modelFile).done(function(){d(JSON.stringify(e.config),t,!0).done(function(){top.postMessage(JSON.stringify(["formDesignPublished",e,t,o]),"*")})})}):n(e.fileContent,t,o).done(function(){d(JSON.stringify(e.config),t,!0).done(function(){top.postMessage(JSON.stringify(["formDesignPublished",e,t,o]),"*")})});else if(e.viewModel)n(e.viewModel,t,o+".js").done(function(){n(e.template,t,o+".html").done(function(){d(JSON.stringify(e.config),t,!0).done(function(){top.postMessage(JSON.stringify(["formDesignSaved",e,t,o]),"*")})})});else if(e.deleteTempFiles)i(e,t,e.deleteTempFiles+".js").done(function(){i(e,t,e.deleteTempFiles+".html").done(function(){})});else if(e.restoreFiles){var r=[],s=JSON.parse(e.restoreFiles);for(filename in s)r.push(n(s[filename],t,o+filename));$.when.apply($,r).done(function(){top.postMessage(JSON.stringify(["formDesignSaved",e,t,o]),"*")})}else d(JSON.stringify(e.config),t,!0).done(function(){void 0===e.noreply&&top.postMessage(JSON.stringify(["formDesignPublished",e,t,o]),"*")});else n(e,t,o).done(function(){top.postMessage(JSON.stringify(["formDesignPublished",e,t,o]),"*")})},n=function(e,t,o){var r=$.Deferred(),n=o.lastIndexOf("/"),i=n>0?"/"+o.substring(0,n):"",s="Lists/"+t+"/Form"+i,a=n>0?o.substr(n+1):o,m=_spPageContextInfo.webAbsoluteUrl+"/_api/web/GetFolderByServerRelativeUrl('"+s+"')/Files/add(url='"+a+"',overwrite=true)";return p().done(function(n){$.ajax({url:m,method:"POST",data:e,processData:!1,headers:{"X-RequestDigest":n,Accept:"application/json;odata=verbose"},success:function(e){r.resolve()},error:function(e){top.postMessage(JSON.stringify(["formError",JSON.stringify(e),t,o]),"*"),r.reject()}})}),r.promise()},i=function(e,t,o){var r=$.Deferred(),n=o.lastIndexOf("/"),i=n>0?"/"+o.substring(0,n):"",s="Lists/"+t+"/Form"+i,a=n>0?o.substr(n+1):o,m=_spPageContextInfo.webServerRelativeUrl+"/"+s+"/"+a,l=_spPageContextInfo.webAbsoluteUrl+"/_api/web/GetFileByServerRelativeUrl('"+m+"')";return p().done(function(e){$.ajax({url:l,method:"POST",headers:{"X-RequestDigest":e,Accept:"application/json;odata=verbose","IF-MATCH":"*","X-HTTP-Method":"DELETE"},success:function(e){r.resolve()},error:function(e){r.reject()}})}),r.promise()},s=function(e,t,o){r(e,t,o)},a=function(e,t,o){if("object"==typeof e&&null!==e){var r=new SP.ClientContext(_spPageContextInfo.webAbsoluteUrl),n=r.get_web().ensureUser(e.userName);return r.load(n),void r.executeQueryAsync(function(){var e={Title:n.get_title(),Id:n.get_id()};top.postMessage(JSON.stringify(["formPeopleQueryDone",e,t,0]),"*")},function(e,o){top.postMessage(JSON.stringify(["formError",o.get_message(),t,0]),"*")})}try{var r=new SP.ClientContext(_spPageContextInfo.webAbsoluteUrl),i={},s=$.extend({onLoaded:null,minSearchTriggerLength:4,maximumEntitySuggestions:5,principalType:1,principalSource:15,searchPrefix:"",searchSuffix:"",displayResultCount:4,maxSelectedUsers:1},i),a=e,m=""+s.searchPrefix+a+s.searchSuffix,l=new SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters;l.set_allowMultipleEntities(!1),l.set_maximumEntitySuggestions(s.maximumEntitySuggestions),l.set_principalType(s.principalType),l.set_principalSource(s.principalSource),l.set_queryString(m);var d=SP.UI.ApplicationPages.ClientPeoplePickerWebServiceInterface.clientPeoplePickerSearchUser(r,l),u={queryTicks:(new Date).getTime(),result:d,queryTerm:m,spContext:r};r.executeQueryAsync(Function.createDelegate(u,function(){var e=r.parseObjectFromJsonString(this.result.get_value());top.postMessage(JSON.stringify(["formPeopleQueryDone",e,t,0]),"*")}),Function.createDelegate(this,function(e,o){top.postMessage(JSON.stringify(["formError",o.get_message(),t,0]),"*")}))}catch(c){alert("proxy error: "+JSON.stringify(c))}},m=function(e,t,o){var r=this;if("object"==typeof e&&null!==e){var n=new SP.ClientContext.get_current,i=n.get_site().openWebById(e.LookupWebId).get_lists().getById(e.LookupList),s=new SP.CamlQuery;return s.set_viewXml("<View><RowLimit>4999</RowLimit></View>"),this.listItems=i.getItems(s),n.load(this.listItems,"Include(Id,"+e.LookupField+")"),void n.executeQueryAsync(function(){for(var o=r.listItems.getEnumerator(),n=[];o.moveNext();){var i=o.get_current();n.push({Title:i.get_item(e.LookupField),Id:i.get_id()})}top.postMessage(JSON.stringify(["formLookupQueryDone",n,t,0]),"*")},function(e,o){top.postMessage(JSON.stringify(["formError",o.get_message(),t,0]),"*")})}},l=function(e,t,o){$.ajax({url:_spPageContextInfo.webAbsoluteUrl+"/_api/web/lists/getbytitle('"+top.listtitle+"')/fields?$filter=Hidden eq false and ReadOnlyField eq false",type:"GET",headers:{accept:"application/json;odata=verbose"},success:function(e){top.postMessage(JSON.stringify(["formFieldsQueryDone",e.d.results,t,0]),"*")},error:function(e){top.postMessage(JSON.stringify(["formError",JSON.stringify(e),formListName,o]),"*")}})},d=function(e,t,o){var r=$.Deferred();return SP.SOD.executeFunc("sp.js","SP.ClientContext",function(){try{var i=new SP.ClientContext(_spPageContextInfo.webAbsoluteUrl),s=i.get_web().get_lists().getByTitle(top.listtitle),a=s.get_rootFolder(),m=s.get_contentTypes();i.load(s),i.load(m),i.load(a,"Properties"),i.executeQueryAsync(function(){var i={runtime:!1,components:[],registeredcomponents:[],sourceControl:{},contenttypes:[]},a=JSON.stringify(i),l=JSON.parse(a);l.listId=s.get_id().toString();var d=s.get_allowContentTypes(),u=s.get_contentTypesEnabled();if(d&u)for(var c=(s.get_contentTypes,m.getEnumerator());c.moveNext();){var p=c.get_current();l.contenttypes.push({name:p.get_name(),id:p.get_id().toString()})}if(o){var f=JSON.parse(e),g={};g.components=JSON.parse(JSON.stringify(f.components)),g.columns=JSON.parse(JSON.stringify(f.columns));var h="define([], function( ) { return  JSON.stringify("+JSON.stringify(g)+");});";n(h,t,"Design/project.js").done(function(){r.resolve(e)})}r.resolve(JSON.stringify(l))},function(e,n){top.postMessage(JSON.stringify(["formError",JSON.stringify(n),t,o]),"*"),r.reject()})}catch(l){top.postMessage(JSON.stringify(["formError",JSON.stringify(l),t,o]),"*")}}),r.promise()},u=function(e,t,o){try{var r=new SP.ClientContext(_spPageContextInfo.webAbsoluteUrl),n=r.get_web().get_lists().getByTitle(top.listtitle),i=new SP.ListItemCreationInformation;this.oListItem=n.addItem(i);var s=JSON.parse(e);for(var a in s)if("__metadata"!=a&&"OData__ModerationStatus"!=a&&"OData__ModerationComments"!=a)if("Object"==w(s[a]))if(s[a].__metadata&&s[a].__metadata.filedtype)switch(s[a].__metadata.filedtype){case"Lookup":var m=new SP.FieldLookupValue;m.set_lookupId(s[a].value),this.oListItem.set_item(a,m);break;case"UserMulti":var l=[];for(var d in s[a].keys){var m=SP.FieldUserValue.fromUser(s[a].keys[d]);l.push(m)}this.oListItem.set_item(a,l);break;case"User":}else"Attachments"!=a?this.oListItem.set_item(a,s[a]):this.oListItem.set_item("mwp_Attachments",JSON.stringify(s[a]));else this.oListItem.set_item(a,s[a]);this.oListItem.update(),r.load(this.oListItem),r.executeQueryAsync(Function.createDelegate(this,function(){var r=this.oListItem.get_id();b("","",r).done(function(n){"PropertyBag"==o?I(t).done(function(o,n){s.mwp_FormID=o,s.mwp_FormType=n,e=JSON.stringify(s),E(e,t,r)}):j(t,r).done(function(o,n){s.mwp_FormID=o,s.mwp_FormType=n,e=JSON.stringify(s),E(e,t,r)})})}),Function.createDelegate(this,function(e,o){top.postMessage(JSON.stringify(["formError",o.get_message(),t,0]),"*")}))}catch(u){alert("proxy error: "+JSON.stringify(u))}},c=function(e,t,o){$.ajax({url:_spPageContextInfo.webAbsoluteUrl+"/_api/web/lists/getbytitle('"+top.listtitle+"')/enableModeration",type:"GET",headers:{accept:"application/json;odata=verbose"},success:function(e){top.postMessage(JSON.stringify(["formInitialized",e.d.EnableModeration,t,o]),"*")},error:function(e){top.postMessage(JSON.stringify(["formError",JSON.stringify(e),t,o]),"*")}})},p=function(){var e=$.Deferred(),t=this;return $.ajax({url:_spPageContextInfo.webAbsoluteUrl+"/_api/contextinfo",type:"POST",headers:{accept:"application/json;odata=verbose"},success:function(o){return t.formViewState=o.d.GetContextWebInformation.FormDigestValue,e.resolve(t.formViewState)},error:function(t){return e.reject()}}),e.promise()},f=function(){var e=$.Deferred(),t=!1,o=!1;return SP.SOD.executeFunc("sp.js","SP.ClientContext",function(){try{var r=new SP.ClientContext(_spPageContextInfo.webAbsoluteUrl),n=r.get_web();r.load(n,"EffectiveBasePermissions"),r.executeQueryAsync(function(){return t=n.get_effectiveBasePermissions().has(SP.PermissionKind.manageLists),o=n.get_effectiveBasePermissions().has(SP.PermissionKind.approveItems),e.resolve(t,o)},function(t,o){return e.reject()})}catch(i){alert(i)}}),e.promise()},g=function(e,t){var o=new SP.BasePermissions;return o.fromJson(e),o.has(t)},h=function(e,t){var o=$.Deferred();return SP.SOD.executeFunc("sp.js","SP.ClientContext",function(){try{var e=new SP.ClientContext(_spPageContextInfo.webAbsoluteUrl),r=e.get_web(),n=r.get_currentUser();e.load(n),e.executeQueryAsync(function(){var e=_spPageContextInfo.webAbsoluteUrl,r=n.get_loginName(),i=t?"/items("+t+")":"",s=e+"/_api/web/lists/getbytitle('"+top.listtitle+"')"+i+"/getusereffectivepermissions(@u)?@u='"+encodeURIComponent(r)+"'";$.ajax({url:s,type:"GET",headers:{accept:"application/json;odata=verbose"},success:function(e){o.resolve(e.d.GetUserEffectivePermissions)},error:function(e){o.reject()}})},function(e,t){o.reject()})}catch(i){alert(i),o.reject()}}),o.promise()},b=function(e,t,o){var r=this,n=$.Deferred(),i=_spPageContextInfo.webAbsoluteUrl+"/_api/web/lists/getbytitle('"+top.listtitle+"')/items("+o+")";return $.ajax({url:i,type:"GET",headers:{accept:"application/json;odata=verbose"},success:function(e){e.d;r.__metadata=e.d.__metadata,top.SPAFORM.list.__metadata=e.d.__metadata,n.resolve(e.d)},error:function(e){n.reject()}}),n.promise()},y=function(e,t,o){var r=this,n=_spPageContextInfo.webAbsoluteUrl+"/_api/web/lists/getbytitle('"+top.listtitle+"')/items("+o+")";""!=e&&(n+=e),$.ajax({url:n,type:"GET",headers:{accept:"application/json;odata=verbose"},success:function(n){var i=n.d;r.__metadata=n.d.__metadata,top.SPAFORM.list.__metadata=n.d.__metadata,v(e,t,o).done(function(e){i.Attachments=i.mwp_Attachments?T(e,JSON.parse(i.mwp_Attachments)):e,top.postMessage(JSON.stringify(["formLoaded",i,t,o]),"*"),top.postMessage(JSON.stringify(["formHeader",i.mwp_FormType,"STATUS: "+i.mwp_FormState,"#"+i.mwp_FormID]),"*")})},error:function(e){top.postMessage(JSON.stringify(["formError",JSON.stringify(e),t,o]),"*")}})},S=function(e,t,o){$.ajax({url:_spPageContextInfo.webAbsoluteUrl+"/_api/web/lists/getbytitle('"+top.listtitle+"')/items("+o+")/AttachmentFiles",type:"GET",headers:{accept:"application/json;odata=verbose"},success:function(e){e?top.postMessage(JSON.stringify(["formAttachmentsLoaded",e.d,t,o]),"*"):top.postMessage(JSON.stringify(["formError","no attachments data",t,o]),"*")},error:function(e){top.postMessage(JSON.stringify(["formError",JSON.stringify(e),t,o]),"*")}})},v=function(e,t,o){var r=$.Deferred();return $.ajax({url:_spPageContextInfo.webAbsoluteUrl+"/_api/web/lists/getbytitle('"+top.listtitle+"')/items("+o+")/AttachmentFiles",
type:"GET",headers:{accept:"application/json;odata=verbose"},success:function(e){if(e){var n={};n.results=[],e.d.results.forEach(function(e){var t=e.ServerRelativeUrl.toString(),o=_spPageContextInfo.webAbsoluteUrl+t.substring(t.indexOf("/Lists"),t.length),r=t.substring(t.lastIndexOf("/")+1,t.length);n.results.push({newFileName:"",oldFileName:r,url:o,prefix:""})}),r.resolve(n)}else top.postMessage(JSON.stringify(["formError","no attachments data",t,o]),"*"),r.reject()},error:function(e){top.postMessage(JSON.stringify(["formError",JSON.stringify(e),t,o]),"*"),r.reject()}}),r.promise()},_=function(e,t,o){var r=$.Deferred();return p().done(function(n){$.ajax({url:_spPageContextInfo.webAbsoluteUrl+"/_api/web/lists/getbytitle('"+top.listtitle+"')/getItemById("+o+")/AttachmentFiles/getByFileName('"+e+"')",method:"POST",contentType:"application/json;odata=verbose",headers:{"X-RequestDigest":n,"X-HTTP-Method":"DELETE",Accept:"application/json;odata=verbose"},success:function(n){return top.postMessage(JSON.stringify(["formAttachmentDeleted",e,t,o]),"*"),r.resolve()},error:function(e){return top.postMessage(JSON.stringify(["formError",JSON.stringify(e),t,o]),"*"),r.reject()}})}),r.promise()},R=function(e,t,o){var r=$.Deferred();return p().done(function(t){$.ajax({url:_spPageContextInfo.webAbsoluteUrl+"/_api/web/lists/getbytitle('"+top.listtitle+"')/getItemById("+o+")/AttachmentFiles/getByFileName('"+e+"')",method:"POST",contentType:"application/json;odata=verbose",headers:{"X-RequestDigest":t,"X-HTTP-Method":"DELETE",Accept:"application/json;odata=verbose"},success:function(e){return r.resolve()},error:function(e){return r.reject()}})}),r.promise()},F=function(e,t,o){this.index=e;var r=$("#fileSelector");r.click()},C=function(e){var t=this,o=e.target,r=o.files[0],n=new FileReader;n.addEventListener("load",function(){t._formAttachmentsContent[r.name]=n.result,top.postMessage(JSON.stringify(["formAttachmentUploaded",r.name,100,t.index]),"*")},!1),r&&n.readAsArrayBuffer(r)},P=function(e,t,o){var r=this,n=e.newFileName,i=e.oldFileName,s=e.fileContent;return""==i?void(""!=n&&M(n,r._formAttachmentsContent[s],t,o)):""==n?void(""!=i&&_(i,t,o).done(function(){top.postMessage(JSON.stringify(["formAttachmentSaved",{FileName:"",ServerRelativeUrl:""},t,o]),"*")})):void _(i,t,o).done(function(){M(n,r._formAttachmentsContent[s],t,o)})},A=function(e,t,o){if(!e&&!e.results)return void console.log("invalid attachments format");var r=$.Deferred(),n=[];return e.results.forEach(function(e){var r=e.newFileName,i=e.oldFileName,s=e.prefix;""==i&&""!=r&&n.push(x(r,t,o)),""==r&&""!=i&&"deleted"==s&&n.push(R(i,t,o)),""!=i&&""!=r&&n.push(O(r,i,t,o))}),$.when.apply($,n).then(function(){v(e,t,o).done(function(e){r.resolve(e)})},function(){r.reject()}),r.promise()},O=function(e,t,o,r){var n=$.Deferred();return R(t,o,r).done(function(){x(e,o,r).done(function(e){n.resolve(e.d)})}),n.promise()},M=function(e,t,o,r){var n=t;p().done(function(t){$.ajax({url:_spPageContextInfo.webAbsoluteUrl+"/_api/web/lists/getbytitle('"+top.listtitle+"')/getItemById("+r+")/AttachmentFiles/add(FileName='"+e+"')",method:"POST",binaryStringRequestBody:!0,data:n,processData:!1,contentType:"application/json;odata=verbose",headers:{"X-RequestDigest":t,Accept:"application/json;odata=verbose"},success:function(e){top.postMessage(JSON.stringify(["formAttachmentSaved",e.d,o,r]),"*")},error:function(e){top.postMessage(JSON.stringify(["formError",JSON.stringify(e),o,r]),"*")}})})},x=function(e,t,o){var r=$.Deferred(),n=this,i=n._formAttachmentsContent[e];return p().done(function(t){$.ajax({url:_spPageContextInfo.webAbsoluteUrl+"/_api/web/lists/getbytitle('"+top.listtitle+"')/getItemById("+o+")/AttachmentFiles/add(FileName='"+e+"')",method:"POST",binaryStringRequestBody:!0,data:i,processData:!1,contentType:"application/json;odata=verbose",headers:{"X-RequestDigest":t,Accept:"application/json;odata=verbose"},success:function(e){r.resolve(e.d)},error:function(e){console.log("error: __formAttachmentCreate2"),r.reject()}})}),r.promise()},w=function(e){var t="test".constructor,o=[].constructor,r={}.constructor;return null===e?"null":void 0===e?"undefined":e.constructor===t?"String":e.constructor===o?"Array":e.constructor===r?"Object":"don't know"},E=function(e,t,o){f().done(function(r,n){var i=JSON.parse(e),s={};n||(delete i.OData__ModerationStatus,delete i.OData__ModerationComments);for(var a in i)"Object"==w(i[a])?i[a].__metadata&&i[a].__metadata.filedtype?s[i[a].intname]=i[a].value:"Attachments"!=a?s[a]=i[a]:s.mwp_Attachments=JSON.stringify(i[a]):s[a]=i[a];s.__metadata=top.SPAFORM.list.__metadata;var m=JSON.stringify(s);p().done(function(r){$.ajax({url:_spPageContextInfo.webAbsoluteUrl+"/_api/web/lists/getbytitle('"+top.listtitle+"')/items("+o+")",type:"POST",headers:{accept:"application/json; odata=verbose","content-type":"application/json; odata=verbose","X-RequestDigest":r,"X-HTTP-Method":"MERGE","IF-MATCH":"*"},data:m,success:function(r){var n=JSON.parse(e);n.Attachments?A(n.Attachments,t,o).done(function(e){n.Attachments=T(e,JSON.parse(s.mwp_Attachments)),top.postMessage(JSON.stringify(["formSaved",n,t,o]),"*"),top.postMessage(JSON.stringify(["formHeader",n.mwp_FormType+" "+n.Title,"STATUS: "+n.mwp_FormState,"#"+n.mwp_FormID]),"*")}):(top.postMessage(JSON.stringify(["formSaved",e,t,o]),"*"),top.postMessage(JSON.stringify(["formHeader",n.mwp_FormType+" "+n.Title,"STATUS: "+n.mwp_FormState,"#"+n.mwp_FormID]),"*"))},error:function(e){top.postMessage(JSON.stringify(["formError",JSON.stringify(e),t,o]),"*")}})})})},T=function(e,t){return t||(t={}),t.results||(t.results=[]),e.results.forEach(function(e){var o=$.grep(t.results,function(t){return t.oldFileName==e.oldFileName||t.newFileName==e.oldFileName});o.length>0&&(e.prefix=o[0].prefix)}),e},D=function(e,t,o){var r=JSON.parse(e);p().done(function(n){$.ajax({url:_spPageContextInfo.webAbsoluteUrl+"/_api/web/lists/getbytitle('"+top.listtitle+"')/items("+o+")",type:"POST",headers:{accept:"application/json; odata=verbose","content-type":"application/json; odata=verbose","X-RequestDigest":n,"X-HTTP-Method":"DELETE","IF-MATCH":"*"},success:function(n){top.postMessage(JSON.stringify(["formDeleted",e,t,o]),"*"),top.postMessage(JSON.stringify(["formHeader",r.mwp_FormType,"",""]),"*")},error:function(e){top.postMessage(JSON.stringify(["formError",JSON.stringify(e),t,o]),"*")}})})},I=function(e){var t=$.Deferred();return SP.SOD.executeFunc("sp.js","SP.ClientContext",function(){try{var e=new SP.ClientContext(_spPageContextInfo.webAbsoluteUrl),o=e.get_web().get_lists().getByTitle(top.listtitle).get_rootFolder();e.load(o,"Properties"),e.executeQueryAsync(function(){var r=parseInt(o.get_properties().get_fieldValues().FormCounter),n=o.get_properties().get_fieldValues().FormPrefix,i=o.get_properties().get_fieldValues().FormType,s=n+r;o.get_properties().set_item("FormCounter",r+1),o.update(),e.executeQueryAsync(function(){t.resolve(s,i)},function(e,o){t.reject()})},function(e,o){t.reject()})}catch(r){alert(r)}}),t.promise()},j=function(e,t){var o=$.Deferred();return SP.SOD.executeFunc("sp.js","SP.ClientContext",function(){try{var e=new SP.ClientContext(_spPageContextInfo.webAbsoluteUrl),r=e.get_web().get_lists().getByTitle(top.listtitle).get_rootFolder();e.load(r,"Properties"),e.executeQueryAsync(function(){var e=r.get_properties().get_fieldValues().FormPrefix,n=r.get_properties().get_fieldValues().FormType,i=e+t;o.resolve(i,n)},function(e,t){o.reject()})}catch(n){alert(n)}}),o.promise()},k=unescape(JSRequest.QueryString.Runtime),N="Design"==unescape(JSRequest.QueryString.DisplayMode)?!0:!1;e.version="1.0.6.0",e._formRequestRuntime=k?"true"==k?!0:!1:N,e.viewmodel=e._formRequestRuntime?e.formList:"viewmodel",e._formRequestRuntimeMinJS=!0,e._formRequestSysComponents=!0,N&&(e._formRequestSysComponents=!1),top.openFile=C;var L=function(e){try{var t=JSON.parse(e.data),o=t[0],n=t[1],i=t[2],d=t[3];"formDesignSave"==o&&r(n,i,d),"formDesignPublish"==o&&s(n,i,d),"formCreate"==o&&u(n,i,d),"formUpdate"==o&&E(n,i,d),"formDelete"==o&&D(n,i,d),"formInitialize"==o&&c(n,i,d),"formLoad"==o&&y(n,i,d),"formAttachmentsLoad"==o&&S(n,i,d),"formAttachmentDelete"==o&&_(n,i,d),"formAttachmentSave"==o&&P(n,i,d),"formAttachmentUpload"==o&&F(n,i,d),"formPeopleQuery"==o&&a(n,i,d),"formLookupQuery"==o&&m(n,i,d),"formFieldsQuery"==o&&l(n,i,d),"proxyTest"==o&&alert("proxyTest")}catch(p){return void alert("PROXY: formListener ERROR "+p)}};"undefined"!=typeof window.addEventListener?window.addEventListener("message",L,!1):"undefined"!=typeof window.attachEvent&&window.attachEvent("onmessage",L),h(e.formList,e.formID).done(function(t){var o=JSON.stringify(t),r={canEdit:g(JSON.parse(o),SP.PermissionKind.editListItems),canDesign:g(JSON.parse(o),SP.PermissionKind.manageLists)};d("",e.formList,!1).done(function(t){var n={};n.permissions=r,n.userPermissions=JSON.parse(o);var i=JSON.parse(t);n.listPath=_spPageContextInfo.webAbsoluteUrl+"/Lists/"+e.formList,n.customComponents=i.components,n.runtime=e._formRequestRuntime,n.sourceControl=i.sourceControl,n.contentTypes=i.contenttypes,n.listId=i.listId,n.listName=e.formList,n.listTitle=top.listtitle,n.version=e.version,top.postMessage(JSON.stringify(["proxyReady",$("#formContainer").html(),n,r]),"*")})}).fail(function(e){console.log(JSON.stringify(e))})};return e}),top.getUrlParameter=function(e){e=e.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]");var t=new RegExp("[\\?&]"+e+"=([^&#]*)"),o=t.exec(location.search);return null===o?null:decodeURIComponent(o[1].replace(/\+/g," "))},function(e,t){"function"==typeof define&&define.amd?define("startup-prod",t):"object"==typeof exports?module.exports=t():e.startupConfig=t()}(this,function(){if("undefined"==typeof window)return null;var e={jquery:"../Runtime/jquery-1.10.2.min",knockout:"../Runtime/knockout-3.4.0.min",simplegrid:"../Runtime/knockout.simpleGrid.3.0",parsley:"../Runtime/parsley.min",validation:"../Runtime/knockout.validation.min","resize-sensor":"../Runtime/designer.min",text:"../Runtime/text",cache:"../Runtime/cache",cachetext:"../Runtime/cachetext",designercache:"../Runtime/designercache",designercachetext:"../Runtime/designercachetext",sha1:"../Runtime/designer.min",moment:"../Runtime/moment.min",json5:"../Runtime/designer.min",uglify:"../Runtime/source/uglify",form2:"../Runtime/runtime.min","form-loader2":"../Runtime/runtime.min","form-loader-sandbox":"../Runtime/designer.min","form-loader-proxy":"../Runtime/runtimer.min",toolbar:"../Runtime/designer.min",ribbon:"../Runtime/designer.min",cookie:"../Runtime/designer.min",ribbonedit:"../Runtime/runtime.min","ace/codepanel2":"../Runtime/designer.min","ace/ribbon/codetab2":"../Runtime/designer.min","ace/ribbon/codepagecomponent2":"../Runtime/designer.min",fabriccss:"../../Form/Runtime/fabric.min",fabriccompcss:"../../Form/Runtime/fabric.components.min",fabriccomp:"../Runtime/fabric.min",grideditor:"../Runtime/designer.min",jqueryui:"../Runtime/jquery-ui",summernote:"../../lib/grid/summernote.min",beautifyhtml:"../Runtime/designer.min",beautify:"../Runtime/designer.min","beautify-css":"../Runtime/designer.min",jsoneditor:"../Runtime/jsoneditor.min",jsoneditorcss:"../Runtime/jsoneditor.min",fontawesomecss:"../../Form/Runtime/font-awesome.min",grideditorcss:"../../Form/Runtime/grideditor.uifabric",grideditorformscss:"../../Form/Runtime/grideditor.forms",summernotecss:"../../lib/grid/summernote.min",octokat:"../Runtime/octokat","toolbar-supportpanel":"../Runtime/designer.min","toolbar-gitgrid":"../Runtime/designer.min","toolbar-gitbuild":"../Runtime/source/toolbar-gitbuild","form2-online":"../Runtime/designer.min","form2-design":"../Runtime/designer.min","form2-storage":"../Runtime/designer.min","form2-project":"../Runtime/designer.min","form2-git":"../Runtime/designer.min","toolbar-pickuppanel":"../Runtime/designer.min",empty:"../Runtime/empty",pickuppanel:"../Runtime/toolbar-pickuppanel.html"},t=[{Title:"layout",Require:{name:"layout",sys:!0,proto:!0,path:"../Runtime/syscomponents/layout"},Markup:{tag:"component-layout"}},{Title:"blank",Require:{name:"blank",sys:!0,proto:!0,path:"../Runtime/syscomponents/blank"},Markup:{tag:"component-blank"}},{Title:"textbox",Require:{name:"textbox",sys:!0,proto:!0,path:"../Runtime/syscomponents/textbox"},Markup:{tag:"component-textbox"}},{Title:"radiogroup",Require:{name:"radiogroup",sys:!0,proto:!0,path:"../Runtime/syscomponents/radiogroup"},Markup:{tag:"component-radiogroup"}},{Title:"dropdown",Require:{name:"dropdown",sys:!0,proto:!0,path:"../Runtime/syscomponents/dropdown"},Markup:{tag:"component-dropdown"}},{Title:"checkboxgroup",Require:{name:"checkboxgroup",sys:!0,proto:!0,path:"../Runtime/syscomponents/checkboxgroup"},Markup:{tag:"component-checkboxgroup"}},{Title:"personabox",Require:{name:"personabox",sys:!0,proto:!0,path:"../Runtime/syscomponents/personabox"},Markup:{tag:"component-personabox"}},{Title:"lookupbox",Require:{name:"lookupbox",sys:!0,proto:!0,path:"../Runtime/syscomponents/lookupbox"},Markup:{tag:"component-lookupbox"}},{Title:"datetimebox",Require:{name:"datetimebox",sys:!0,proto:!0,path:"../Runtime/syscomponents/datetimebox"},Markup:{tag:"component-datetimebox"}},{Title:"numberbox",Require:{name:"numberbox",sys:!0,proto:!0,path:"../Runtime/syscomponents/numberbox"},Markup:{tag:"component-numberbox"}},{Title:"currencybox",Require:{name:"currencybox",sys:!0,proto:!0,path:"../Runtime/syscomponents/currencybox"},Markup:{tag:"component-currencybox"}},{Title:"checkbox",Require:{name:"checkbox",sys:!0,proto:!0,path:"../Runtime/syscomponents/checkbox"},Markup:{tag:"component-checkbox"}},{Title:"notebox",Require:{name:"notebox",sys:!0,proto:!0,path:"../Runtime/syscomponents/notebox"},Markup:{tag:"component-notebox"}},{Title:"observable2",Require:{name:"observable2",sys:!0,proto:!0,path:"../Runtime/syscomponents/observable2"},Markup:{tag:"component-observable2"}},{Title:"buttons",Require:{name:"buttons",sys:!0,proto:!0,path:"../Runtime/syscomponents/buttons"},Markup:{tag:"component-buttons"}},{Title:"workflow",Require:{name:"workflow",sys:!0,proto:!0,path:"../Runtime/syscomponents/workflow"},Markup:{tag:"component-workflow"}},{Title:"filebox",Require:{name:"filebox",sys:!0,proto:!0,path:"../Runtime/syscomponents/filebox"},Markup:{tag:"component-filebox"}},{Title:"messagebox",Require:{name:"messagebox",sys:!0,proto:!0,path:"../Runtime/syscomponents/messagebox"},Markup:{tag:"component-messagebox"}},{Title:"forminfo",Require:{name:"forminfo",sys:!0,proto:!1,path:"../Runtime/syscomponents/forminfo"},Markup:{tag:"component-forminfo"}}],o=function(){"undefined"==typeof top.SPAFORM&&(top.SPAFORM={isSearchContext:!1,list:{name:"",title:top.listtitle,defaultViewUrl:top.listdefaultviewurl,relativeFolderPath:top.listrelativefolderpath,id:"listId",contentTypeId:top.getUrlParameter("ContentTypeId"),canEdit:!1,canDesign:!1,allowContentTypes:!1,enbledContentTypes:!1,contentTypes:[],fields:null,ODataRequestCached:null,item:{id:0}},form:{isSearchContext:!1,webAbsoluteUrl:"",ensureComponentColumns:{},columns:{},codePanels:{},codePanel:null,errorPanelState:!1,errorPanel:function(e,t){var o=top.SPAFORM.form,r=function(e){var t=top.document.getElementById("projectError"),r=top.document.getElementById("formContainer"),n=top.document.getElementById("formSandbox");return r&&(r.style.display=o.errorPanelState?"none":e?"none":"block"),n&&(n.style.display=o.errorPanelState?"none":e?"block":"none"),t&&(t.style.display=o.errorPanelState?"block":"none"),o.errorPanelState};return"sandbox"==e?r(!0):void 0==e?r():(1==e&&(top.document.getElementById("projectError").innerHTML=t),o.errorPanelState=e?!0:!1,r())},message:{red:{title:"Designer is not fully configured yet...",html:"please wait a minute and try again",color:"red",delay:!1},enabled:!1},isValid:!1,saveReady:!1,updateReady:!1,deleteReady:!1,cancelReady:!1,isProjectValid:!1,startupComponentSchema:null,$runtime:null,$design:null,runtime:function(){return top.SPAFORM.form.$runtime?top.SPAFORM.form.$runtime:top.SPAFORM.form.$design},design:function(){return top.SPAFORM.form.$design?top.SPAFORM.form.$design:top.SPAFORM.form.$runtime}},$registeredSchemas:{},closeOnDesignSave:!0,productVersion:top.productversion,productStartup:top.productstartup})},r=function(){"undefined"==typeof top.SPAFORM.runtime&&(top.SPAFORM.runtime={id:"spaforms365",cache:{},setProductVersion:function(e){var t=top.SPAFORM.runtime,o=t.get("productversion");o!=e&&(t.clear(),t.set("productversion",e))},version:{sharepoint:0,server:0,localstorage:0},get:function(e){return!top,top.SPAFORM.runtime.cache[e]},set:function(e,t){var o=top.SPAFORM.runtime;o.pendingWrite=!0,o.cache[e]=t},setEditor:function(e,t){t&&t.setValue(top.SPAFORM.runtime.get(e),-1)},read:function(){var e=localStorage.getItem(top.SPAFORM.runtime.id);top.SPAFORM.runtime.cache=e?JSON.parse(e):{}},enableWrite:!0,pendingWrite:!1,setEnableWrite:function(e){var t=top.SPAFORM.runtime;t.enableWrite=e,e&&t.write()},write:function(){var e=top.SPAFORM.runtime;e.enableWrite&&(delete localStorage[e.id],localStorage.setItem(e.id,JSON.stringify(e.cache)),e.pendingWrite=!1)},clear:function(){var e=top.SPAFORM.runtime;e.cache={},delete localStorage[e.id],e.pendingWrite=!1},modules:{jquery:"designercache",knockout:"designercache","beautify-html":"designercache","beautify-css":"designercache",beautify:"designercache",layout:"designercache","layout.html":"designercachetext",blank:"designercache","blank.html":"designercachetext",textbox:"designercache","textbox.html":"designercachetext",radiogroup:"designercache","radiogroup.html":"designercachetext",dropdown:"designercache","dropdown.html":"designercachetext",checkboxgroup:"designercache","checkboxgroup.html":"designercachetext",personabox:"designercache","personabox.html":"designercachetext",lookupbox:"designercache","lookupbox.html":"designercachetext",datetimebox:"designercache","datetimebox.html":"designercachetext",numberbox:"designercache","numberbox.html":"designercachetext",currencybox:"designercache","currencybox.html":"designercachetext",checkbox:"designercache","checkbox.html":"designercachetext",notebox:"designercache","notebox.html":"designercachetext",observable2:"designercache","observable2.html":"designercachetext",buttons:"designercache","buttons.html":"designercachetext",workflow:"designercache","workflow.html":"designercachetext",filebox:"designercache","filebox.html":"designercachetext",messagebox:"designercache","messagebox.html":"designercachetext",forminfo:"designercache","forminfo.html":"designercachetext"}},top.SPAFORM.runtime.read())},n=function(){"undefined"==typeof top.SPAFORM.project&&(top.SPAFORM.project={cache:{},editors:{},version:{sharepoint:0,server:0,localstorage:0},hasFile:function(e){var t=top.SPAFORM.project.getFile(e);return t?!0:!1},getFile:function(e){var t=top.SPAFORM.project.cache[e];return t?t.content:null},getDeltas:function(e){var t=top.SPAFORM.project.cache[e];return t?t.deltas:null},setFile:function(e,t,o){var r={};r.content=t,r.deltas=[],top.SPAFORM.project.cache[e]=r},setFiles:function(e){for(var t in e)top.SPAFORM.project.setFile(t,e[t])},getFiles:function(){var e={};for(var t in top.SPAFORM.project.cache)e[t]=top.SPAFORM.project.getFile(t);return e},setEditor:function(e,t){var o=top.SPAFORM.project;if(t){return o.editors[e]=t,void t.setValue(o.getFile(e),-1)}else delete o.editors[e]},read:function(){var e=localStorage.getItem(top.SPAFORM.list.id);top.SPAFORM.project.cache=e?JSON.parse(e):{}},write:function(){localStorage.setItem(top.SPAFORM.list.id,JSON.stringify(top.SPAFORM.project.cache))},clear:function(){var e=top.SPAFORM.project;for(var t in e.editors)e.editors[t].codepanel&&e.editors[t].codepanel.close();e.editors={},e.cache={},delete localStorage[top.SPAFORM.list.id]}},top.SPAFORM.project.read())},i=function(){var e="Design"==top.getUrlParameter("DisplayMode")?!0:!1;e&&(top.runtimecache=!0,top.projectcache=!0)},s=function(){var o={},r="Design"==top.getUrlParameter("DisplayMode")?!0:!1,n=location.pathname;top.SPAFORM.list.name=n.substring(n.indexOf("/Lists/")+7,n.lastIndexOf("/"));var i=_spPageContextInfo.webAbsoluteUrl+"/Lists/"+top.SPAFORM.list.name+"/Form/",s=i+"Design";o.baseUrl=s,o.map={"*":{css:"../Runtime/css"}},o.paths=e,o.paths.project="../Runtime/model.min",console.log("TEMPORARY PATCH: startup-prod.js - to fix validation groups issue with buttons.js"),t.forEach(function(e){o.paths[e.Require.name]=e.Require.path}),o.urlArgs="v="+top.SPAFORM.productVersion,requirejs.config(o),requirejs(["form-loader2","cache"],function(e){function t(e){var t=document.createDocumentFragment(),o=document.createElement("div");for(o.innerHTML=e;o.firstChild;)t.appendChild(o.firstChild);return t}if(console.log("offset: +"+(Date.now()-top.startTime)+" - startup-prod.js: loaded Runtime/source/form-loader2.js"),e&&e(),top.SPAFORM.list.title)requirejs(["form-loader-proxy","jquery"],function(e){e&&e()});else{var o=r?"":"&Runtime=true",i=r?"&DisplayMode=Design":"",s=top.getUrlParameter("ID"),a=s?"&ID="+s:"",m=_spPageContextInfo.webAbsoluteUrl.substring(0,_spPageContextInfo.webAbsoluteUrl.indexOf(_spPageContextInfo.webServerRelativeUrl)),l=m+n.substring(0,n.lastIndexOf("/"))+"/Form/Runtime/model.proxy.aspx?List="+top.SPAFORM.list.name+a+o+i,d="<iframe id='model-proxy' src='"+l+"' style='width:10;height:10;border:0; border:none; display:none;' />",u=t(d);document.body.insertBefore(u,document.body.childNodes[0]),console.log("offset: +"+(Date.now()-top.startTime)+" - startup-prod.js: --> created model-proxy iframe")}});var a={};return a.requireConfig=o,a.registeredComponents=t,a.listName=top.SPAFORM.list.name,a.runtime=!1,a.version=top.SPAFORM.productVersion,a};o(),r(),n(),i();var a=top.SPAFORM.runtime;return a.setProductVersion(top.productversion),s}),define("text",["module"],function(e){"use strict";var t,o,r,n,i,s=["Msxml2.XMLHTTP","Microsoft.XMLHTTP","Msxml2.XMLHTTP.4.0"],a=/^\s*<\?xml(\s)+version=[\'\"](\d)*.(\d)*[\'\"](\s)*\?>/im,m=/<body[^>]*>\s*([\s\S]+)\s*<\/body>/im,l="undefined"!=typeof location&&location.href,d=l&&location.protocol&&location.protocol.replace(/\:/,""),u=l&&location.hostname,c=l&&(location.port||void 0),p={},f=e.config&&e.config()||{};return t={version:"2.0.14",strip:function(e){if(e){e=e.replace(a,"");var t=e.match(m);t&&(e=t[1])}else e="";return e},jsEscape:function(e){return e.replace(/(['\\])/g,"\\$1").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r").replace(/[\u2028]/g,"\\u2028").replace(/[\u2029]/g,"\\u2029")},createXhr:f.createXhr||function(){var e,t,o;if("undefined"!=typeof XMLHttpRequest)return new XMLHttpRequest;if("undefined"!=typeof ActiveXObject)for(t=0;3>t;t+=1){o=s[t];try{e=new ActiveXObject(o)}catch(r){}if(e){s=[o];break}}return e},parseName:function(e){var t,o,r,n=!1,i=e.lastIndexOf("."),s=0===e.indexOf("./")||0===e.indexOf("../");return-1!==i&&(!s||i>1)?(t=e.substring(0,i),o=e.substring(i+1)):t=e,r=o||t,i=r.indexOf("!"),-1!==i&&(n="strip"===r.substring(i+1),r=r.substring(0,i),o?o=r:t=r),{moduleName:t,ext:o,strip:n}},xdRegExp:/^((\w+)\:)?\/\/([^\/\\]+)/,useXhr:function(e,o,r,n){var i,s,a,m=t.xdRegExp.exec(e);return m?(i=m[2],s=m[3],s=s.split(":"),a=s[1],s=s[0],!(i&&i!==o||s&&s.toLowerCase()!==r.toLowerCase()||(a||s)&&a!==n)):!0},finishLoad:function(e,o,r,n){r=o?t.strip(r):r,f.isBuild&&(p[e]=r),n(r)},load:function(e,o,r,n){if(n&&n.isBuild&&!n.inlineText)return void r();f.isBuild=n&&n.isBuild;var i=t.parseName(e),s=i.moduleName+(i.ext?"."+i.ext:""),a=o.toUrl(s),m=f.useXhr||t.useXhr;return 0===a.indexOf("empty:")?void r():void(!l||m(a,d,u,c)?t.get(a,function(o){t.finishLoad(e,i.strip,o,r)},function(e){r.error&&r.error(e)}):o([s],function(e){t.finishLoad(i.moduleName+"."+i.ext,i.strip,e,r)}))},write:function(e,o,r,n){if(p.hasOwnProperty(o)){var i=t.jsEscape(p[o]);r.asModule(e+"!"+o,"define(function () { return '"+i+"';});\n")}},writeFile:function(e,o,r,n,i){var s=t.parseName(o),a=s.ext?"."+s.ext:"",m=s.moduleName+a,l=r.toUrl(s.moduleName+a)+".js";t.load(m,r,function(o){var r=function(e){return n(l,e)};r.asModule=function(e,t){return n.asModule(e,l,t)},t.write(e,m,r,i)},i)}},"node"===f.env||!f.env&&"undefined"!=typeof process&&process.versions&&process.versions.node&&!process.versions["node-webkit"]&&!process.versions["atom-shell"]?(o=require.nodeRequire("fs"),t.get=function(e,t,r){try{var n=o.readFileSync(e,"utf8");"\ufeff"===n[0]&&(n=n.substring(1)),t(n)}catch(i){r&&r(i)}}):"xhr"===f.env||!f.env&&t.createXhr()?t.get=function(e,o,r,n){var i,s=t.createXhr();if(s.open("GET",e,!0),n)for(i in n)n.hasOwnProperty(i)&&s.setRequestHeader(i.toLowerCase(),n[i]);f.onXhr&&f.onXhr(s,e),s.onreadystatechange=function(t){var n,i;4===s.readyState&&(n=s.status||0,n>399&&600>n?(i=new Error(e+" HTTP status: "+n),i.xhr=s,r&&r(i)):o(s.responseText),f.onXhrComplete&&f.onXhrComplete(s,e))},s.send(null)}:"rhino"===f.env||!f.env&&"undefined"!=typeof Packages&&"undefined"!=typeof java?t.get=function(e,t){var o,r,n="utf-8",i=new java.io.File(e),s=java.lang.System.getProperty("line.separator"),a=new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(i),n)),m="";try{for(o=new java.lang.StringBuffer,r=a.readLine(),r&&r.length()&&65279===r.charAt(0)&&(r=r.substring(1)),null!==r&&o.append(r);null!==(r=a.readLine());)o.append(s),o.append(r);m=String(o.toString())}finally{a.close()}t(m)}:("xpconnect"===f.env||!f.env&&"undefined"!=typeof Components&&Components.classes&&Components.interfaces)&&(r=Components.classes,n=Components.interfaces,Components.utils["import"]("resource://gre/modules/FileUtils.jsm"),i="@mozilla.org/windows-registry-key;1"in r,t.get=function(e,t){var o,s,a,m={};i&&(e=e.replace(/\//g,"\\")),a=new FileUtils.File(e);try{o=r["@mozilla.org/network/file-input-stream;1"].createInstance(n.nsIFileInputStream),o.init(a,1,0,!1),s=r["@mozilla.org/intl/converter-input-stream;1"].createInstance(n.nsIConverterInputStream),s.init(o,"utf-8",o.available(),n.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER),s.readString(o.available(),m),s.close(),o.close(),t(m.value)}catch(l){throw new Error((a&&a.path||"")+": "+l)}}),t}),define("text!form2.html",[],function(){return'<div data-bind="template: {name: \'form-template\'}" id="form-container"></div>\r\n<div id="templatesblock">\r\n    <script type="text/html" id="form-template">\r\n        <component-form></component-form>\r\n    </script>\r\n</div>\r\n'}),define("text!../Runtime/knockout.validation.min.css",[],function(){return"/* ko.validation */\r\n.validationMessage {\r\n	color: red !important;\r\n	font-size: 11px !important;\r\n}\r\ninput.validationElement {\r\n	border: 1px solid #cc0000 !important;\r\n}\r\n/*overrides fabric.components.css to support dropdown validation*/\r\n.ms-Dropdown:hover .ms-Dropdown-title.validationElement,\r\n.ms-Dropdown:focus .ms-Dropdown-title.validationElement,\r\n.ms-Dropdown:active .ms-Dropdown-title.validationElement {\r\n  border-color: #cc0000;\r\n}\r\n.ms-Dropdown-title.validationElement{\r\n	border: 1px solid #cc0000;\r\n}\r\n/*validation box for radio or check box groups*/\r\n.validationBox{\r\n	padding-left: 8px;\r\n}\r\n.validationBox.validationElement{\r\n	border: 1px solid #cc0000;\r\n}\r\n/* dropdown icon offset when validation message is visible*/\r\n.ms-Dropdown-caretDown.validationElement{\r\n	bottom: 28px !important;\r\n}\r\n/* datepicker icon offset when validation message is visible*/\r\n.ms-DatePicker-event.validationElement{\r\n	bottom: 24px !important;\r\n}\r\n/* filepicker*/\r\n.ms-FilePicker-dialog {\r\n	right: 15px;\r\n	bottom: 18px !important;\r\n}\r\n.ms-FilePicker-dialog.validationElement{\r\n	bottom: 36px !important;\r\n	right: 15px !important;\r\n}\r\n/* peoplepicker*/\r\n/*\r\n.ms-PeoplePicker-searchBox {\r\n	display: none;\r\n}\r\n\r\n.ms-PeoplePicker-searchBox.is-active {\r\n	display: block !important;\r\n}\r\n*/\r\n/**/\r\n.ms-PeoplePicker-results.is-empty {\r\n	display: none !important;\r\n}\r\n.ms-PeoplePicker.validationElement{\r\n	border: 1px solid #cc0000;\r\n}\r\n.ms-PeoplePicker-searchBox.is-disabled {\r\n	border-bottom: none !important;\r\n}\r\n"}),define("form2",["knockout","text!form2.html","text!./../Runtime/knockout.validation.min.css","validation"],function(e,t,o){function r(t){var r=this;e.bindingHandlers.enterkey={init:function(e,t,o,r){t();$(e).keypress(function(e){var t=e.which?e.which:e.keyCode;if(13===t){for(var o=$(".is-formfield"),r=0;r<o.length;r++)o[r]==this&&r+1<o.length&&$(o[r+1]).focus();return!1}return!0})}},e.bindingHandlers.$init={init:function(e,t,o,r,n){r.$init&&setTimeout(function(){r.$init(e,t,o,r,n)},50)}},e.extenders.listItem=function(e,t){return r.$column(t,e())},e.extenders.form=function(t,o){switch(o){case"runtime":return e.computed(function(){return r});case"context":return e.computed(function(){return r.$parentBindingContext});case"parent":return e.computed(function(){return r});case"viewmodel":return e.computed(function(){return r.$viewmodel});case"readonly":return e.computed(function(){return r._formReadOnly()});case"designmode":return e.computed(function(){return r._formDesignMode()});case"userpermissions":return e.computed(function(){return r.$userPermissions});default:return t}},this._formColumnValues={},this._formColumnTypes={},this._formColumns={},this._modelColumns={},this._formValidationGroups={},this._checkType=function(e){var t="test".constructor,o=[].constructor,r={}.constructor;return null===e?"null":void 0===e?"undefined":e.constructor===t?"String":e.constructor===o?"Array":e.constructor===r?"Object":"don't know"},e.extenders.validationGroup=function(t,o){var n=r,i="Object"==r._checkType(o)?o.viewmodel:n,s="Object"==r._checkType(o)?o.name:o;if(e.validation){i._formValidationGroups||(i._formValidationGroups={});var a=i._formValidationGroups[s]?i._formValidationGroups[s]():{},m="p"+Object.keys(a).length;a[m]=t,i._formValidationGroups[s]=e.validatedObservable(a)}return t},this.$validationGroup=function(t,o){var n=r,i="Object"==r._checkType(t)?t.viewmodel:n,s="Object"==r._checkType(t)?t.name:t;if(e.validation){var a=o?o:{};return i._formValidationGroups[s]||(i._formValidationGroups[s]=e.validatedObservable(a)),i._formValidationGroups[s]}},this.$getSchemaData=function(e){var t={};for(var o in e)if("Params"===o){var r={};for(var n in e.Params)this._checkType("Object"==e.Params)?r[n]=JSON.parse(JSON.stringify(e.Params.defaultname)):r[n]=JSON.parse(JSON.stringify(e.Params[n]));t[o]=r}else t[o]=JSON.parse(JSON.stringify(e[o]));return t},this.$getSchemaTemplate=function(e){var t={};for(var o in e)if("Params"===o){var r={};for(var n in e.Params)this._checkType("Object"==e.Params)&&(r[n]=JSON.parse(JSON.stringify(e.Params.defaultname)));t[o]=r}},this.$column=function(t,o,n){var i="",s="";return"Object"==r._checkType(t)?(i=t.internalName,s=t.typeName):i=t,r._modelColumns[i]="",console.log("offset: +"+(Date.now()-top.startTime)+" - form2.js this.$column() internalName: "+i),o||(o=""),void 0===r._formColumnValues[i]&&(r._formColumnValues[i]=e.observable(o)),r.__formDataResults&&r.__formDataResults.internalName&&r._formColumnValues[i](r.__formDataResults[i]),r.$viewmodel&&(r.$viewmodel[i]=r._formColumnValues[i]),r._formColumnValues[i]},this.$userPermissions=new SP.BasePermissions,this.$viewmodel=null,this._formWebAbsoluteUrl="",this._formVersion="v1.0.0.0",this._formStates={DRAFT:"Draft",SUBMITTED:"Submitted",PROCESSING:"Processing",COMPLETED:"Completed",CANCELLED:"Cancelled",APPROVED:"Approved",REJECTED:"Rejected"},this._formModerationModeLevel={DISABLED:"Disabled",SUBMIT:"Submit",DRAFT:"Draft"},this._formUniqueIDMethodType={PROPERTYBAG:"PropertyBag",COUNTER:"Counter"},this._formSettings={ModerationMode:"Disabled",UniqueIDMethod:"Counter",enableSaveUpdateDeleteButtonOnForms:!1,enableCancelButtonOnSubmittedOrProcessingForms:!0,enableDeleteButtonOnApprovedForms:!0,buttonClickStatusMessageText:""},this._formNew=e.observable(!0),this._formLoaded=e.observable(!1),this._formReady=e.observable(!1),this.mwp_FormID=e.observable("").extend({listItem:"mwp_FormID"}),this.mwp_FormType=e.observable("").extend({listItem:"mwp_FormType"
}),this.mwp_FormState=e.observable(r._formStates.DRAFT).extend({listItem:"mwp_FormState"}),this._formModerationMode=e.observable("Disabled"),this._formUniqueIDMethod=e.observable("Counter"),this._formEnableModeration=e.observable(!1),this._formModerationStatus=e.observable(3),this._formModerationComments=e.observable(""),this._formAttachments=e.observableArray(),this._formDesignMode=e.observable(!1),this._formDesignMode.subscribe(function(e){top.SPAFORM&&top.SPAFORM.buffer&&(top.SPAFORM.buffer.grid=e),r.syncObservable("_formDesignMode"),r._formEnsureToolbar()}),this._formEnsureToolbar=function(){var e=this;if(e.$isSandbox){var t=$.Deferred();return t.resolve()}return e.$formEnsureToolbar(e)},this.$formEnsureToolbar=function(e){var t=$.Deferred(),o=this;return void 0===o.Toolbar?(requirejs(["toolbar"],function(e){var r={};o.Toolbar=new e.viewModel(r),top.SPAFORM.form.runtime().Toolbar=o.Toolbar,o.Toolbar.Init(o),o.$ribbon&&(o.$ribbon.Toolbar=o.Toolbar,RefreshCommandUI()),t.resolve(o.Toolbar)}),t.promise()):(top.SPAFORM.form.runtime().Toolbar=o.Toolbar,t.resolve(o.Toolbar))},this._formEditMode=e.observable(!1),this._formCanEdit=e.observable(!1),this._formCanDesign=e.observable(!1),this._formReadOnly=e.computed(function(){var e=r.mwp_FormState()==r._formStates.DRAFT,t=e&&1==r._formCanEdit()&&1==r._formEditMode();return"true"==t.toString().toLowerCase()?!1:!0}),this._formGetGuid=function(){function e(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return e()+e()+"-"+e()+"-"+e()+"-"+e()+"-"+e()+e()+e()},window.frm=this,this.$extendComponentSchema=function(e){var t=$.Deferred();return requirejs([e.Require.name],function(o){try{var r=o.viewModel.prototype,n=void 0==r.schema?{}:r.schema,i=void 0==n.Params?{}:n.Params,s=void 0==n.Connections?{}:n.Connections;s.ListItem&&(e.Connections=s),e.Params=i,n.Permalink&&(e.Permalink=n.Permalink);var a=JSON.parse(JSON.stringify(e));top.SPAFORM.components.registered[e.Require.name]=a,void 0==a.ContentTypeId&&"toolbar"!=a.Require.name&&"blank"!=a.Require.name&&"layout"!=a.Require.name&&(top.SPAFORM.components.design.push(a),(void 0===a.Connections||void 0===a.Connections.ListItem)&&top.SPAFORM.components.panel().push(a)),top.SPAFORM.$registeredSchemas[e.Require.name.toLowerCase()]=a}catch(m){console.log(m.message)}t.resolve()},function(e){console.log("$extendComponentSchema2 ERROR = "+e)}),t.promise()},this.$registerComponents=function(t,o){var r=$.Deferred(),n=this,i=top.SPAFORM.components;i.registered={},i.panel.removeAll(),i.design.removeAll();var s=[],a=top.SPAFORM.form,m="Design"==top.getUrlParameter("DisplayMode")?!0:!1;return t.forEach(function(t,o){m&&s.push(n.$extendComponentSchema(t)),t.Markup&&t.Markup.tag&&(a.startupComponentSchema&&t.Markup.tag==a.startupComponentSchema.Markup.tag?(e.components.isRegistered("component-form")&&e.components.unregister("component-form"),e.components.register("component-form",{require:t.Require.name})):0==e.components.isRegistered(t.Markup.tag)&&e.components.register(t.Markup.tag,{require:t.Require.name}))}),$.when.apply($,s).done(function(){r.resolve()}),r.promise()},this.$getColumnsFromTemplate=function(t){var o=this,r="Design"==top.getUrlParameter("DisplayMode")?!0:!1;if(!r)return console.log("offset: +"+(Date.now()-top.startTime)+" - form2.js $getColumnsFromTemplate - bypass"),void(o._modelColumns=top.SPAFORM.form.columns);var n=e.utils.parseHtmlFragment(t),s={},a="component-observable2";for(var m in top.SPAFORM.$registeredSchemas)top.SPAFORM.$registeredSchemas[m].Connections&&top.SPAFORM.$registeredSchemas[m].Connections.ListItem&&"component-observable2"!=top.SPAFORM.$registeredSchemas[m].Markup.tag&&(a=a+", "+top.SPAFORM.$registeredSchemas[m].Markup.tag);var l=$(n);l.find(a).each(function(){var e=$(this).attr("params").toString().split(",");for(i=0;i<e.length;i++){var t=e[i].split(":");if("'InternalName'"==t[0].trim()){var o=t[1].trim().split("'").join("").split('"').join("");s[o]="",console.log("offset: +"+(Date.now()-top.startTime)+" - form2.js $getColumnsFromTemplate column: "+o);break}}});for(var m in s)o._modelColumns[m]=s[m],top.SPAFORM.form.columns[m]=s[m]},this.$viewmodel=void 0,this.injectHelpers2CompViewModelPrototype=function(t){try{t.prototype.$form=this,t.prototype.$runtime=this,t.prototype.$viewmodel=this.$viewmodel,t.prototype.$formReadOnly=e.computed(function(){return this._formReadOnly()},this),t.prototype.$formDesignMode=e.computed(function(){return this._formDesignMode()},this),t.prototype.$readonly=e.computed(function(){return this._formReadOnly()},this),t.prototype.$designmode=e.computed(function(){return this._formDesignMode()},this),t.prototype.$column=this.$column,t.prototype.$userpermissions=this.$userPermissions}catch(o){console.log(o.message)}},this.injectColumns2LayoutViewModelPrototype=function(t){try{for(var o in top.SPAFORM.form.columns)t.prototype[o]=e.observable();this.$viewmodel=t.prototype,this.injectHelpers2CompViewModelPrototype(t),this.$readonly=e.computed(function(){return this._formReadOnly()},this),this.$designmode=e.computed(function(){return this._formDesignMode()},this)}catch(r){console.log(r.message)}},this.$formsDefaultLoader={loadTemplate:function(t,o,r){console.log("offset: +"+(Date.now()-top.startTime)+" - form2.js 3. $formsDefaultLoader loadTemplate: "+t),"component-form"==t?(window.frm.$getColumnsFromTemplate(o),e.components.defaultLoader.loadTemplate(t,o,r)):r(null)},loadViewModel:function(t,o,r){if(console.log("offset: +"+(Date.now()-top.startTime)+" - form2.js 3. $formsDefaultLoader loadViewModel: "+t),"component-form"==t)window.frm.injectColumns2LayoutViewModelPrototype(o),e.components.defaultLoader.loadViewModel(t,o,r);else{if(window.frm.injectHelpers2CompViewModelPrototype(o),0==top.SPAFORM.form.isSearchContex){var n=JSRequest.QueryString.DisplayMode;"Design"==n&&requirejs(["form2-design"],function(){console.log("offset: +"+(Date.now()-top.startTime)+"****************** form2.ensureComponentColumn****************** "),window.frm.ensureComponentColumns(o),window.frm.$formEnsureWorkflow(o)})}e.components.defaultLoader.loadViewModel(t,o,r)}}},e.components.loaders.unshift(this.$formsDefaultLoader),this.execEvent=function(e,t,o,r){if(this.$sandboxReady)if(this.$isSandbox)r.call(this,t,o);else{var n=top.SPAFORM.buffer.getActiveFrame(),i=n?n.iframeId:"model-sandbox",s=parent.document.getElementById(i).contentWindow;s.postMessage(JSON.stringify([e,t,top.SPAFORM.list.name,o]),"*")}else r.call(this,t,o)},this.syncObservable=function(e){if(this[e])if(this.$isSandbox)top.postMessage(JSON.stringify(["formSyncObservable",this[e](),top.SPAFORM.list.name,e]),"*");else if(this.$sandboxReady){var t=top.SPAFORM.buffer.getActiveFrame(),o=t?t.iframeId:"model-sandbox",r=parent.document.getElementById(o).contentWindow;r.postMessage(JSON.stringify(["formSyncObservable",this[e](),top.SPAFORM.list.name,e]),"*")}},this.formListener=function(e,t,o){switch(e){case"formInitialized":this.execEvent(e,t,o,this._formInitialized);break;case"formLoaded":this.execEvent(e,t,o,this._formLoaded2);break;case"formAttachmentsLoaded":this.execEvent(e,t,o,this._formAttachmentsLoaded);break;case"formAttachmentDeleted":this.execEvent(e,t,o,this._formAttachmentDeleted);break;case"formAttachmentUploaded":this.execEvent(e,t,o,this._formAttachmentUploaded);break;case"formAttachmentSaved":this.execEvent(e,t,o,this._formAttachmentSaved);break;case"formSaved":this.execEvent(e,t,o,this._formSaved);break;case"formDeleted":this.execEvent(e,t,o,this._formDeleted);break;case"formDesignSaved":this._formDesignSaved(t);break;case"formDesignPublished":this._formDesignPublished(t);break;case"formPeopleQueryDone":this.execEvent(e,t,o,this._formPeopleQueryDone);break;case"formLookupQueryDone":this.execEvent(e,t,o,this._formLookupQueryDone);break;case"formFieldsQueryDone":this._formFieldsQueryDone(t);break;case"formSyncObservable":this[o]&&this[o](t);break;default:return!1}};var n=this;n._formPeopleQuery=function(e){return this._d_formPeopleQuery=$.Deferred(),top.SPAFORM.list.proxy.postMessage(JSON.stringify(["formPeopleQuery",e,top.SPAFORM.list.name,""]),"*"),this._d_formPeopleQuery.promise()},n._formPeopleQueryDone=function(e){this._d_formPeopleQuery.resolve(e)},n._formLookupQuery=function(e){return this._d_formLookupQuery=$.Deferred(),top.SPAFORM.list.proxy.postMessage(JSON.stringify(["formLookupQuery",e,top.SPAFORM.list.name,""]),"*"),this._d_formLookupQuery.promise()},n._formLookupQueryDone=function(e){this._d_formLookupQuery.resolve(e)},n._formFieldsQuery=function(){return parent._d_formFieldsQuery||(parent._d_formFieldsQuery=$.Deferred(),top.SPAFORM.list.proxy.postMessage(JSON.stringify(["formFieldsQuery","",top.SPAFORM.list.name,""]),"*")),"resolved"!=parent._d_formFieldsQuery.state()?parent._d_formFieldsQuery.promise():parent._d_formFieldsQuery.resolve(parent._r_formFieldsQuery)},n._formFieldsQueryDone=function(e){parent._r_formFieldsQuery=e,parent._d_formFieldsQuery.resolve(parent._r_formFieldsQuery)},n._formDelete=function(){top.SPAFORM.list.proxy.postMessage(JSON.stringify(["formDelete",JSON.stringify(this._formGetFormData()),top.SPAFORM.list.name,top.SPAFORM.list.item.id]),"*")},n._formDeleted=function(e){top.SPAFORM.list.item.id=void 0,top.SPAFORM.form.isSearchContex?(this._formInitFormData(),this._formNew(!0),void 0!=this._formStatusMessage&&this._formStatusMessage()):this._formRedirectToList()},n._formSave=function(){var e=this;this._formSave2().done(function(){void 0!=e._formStatusMessage&&e._formStatusMessage(),e._closeOnButtonClick&&e._formRedirectToList()})},n._formInitFormData=function(){this.mwp_FormType(""),this.mwp_FormID(""),this.mwp_FormState(this._formStates.DRAFT)},n._formSetFormData=function(e){this._formNew(!1)},n._hexify=function(e){var t=e.split(" ").join("_x0020_");return t=t.split("~").join("_x007e_"),t=t.split("!").join("_x0021_"),t=t.split("@").join("_x0040_"),t=t.split("#").join("_x0023_"),t=t.split("$").join("_x0024_"),t=t.split("%").join("_x0025_"),t=t.split("^").join("_x005e_"),t=t.split("&").join("_x0026_"),t=t.split("*").join("_x002a_"),t=t.split("(").join("_x0028_"),t=t.split(")").join("_x0029_"),t=t.split("+").join("_x002b_"),t=t.split("-").join("_x002d_"),t=t.split("=").join("_x003d_"),t=t.split("{").join("_x007b_"),t=t.split("}").join("_x002d_"),t=t.split(":").join("_x003a_"),t=t.split('"').join("_x0022_"),t=t.split("|").join("_x007c_"),t=t.split(";").join("_x003b_"),t=t.split("'").join("_x0027_"),t=t.split("<").join("_x003c_"),t=t.split(">").join("_x003e_"),t=t.split("?").join("_x003f_"),t=t.split(",").join("_x002c_"),t=t.split(".").join("_x002e_")},n._listItemType=function(){var e=top.SPAFORM.list.name;return"SP.Data."+e.charAt(0).toUpperCase()+e.slice(1)+"ListItem"},n._formGetFormData=function(){var e={__metadata:{type:this._listItemType()}};void 0!=this.callback_GetFormData&&(e=this.callback_GetFormData());for(var t in this._formColumnValues)if(this._formColumnValues.hasOwnProperty(t)&&"mwp_ApprovalWorkflowJSON"!=t){var o=this._formColumnValues[t]();switch(this._formColumnTypes[t]){case"LookupMulti":break;case"UserMulti":var r=[],n=[];o.results.forEach(function(e){r.push(e.Id),n.push(e.Key)}),e[t]={__metadata:{filedtype:"UserMulti"},intname:t+"Id",keys:n,value:{__metadata:{type:"Collection(Edm.Int32)"},results:r}};break;case"User":e[t]={__metadata:{filedtype:"User"},intname:t+"Id",value:o.results.length>0?o.results[0].Id:-1};break;case"Choice":o&&(e[t]=o);break;case"MultiChoice":o.results&&(e[t]={__metadata:{type:"Collection(Edm.String)"},results:o.results});break;case"Lookup":e[t]={__metadata:{filedtype:"Lookup"},intname:t+"Id",value:o?o.Id:-1};break;case"DateTime":isNaN(Date.parse(o))||(e[t]=o);break;case"Currency":isNaN(parseFloat(o))||(e[t]=o);break;case"Number":isNaN(parseFloat(o))||(e[t]=o);break;case"Boolean":e[t]=o?!0:!1;break;case"Attachments":e[t]=o;break;default:e[t]=o}}return e},n._formSave2=function(){if(this._d_formSave=$.Deferred(),!this._formValidate())return this.mwp_FormState()==this._formStates.SUBMITTED&&(this.mwp_FormState(this._formStates.DRAFT),this._formModerationStatus(3)),this._d_formSave.reject();var e=this._formGetFormData();return this._formEnableModeration()&&this._formModerationMode()==this._formModerationModeLevel.DRAFT&&(e.OData__ModerationStatus=this._formModerationStatus(),e.OData__ModerationComments=this._formModerationComments()),this._formNew()?(e.ContentTypeId=top.SPAFORM.list.contentTypeId,top.SPAFORM.list.proxy.postMessage(JSON.stringify(["formCreate",JSON.stringify(e),top.SPAFORM.list.name,this._formSettings.UniqueIDMethod]),"*")):top.SPAFORM.list.proxy.postMessage(JSON.stringify(["formUpdate",JSON.stringify(e),top.SPAFORM.list.name,top.SPAFORM.list.item.id]),"*"),this._d_formSave.promise()},n._formSaved=function(e,t){top.SPAFORM.list.item.id=t;var o=e;this._formSetFormData(o),this._formColumnValues.Attachments&&this._formColumnValues.Attachments(o.Attachments),this._formAttachments().length>0?(this._formAttachmentId=0,this._formAttachmentsSave()):this._d_formSave.resolve()},n._formRedirectToList=function(){var e=this;if(top.SPAFORM.form.isSearchContex)HP2.Close();else{if(!e.$isSandbox)return window.location=_spPageContextInfo.webAbsoluteUrl+"/Lists/"+top.SPAFORM.list.name,!0;top.SPAFORM.form.codePanel&&top.SPAFORM.form.codePanel.actionFormsCommandDesigner(!1),RefreshCommandUI()}return!1},n._formLoad=function(){return this._d_formLoad=$.Deferred(),r._formGetFields().done(function(e){top.SPAFORM.list.proxy.postMessage(JSON.stringify(["formLoad",top.SPAFORM.list.ODataRequestCached,top.SPAFORM.list.name,top.SPAFORM.list.item.id]),"*")}),this._d_formLoad.promise()},n._formLoaded2=function(e,t){top.SPAFORM.list.item.id=t,this._formEnableModeration()&&(this._formModerationStatus(e.OData__ModerationStatus),this._formModerationComments(e.OData__ModerationComments)),this._formSetFormData(e),this.__formDataResults=e;for(var o in this._formColumnValues)e.hasOwnProperty(o)&&("Attachments"!=o?this._formColumnValues[o](e[o]):this._formColumnValues[o](e[o]));this._formLoaded(!0),this._d_formLoad.resolve(e,t)},n._formAttachmentsLoad=function(){return this._d_formAttachmentsLoad=$.Deferred(),this._formAttachments().length>0?(top.SPAFORM.list.proxy.postMessage(JSON.stringify(["formAttachmentsLoad","",top.SPAFORM.list.name,top.SPAFORM.list.item.id]),"*"),this._d_formAttachmentsLoad.promise()):this._d_formAttachmentsLoad.resolve()},n._formAttachmentsLoaded=function(t,o){this.__formAttachmentsResults=t.results,e.utils.arrayForEach(this._formAttachments(),function(e){e.Init3()}),this._d_formAttachmentsLoad.resolve(t,o)},n._formInitialize=function(){top.SPAFORM.list.proxy.postMessage(JSON.stringify(["formInitialize","",top.SPAFORM.list.name,top.SPAFORM.list.item.id]),"*")},n.$validationCSS="",n.$loadCSS=function(e){var t=document.createElement("style");document.body.appendChild(t),t.innerHTML=e,n._formReady(!0)},n._formInitialized=function(e){this._formEnableModeration(e.EnableModeration),this._formEnableModeration()||this._formModerationMode(this._formModerationModeLevel.DISABLED),this._formInitButtons();var t=this._formDesignMode(),r=this;if(this._formNew()){if(0==top.SPAFORM.form.isSearchContex){var n=JSRequest.QueryString.DisplayMode,r=this;r.$isSandbox||("Design"==n||0==top.SPAFORM._formRuntime())&&setTimeout(function(){r._formEnsureToolbar().done(function(e){r.Toolbar.actionFormsCommandGrid(t)})},100)}r.$loadCSS(o)}else r._formLoad().done(function(e,t){return r._formAttachmentsLoad()}).done(function(e,n){r.$isSandbox||0==top.SPAFORM._formRuntime()&&setTimeout(function(){r._formEnsureToolbar().done(function(e){r.Toolbar.actionFormsCommandGrid(t)})},100),r.$loadCSS(o)})},n._formInitButtons=function(){var t=this;t._formModerationState=e.computed(function(){if(!t._formEnableModeration())return"Approved";switch(t._formModerationStatus()){case 0:return"Approved";case 1:return"Rejected";case 2:return"Pending";case 3:return"Draft";case 4:return"Scheduled"}})},n._formValidate=function(){return e.validation,!0},n._formAttachmentUpload=function(e){this._d_formAttachmentUpload=$.Deferred();var t=JSON.stringify(e);return top.SPAFORM.list.proxy.postMessage(JSON.stringify(["formAttachmentUpload",t,top.SPAFORM.list.name,top.SPAFORM.list.item.id]),"*"),this._d_formAttachmentUpload.promise()},n._formAttachmentUploaded=function(e,t){this._formAttachments()[t]&&this._formAttachments()[t]._uploadFile2(e),this._d_formAttachmentUpload.resolve(e,t)},n._formAttachmentDelete=function(e){return this._d_formAttachmentDelete=$.Deferred(),top.SPAFORM.list.proxy.postMessage(JSON.stringify(["formAttachmentDelete",e,top.SPAFORM.list.name,top.SPAFORM.list.item.id]),"*"),this._d_formAttachmentDelete.promise()},n._formAttachmentDeleted=function(e,t){this._d_formAttachmentDelete.resolve(e,t)},n._formAttachmentSave=function(e,t,o){var r={newFileName:e,oldFileName:t,fileContent:o};top.SPAFORM.list.proxy.postMessage(JSON.stringify(["formAttachmentSave",r,top.SPAFORM.list.name,top.SPAFORM.list.item.id]),"*")},n._formAttachmentSaved=function(e,t){this._formAttachments()[this._formAttachmentId].Init2(this._formWebAbsoluteUrl,e.ServerRelativeUrl),this._formAttachmentId++,this._formAttachmentsSave()},n._formAttachmentsSave=function(){return this._formAttachmentId<this._formAttachments().length?this._formAttachments()[this._formAttachmentId].Save()?!1:(this._formAttachmentId++,this._formAttachmentsSave()):(this._d_formSave.resolve(),!0)},n._buildODataRequest=function(e){var t=[],o=[];e.forEach(function(e){switch(n._formColumnTypes[e.InternalName]=e.TypeAsString,e.TypeAsString){case"Lookup":t.push(e.InternalName+"/"+e.LookupField),t.push(e.InternalName+"/Id"),o.push(e.InternalName+"/Id");break;case"LookupMulti":break;case"UserMulti":case"User":t.push(e.InternalName+"/Title"),t.push(e.InternalName+"/Id"),o.push(e.InternalName+"/Id");break;default:t.push(e.InternalName)}});var r="?$select="+t.join(",")+"&$expand="+o.join(",");return top.SPAFORM.list.ODataRequestCached=r,r},n._formGetFields=function(){var e=$.Deferred(),t=top.SPAFORM.list;return t.fields?e.resolve(t.fields):(n._formFieldsQuery().done(function(o){t.fields=o,n._buildODataRequest(t.fields),e.resolve(o)}),e.promise())},this._formInit=function(t,o,r,n){var i=this;if(console.log("offset: +"+(Date.now()-top.startTime)+"****************** _formInit ****************** "),this.__formDataResults=void 0,i.$isSandbox=t.isSandbox?!0:!1,i.$sandboxReady=t.sandboxReady?!0:!1,i.$isSandbox)top.SPAFORM.form.$runtime=i,top.SPAFORM.form.$design.$sandboxReady=!0;else{top.SPAFORM.form.$design=i,i.$sandboxReady||(top.SPAFORM.form.$runtime=i),top.SPAFORM.form.isSearchContex=o;var s=0==top.SPAFORM.form.isSearchContex?JSRequest.QueryString.DisplayMode:"Runtime";i.$sandboxReady="Design"!==s?!1:!0}e.validation&&e.validation.init({messagesOnModified:!1,decorateInputElement:!0,decorateElementOnModified:!1,errorsAsTitle:!0,insertMessages:!0},!0),e.types,top.SPAFORM.list.name=t.listName,top.SPAFORM.list.title=t.listTitle,top.SPAFORM.list.id=t.listId,top.SPAFORM.list.item.id=n,i._formListId=t.listId,i._formVersion=t.version,window.f_toolbar&&(i.Toolbar=window.f_toolbar),i._formListPath=t.listPath,top.SPAFORM.form.isSearchContex=o,i._formWebAbsoluteUrl=r,top.SPAFORM.form.webAbsoluteUrl=r;var s=0==top.SPAFORM.form.isSearchContex?JSRequest.QueryString.DisplayMode:"Runtime",a="Design"!==s?!0:!1;if(t.runtime=a,i.$userPermissions.fromJson(t.userPermissions),o){var m=!0;i._formEditMode(m),top.SPAFORM._formRuntime(!0)}else{JSRequest.EnsureSetup();var l=JSRequest.FileName,m="EditForm.aspx"==l||"NewForm.aspx"==l||"model.sandbox.aspx"==l;i._formEditMode(m),top.SPAFORM._formRuntime?top.SPAFORM._formRuntime(t.runtime):top.SPAFORM._formRuntime=e.observable(t.runtime)}i._formCanEdit(t.permissions.canEdit),i._formCanDesign(t.permissions.canDesign),i.$formConfig=t;var d="Design"==top.getUrlParameter("DisplayMode")?!0:!1;d&&!i.$isSandbox?requirejs(["form2-project"],function(){i.openDesignProject(t)}):i.openRuntimeProject(t)},this.checkConfig=function(e){var t=top.SPAFORM.form,o=top.SPAFORM.list,r=e.components&&e.components.length>0?!0:!1;if(r){var n=!1;if(o.contentTypeId){var s=null;for(i=0;i<e.components.length;i++){var a=e.components[i];a.hasOwnProperty("ContentTypeId")&&(null==a.ContentTypeId&&(s=a),a.ContentTypeId==o.contentTypeId&&(n=!0,e.startupComponent=a,t.startupComponentSchema=a))}!n&&a&&(n=!0,e.startupComponent=a,t.startupComponentSchema=a)}else for(i=0;i<e.components.length;i++){var a=e.components[i];a&&a.hasOwnProperty("ContentTypeId")&&(n||(n=!0,e.startupComponent=a,t.startupComponentSchema=a))}}return r&&n?e:null},this.openRuntimeProject=function(e){var t=this;$("#projectError").html("");var o=t.$isSandbox?"cache!project":"project";console.log("offset: +"+(Date.now()-top.startTime)+"****************** form2.openRuntimeProject ****************** "),requirejs([o],function(o){if(!o)return void t._loadRibbonsOnError(e);try{var r=JSON.parse(o);if(null==(r=t.checkConfig(r)))return e.noviewmodel=!0,void t._loadRibbonsOnError(e);top.SPAFORM.form||(top.SPAFORM.form={}),top.SPAFORM.form.columns=r.columns,r.requireConfig={},r.requireConfig.paths={};var n="Design"==top.getUrlParameter("DisplayMode")?!0:!1;(t.$isSandbox||!t.$isSandbox&&!n)&&(console.log("ATTENTION: NEED TO ADDRESS FOR PRODUCTION"),e.customComponents=[],r.components.forEach(function(t){r.requireConfig.paths[t.Require.name]=t.Require.path;var o=JSON.parse(JSON.stringify(t));e.registeredComponents.push(o),e.customComponents.push(o)})),requirejs.config(r.requireConfig),t.$isSandbox?requirejs(["form2-design"],function(){t._formInit4(e,top.SPAFORM.form.isSearchContext,top.SPAFORM.form.webAbsoluteUrl,top.SPAFORM.list.item.id,function(){t._formInit2()})}):t._loadRuntimeRibbons(e,r).done(function(){t._formInit4(e,top.SPAFORM.form.isSearchContext,top.SPAFORM.form.webAbsoluteUrl,top.SPAFORM.list.item.id,function(){t._formInit2()})})}catch(i){t._projectError(e,i),t._loadRibbons(e)}},function(o){t._loadRibbonsOnError(e)})},this._loadRibbonsOnError=function(e){var t=this;this._projectError(e),e.error=!0,this._loadRibbons(e).done(function(){delete e.error,setTimeout(function(){t._formEnsureToolbar().done(function(o){t._formInit4(e,top.SPAFORM.form.isSearchContext,top.SPAFORM.form.webAbsoluteUrl,top.SPAFORM.list.item.id,null),RefreshCommandUI()})},100)})},this._projectError=function(e,t){var o=this,r=top.SPAFORM.form,n="Design"==top.getUrlParameter("DisplayMode")?!0:!1;if(t)r.errorPanel(!0,"Form/Design/project.js - "+t);else if(e&&e.noviewmodel&&n)top.openComponents=function(){o.Toolbar.actionFormsCommandComponents()},r.errorPanel(!0,"				<div style='padding-left:50px;'>				<br>				<br>				<h1>Project has no layout for this content type,</h1>				<h1><a href='javascript:void(0);' onclick='top.openComponents();'>add layout component for content type</a></h1>				<br>				</div>");else if(e&&e.noviewmodel&&!n){var i=window.location.href+"&DisplayMode=Design";r.errorPanel(!0,"				<img src='Form/Runtime/365x160x160.png' height='160' width='160'>				<br>				<br>				<h1>OOPS! - no form available for this content type.</h1>				<br>				<h1>Use <a href='"+i+"'><b>SPA Form Designer</b></a> to update your project.</h1>				")}else if(e&&e.runtime){var i=window.location.href+"&DisplayMode=Design";r.errorPanel(!0,"				<img src='Form/Runtime/365x160x160.png' height='160' width='160'>				<br>				<br>				<h1>OOPS! - no published form project.</h1>				<br>				<h1>Use <a href='"+i+"'><b>SPA Form Designer</b></a> to publish your project.</h1>				")}else top.openProject=function(){o.Toolbar.panelOpenGITPanel()},r.errorPanel(!0,"				<div style='padding-left:50px;'>				<br>				<br>				<h1>SPA Form project was not setup yet,</h1>				<h1><a href='javascript:void(0);' onclick='top.openProject();'>create new project or import from GitHub.</a></h1>				<br>				</div>");requirejs(["form2-storage"],function(){o.readListInfo().done(function(){})})},this._loadRuntimeRibbons=function(e,t){var o=$.Deferred();return 0!=top.SPAFORM.form.isSearchContex?o.resolve():(requirejs(["ribbonedit"],function(e){r.$ribbonEdit=e,e.$form=r,o.resolve()}),o.promise())},this._loadRibbons=function(e,t){var o=$.Deferred();if(0==top.SPAFORM.form.isSearchContex){var n=JSRequest.QueryString.DisplayMode;"Design"!=n?requirejs(["ribbonedit"],function(e){r.$ribbonEdit=e,e.$form=r,o.resolve()}):requirejs(["ribbon","form2-design"],function(t){r.$getCookie(),r.$ribbon=t,t.$form=r,e.error?top.SPAFORM.form.errorPanel():r.$isSandbox||r.getProjectFiles().done(function(){console.log("offset: +"+(Date.now()-top.startTime)+" - form2.js - project files loaded"),r._formEnsureToolbar().done(function(e){})}),o.resolve()},function(e){return o.resolve()})}else o.resolve();return o.promise()},this.fnGitRepoName=function(){return top.SPAFORM.list.name.replace("%","-")},this._formInit4=function(t,o,r,n,i){this.sourceControl={gitUserName:"",gitUserPassword:"",gitOrganization:"",gitRepoName:this.fnGitRepoName(),gitConnected:!1,selectedDeviceNumber:0,selectedDeviceDisplayName:"Desktop"},t.sourceControl&&(this.sourceControl=t.sourceControl,this.sourceControl.gitRepoName=this.fnGitRepoName()),"undefined"!=typeof n&&(top.SPAFORM.list.item.id=n,this._formNew(!1)),e.components.unregister("component-form"),console.log("offset: +"+(Date.now()-top.startTime)+"****************** _formInit4 $registerComponents ****************** ");var s=top.SPAFORM.runtime;s&&s.setEnableWrite(!1),top.SPAFORM.components.custom(t.customComponents),this.$registerComponents(t.registeredComponents,t.customComponents).done(function(){i&&i()})},this.$ribbonEdit=void 0,this._formInit2=function(){e.components.clearCachedDefinition("component-form"),e.options.deferUpdates=!0,this._formLoaded(!0),this._formInitialize();try{console.log("offset: +"+(Date.now()-top.startTime)+"****************** _formInit2 applyBindings ****************** ");var t=top.SPAFORM.runtime;if(t&&t.setEnableWrite(!0),e.applyBindings(this,document.getElementById("form-container")),top.ResizeSensor){var o=document.getElementById("form-container"),r=top.SPAFORM.buffer.getActiveFrame(),n=r?r.iframeId:"model-sandbox";new top.ResizeSensor(o,function(){var e=top.document.getElementById(n);e&&(e.style.height=o.clientHeight+"px")})}}catch(i){console.log("error on applyBindings: "+i)}this._formNew()&&this._formGetFields()}}return top.SPAFORM._formRuntime=e.observable(!1),"undefined"==typeof top.SPAFORM.components&&(top.SPAFORM.components={registered:{},custom:e.observableArray(),design:e.observableArray(),panel:e.observableArray()}),{viewModel:r,template:t}});