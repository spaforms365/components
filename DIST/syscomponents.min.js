/*1.0.2.5*/ /**
 * @license text 2.0.14 Copyright jQuery Foundation and other contributors.
 * Released under MIT license, http://github.com/requirejs/text/LICENSE
 */

define("text",["module"],function(e){"use strict";var t,n,i,o,a,r=["Msxml2.XMLHTTP","Microsoft.XMLHTTP","Msxml2.XMLHTTP.4.0"],s=/^\s*<\?xml(\s)+version=[\'\"](\d)*.(\d)*[\'\"](\s)*\?>/im,l=/<body[^>]*>\s*([\s\S]+)\s*<\/body>/im,m="undefined"!=typeof location&&location.href,d=m&&location.protocol&&location.protocol.replace(/\:/,""),c=m&&location.hostname,u=m&&(location.port||void 0),f={},p=e.config&&e.config()||{};return t={version:"2.0.14",strip:function(e){if(e){e=e.replace(s,"");var t=e.match(l);t&&(e=t[1])}else e="";return e},jsEscape:function(e){return e.replace(/(['\\])/g,"\\$1").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r").replace(/[\u2028]/g,"\\u2028").replace(/[\u2029]/g,"\\u2029")},createXhr:p.createXhr||function(){var e,t,n;if("undefined"!=typeof XMLHttpRequest)return new XMLHttpRequest;if("undefined"!=typeof ActiveXObject)for(t=0;3>t;t+=1){n=r[t];try{e=new ActiveXObject(n)}catch(i){}if(e){r=[n];break}}return e},parseName:function(e){var t,n,i,o=!1,a=e.lastIndexOf("."),r=0===e.indexOf("./")||0===e.indexOf("../");return-1!==a&&(!r||a>1)?(t=e.substring(0,a),n=e.substring(a+1)):t=e,i=n||t,a=i.indexOf("!"),-1!==a&&(o="strip"===i.substring(a+1),i=i.substring(0,a),n?n=i:t=i),{moduleName:t,ext:n,strip:o}},xdRegExp:/^((\w+)\:)?\/\/([^\/\\]+)/,useXhr:function(e,n,i,o){var a,r,s,l=t.xdRegExp.exec(e);return l?(a=l[2],r=l[3],r=r.split(":"),s=r[1],r=r[0],!(a&&a!==n||r&&r.toLowerCase()!==i.toLowerCase()||(s||r)&&s!==o)):!0},finishLoad:function(e,n,i,o){i=n?t.strip(i):i,p.isBuild&&(f[e]=i),o(i)},load:function(e,n,i,o){if(o&&o.isBuild&&!o.inlineText)return void i();p.isBuild=o&&o.isBuild;var a=t.parseName(e),r=a.moduleName+(a.ext?"."+a.ext:""),s=n.toUrl(r),l=p.useXhr||t.useXhr;return 0===s.indexOf("empty:")?void i():void(!m||l(s,d,c,u)?t.get(s,function(n){t.finishLoad(e,a.strip,n,i)},function(e){i.error&&i.error(e)}):n([r],function(e){t.finishLoad(a.moduleName+"."+a.ext,a.strip,e,i)}))},write:function(e,n,i,o){if(f.hasOwnProperty(n)){var a=t.jsEscape(f[n]);i.asModule(e+"!"+n,"define(function () { return '"+a+"';});\n")}},writeFile:function(e,n,i,o,a){var r=t.parseName(n),s=r.ext?"."+r.ext:"",l=r.moduleName+s,m=i.toUrl(r.moduleName+s)+".js";t.load(l,i,function(n){var i=function(e){return o(m,e)};i.asModule=function(e,t){return o.asModule(e,m,t)},t.write(e,l,i,a)},a)}},"node"===p.env||!p.env&&"undefined"!=typeof process&&process.versions&&process.versions.node&&!process.versions["node-webkit"]&&!process.versions["atom-shell"]?(n=require.nodeRequire("fs"),t.get=function(e,t,i){try{var o=n.readFileSync(e,"utf8");"\ufeff"===o[0]&&(o=o.substring(1)),t(o)}catch(a){i&&i(a)}}):"xhr"===p.env||!p.env&&t.createXhr()?t.get=function(e,n,i,o){var a,r=t.createXhr();if(r.open("GET",e,!0),o)for(a in o)o.hasOwnProperty(a)&&r.setRequestHeader(a.toLowerCase(),o[a]);p.onXhr&&p.onXhr(r,e),r.onreadystatechange=function(t){var o,a;4===r.readyState&&(o=r.status||0,o>399&&600>o?(a=new Error(e+" HTTP status: "+o),a.xhr=r,i&&i(a)):n(r.responseText),p.onXhrComplete&&p.onXhrComplete(r,e))},r.send(null)}:"rhino"===p.env||!p.env&&"undefined"!=typeof Packages&&"undefined"!=typeof java?t.get=function(e,t){var n,i,o="utf-8",a=new java.io.File(e),r=java.lang.System.getProperty("line.separator"),s=new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(a),o)),l="";try{for(n=new java.lang.StringBuffer,i=s.readLine(),i&&i.length()&&65279===i.charAt(0)&&(i=i.substring(1)),null!==i&&n.append(i);null!==(i=s.readLine());)n.append(r),n.append(i);l=String(n.toString())}finally{s.close()}t(l)}:("xpconnect"===p.env||!p.env&&"undefined"!=typeof Components&&Components.classes&&Components.interfaces)&&(i=Components.classes,o=Components.interfaces,Components.utils["import"]("resource://gre/modules/FileUtils.jsm"),a="@mozilla.org/windows-registry-key;1"in i,t.get=function(e,t){var n,r,s,l={};a&&(e=e.replace(/\//g,"\\")),s=new FileUtils.File(e);try{n=i["@mozilla.org/network/file-input-stream;1"].createInstance(o.nsIFileInputStream),n.init(s,1,0,!1),r=i["@mozilla.org/intl/converter-input-stream;1"].createInstance(o.nsIConverterInputStream),r.init(n,"utf-8",n.available(),o.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER),r.readString(n.available(),l),r.close(),n.close(),t(l.value)}catch(m){throw new Error((s&&s.path||"")+": "+m)}}),t}),define("text!buttons.html",[],function(){return'<div class="ms-Table" data-bind="initbuttons: {}, visible: enableUI, css: {\'ge-designmode\': form()._formDesignMode}">\r\n	<div class="ms-Table-row">\r\n		<span class="ms-Table-cell" style="float:left; width:80px;">\r\n			<button data-bind="visible: _formButtonSubmitEnabled, click: _formButtonSubmitClick" class="ms-Button ms-Button--primary"><span class="ms-Button-label">Submit</span></button>\r\n			<button data-bind="visible: _formButtonCancelEnabled, click: _formButtonCancelClick" class="ms-Button ms-Button--primary"><span class="ms-Button-label">Cancel</span></button>\r\n		</span>\r\n		<span class="ms-Table-cell" style="float:left; width:80px;"><button data-bind="visible: _formButtonDeleteEnabled, click: _formButtonDeleteClick" class="ms-Button ms-Button--primary"><span class="ms-Button-label">Delete</span></button></span>\r\n		<span class="ms-Table-cell" style="float:left; width:80px;">\r\n			<!-- ko if:$root._formNew -->\r\n			<button data-bind="visible: _formButtonSaveEnabled, click: _formButtonSaveClick" class="ms-Button ms-Button--primary"><span class="ms-Button-label">Save</span></button>\r\n			<!-- /ko -->\r\n			<!-- ko ifnot:$root._formNew -->\r\n			<button data-bind="visible: _formButtonSaveEnabled, click: _formButtonSaveClick" class="ms-Button ms-Button--primary"><span class="ms-Button-label">Update</span></button>\r\n			<!-- /ko -->\r\n		</span>\r\n		<span class="ms-Table-cell" style="float:left; width:80px;"><button data-bind="visible: _formButtonCloseEnabled, click: _formButtonCloseClick" class="ms-Button ms-Button--primary"><span class="ms-Button-label">Close</span></button></span>\r\n	</div>\r\n</div>\r\n'}),define("buttons",["text!./buttons.html"],function(e){function t(e){var t=this;t.params=e,this.formID=ko.observable("").extend({listItem:"mwp_FormID"}),this.formType=ko.observable("").extend({listItem:"mwp_FormType"}),this.formState=ko.observable("Draft").extend({listItem:"mwp_FormState"}),this.runtime=ko.observable().extend({form:"runtime"}),this.readonly=ko.observable().extend({form:"readonly"}),this.designmode=ko.observable().extend({form:"designmode"}),this.designmode()&&(console.log("ensure columns"),this.runtime()._formEnsureColumns(this.schema.ListColumns).done(function(){console.log("columns ensured")})),t.form=ko.observable(),t.hideUI=e.hidden?e.hidden:!1,t.enableSaveUpdateDeleteButtonOnForms=void 0!==e.save?e.save:!1,t.enableCancelButtonOnSubmittedOrProcessingForms=void 0!==e.cancel?e.cancel:!0,t.enableDeleteButtonOnApprovedForms=void 0!=e.deletesubmitted?e.deletesubmitted:!0,t.enableUI=ko.pureComputed(function(){return t.designmode()?!0:t.hideUI?!1:!0}),t._formButtonSubmitClick=function(){t.formState(t.form()._formStates.SUBMITTED),t.runtime()._formModerationStatus(2),t.runtime()._formSave()},t._formButtonSubmitEnabled=ko.pureComputed(function(){if(t.runtime()){var e=0==t.readonly();return"true"==e.toString().toLowerCase()?!0:!1}return!1}),t.enableFormsCommandSubmit=function(){return t._formButtonSubmitEnabled()},t.actionFormsCommandSubmit=function(){t.runtime()._closeOnButtonClick=!0,t._formButtonSubmitClick()},t._formButtonCancelClick=function(){return t.runtime()&&(t.formState(t.runtime()._formStates.CANCELLED),2==t.runtime()._formModerationStatus()&&t.runtime()._formModerationStatus(3),t.runtime()._formSave()),!1},t._formButtonCancelEnabled=ko.computed(function(){if(t.runtime()){var e=t.formState()!=t.runtime()._formStates.DRAFT&&t.formState()!=t.runtime()._formStates.CANCELLED&&1==t.runtime()._formCanEdit()&&1==t.runtime()._formEditMode()&&t.enableCancelButtonOnSubmittedOrProcessingForms;return"true"==e.toString().toLowerCase()?!0:!1}return!1}),t.enableFormsCommandCancel=function(){return t._formButtonCancelEnabled()},t.actionFormsCommandCancel=function(){t.runtime()._closeOnButtonClick=!0,t._formButtonCancelClick()},t._formButtonDeleteClick=function(){t.runtime()._formDelete()},t._formApproved=function(){return t.runtime()._formEnableModeration()?0==t.runtime()._formModerationStatus():!0},t._formButtonDeleteEnabled=ko.pureComputed(function(){if(t.runtime()){var e;e=t.runtime()._formModerationMode()==t.runtime()._formModerationModeLevel.DISABLED?!t._formApproved()||t._formApproved()&&(t.enableDeleteButtonOnApprovedForms||t.formState()==t.runtime()._formStates.DRAFT&&t.enableSaveUpdateDeleteButtonOnForms):!t._formApproved()||!t.runtime()._formEnableModeration()||t.enableDeleteButtonOnApprovedForms;var n=t.formState()==t.runtime()._formStates.DRAFT&&t.enableSaveUpdateDeleteButtonOnForms,i=t.formState()!=t.runtime()._formStates.DRAFT&&!t._formButtonCancelEnabled()&&t.enableDeleteButtonOnApprovedForms,o=!t.runtime()._formNew()&&1==t.runtime()._formCanEdit()&&1==t.runtime()._formEditMode()&&e&&(n||i);return"true"==o.toString().toLowerCase()?!0:!1}return!1}),t.enableFormsCommandDelete=function(){return t._formButtonDeleteEnabled()},t.actionFormsCommandDelete=function(){t._formButtonDeleteClick()},t._formButtonSaveClick=function(){t.formState(t.runtime()._formStates.DRAFT),t.runtime()._formModerationStatus(3),t.runtime()._formSave()},t._formButtonSaveEnabled=ko.pureComputed(function(){if(t.runtime()){var e=t.formState()==t.runtime()._formStates.DRAFT&&0==t.readonly()&&(t.runtime()._formModerationMode()==t.runtime()._formModerationModeLevel.DRAFT||t.enableSaveUpdateDeleteButtonOnForms);return"true"==e.toString().toLowerCase()?!0:!1}return!1}),t.enableFormsCommandSave=function(){return t._formButtonSaveEnabled()},t.actionFormsCommandSave=function(){t.runtime()._closeOnButtonClick=!0,t._formButtonSaveClick()},t._formButtonCloseClick=function(){t.runtime()._formRedirectToList()},t._formButtonCloseEnabled=ko.pureComputed(function(){return!0}),t.enableFormsCommandClose=function(){return t._formButtonCloseEnabled()},t.actionFormsCommandClose=function(){t._formButtonCloseClick()},t.Init=function(){t.runtime()._formModerationMode(void 0!=t.params.moderation?t.params.moderation:"Disabled"),t.runtime()._formUniqueIDMethod(void 0!=t.params.counter?t.params.counter:"Counter")},t.actionFormsCommandEdit=function(e){return t.runtime()._formEditMode(e),RefreshCommandUI(),!0},t.queryFormsCommandEdit=function(){return t.runtime()._formEditMode()},t.actionFormsCommandDesign=function(e){return t.runtime()._formDesignMode(e),RefreshCommandUI(),!0},t.queryFormsCommandDesign=function(){return t.runtime()._formDesignMode()}}return t.prototype.schema={Params:{hidden:!1,save:!0,cancel:!0,deletesubmitted:!0,moderation:"Draft",uniqueid:"Counter"},ListColumns:{mwp_FormID:'<Field ID="{3c53b379-6256-4ab5-bc14-8fa61360e526}" Type="Text" Name="mwp_FormID" Required="FALSE" DisplayName="Form ID" Description="Unique Form Identificator" Group="Medline Web Portal" SourceID="{cbfbae2b-8362-4201-ac65-6a64a7d1d411}" StaticName="mwp_FormID" AllowDeletion="TRUE" Version="1" Customization="" ColName="nvarchar4" RowOrdinal="0"><Default>0</Default></Field>',mwp_FormType:'<Field ID="{ac53b379-6156-4aa5-bc14-8fa6136be526}" Type="Text" Name="mwp_FormType" Required="FALSE" DisplayName="Form Type" Description="Give SPA Form Name" Group="Medline Web Portal" SourceID="{cbfbae2b-8362-4201-ac65-6a64a7d1d411}" StaticName="mwp_FormType" AllowDeletion="TRUE" Version="1" Customization="" ColName="nvarchar3" RowOrdinal="0"><Default>Generic SPA Form</Default></Field>',mwp_FormState:'<Field ID="{2223b379-4a56-25b5-bc14-8f3c5360e526}" Type="Text" Name="mwp_FormState" Required="FALSE" DisplayName="Form State" Description="Form State" Group="Medline Web Portal" SourceID="{cbfbae2b-8362-4201-ac65-6a64a7d1d411}" StaticName="mwp_FormState" AllowDeletion="TRUE" Version="1" Customization="" ColName="nvarchar5" RowOrdinal="0"><Default>Draft</Default></Field>'}},ko.bindingHandlers.initbuttons={init:function(e,t,n,i,o){i.form(o.$root),i.Init(),i.$form.$ribbonEdit&&(i.$form.$ribbonEdit.Toolbar=i,window.setTimeout(function(){RefreshCommandUI()},100))}},{viewModel:t,template:e}}),define("text!attachment.html",[],function(){return'<div data-bind="initAT: {}, template : {afterRender: postProcessingLogic }, css: {\'ge-designmode\': form()._formDesignMode}">\r\n	<div class="ms-Table">\r\n		<div class="ms-Table-row">\r\n			<span class="ms-Table-cell" style="float:left; width:80px;" data-bind="visible: _controlEnabled">\r\n				<input style="display:none;" type="file" data-bind="event: { change: function() {_uploadFile($element.files[0])}} " ></input>\r\n				<button data-bind="visible: _formButtonAddFileEnabled, click: _formButtonAddFileClick" class="ms-Button ms-Button--primary"><span class="ms-Button-label">Upload</span></button>\r\n			</span>\r\n			<input style="display:none;" class="ms-TextField-field validate" type="text" data-bind="attr: { \'data-parsley-required\': _formAttachmentRequired }, value: fileName " ></input>\r\n			<span class="ms-Table-cell ms-font-l" data-bind="visible: _formFileNameEnabled, text: fileName" style="position:relative; top:-10px;"></span>\r\n			<span class="ms-Table-cell ms-font-l" data-bind="visible: _formFileNameWithLinkEnabled"><b><a data-bind="attr: { href: oldFileUrl, title: oldFullFileName}" style="position:relative; top:-10px;"><span data-bind="text: fileName"></span></a></b></span>\r\n			<span class="ms-Table-cell" style="float:left; width:80px;" data-bind="visible: _controlEnabled">\r\n				<button data-bind="visible: _formButtonDeleteFileEnabled, click: _formButtonDeleteFileClick" class="ms-Button ms-Button--primary"><span class="ms-Button-label">Delete</span></button>\r\n			</span>\r\n		</div>\r\n	</div>\r\n</div>'}),define("attachment",["text!./attachment.html"],function(e){function t(e){var t=this;t.params=e,t.params.attachmentFileName=void 0==e.attachmentFileName?"":e.attachmentFileName,t.params.absoluteFileUrl=void 0==e.absoluteFileUrl?"":e.absoluteFileUrl,t.form=ko.observable(),t.filePrefix=void 0==t.params.prefix?"":t.params.prefix,void 0==t.params.required?t._formAttachmentRequired=ko.observable(!1):t._formAttachmentRequired=t.params.required,t.oldFileUrl=ko.observable(""),t.oldFullFileName=ko.observable(""),t.oldFileName="",t.newFileName="",t.fileContent=void 0,t.isChanged=ko.observable(!1),t.fileName=ko.observable(""),t.input=void 0,t.index=void 0,t.Init=function(e){var n=e.attachmentFileName;""!=e.prefix&&(n=e.attachmentFileName.substring(e.attachmentFileName.indexOf("_")+1,e.attachmentFileName.length)),t.oldFileUrl(e.absoluteFileUrl),t.oldFullFileName(e.attachmentFileName),t.oldFileName=n,t.newFileName="",t.fileContent=void 0,t.isChanged(!1),t.fileName(t.oldFileName)},t.Init2=function(e,n){var i=n.toString(),o={prefix:t.filePrefix,attachmentFileName:"",absoluteFileUrl:""};if(""!=i){var a=e+i.substring(i.indexOf("/Lists"),i.length),r=i.substring(i.lastIndexOf("/")+1,i.length),s=r.indexOf("_")>0?r.substring(0,r.indexOf("_")):"";o.prefix=s,o.attachmentFileName=r,o.absoluteFileUrl=a}t.Init(o)},t.Init3=function(){void 0!=t.form().__formAttachmentsResults&&$.each(t.form().__formAttachmentsResults,function(){var e=this.ServerRelativeUrl.toString(),n=t.form()._formWebAbsoluteUrl+e.substring(e.indexOf("/Lists"),e.length),i=e.substring(e.lastIndexOf("/")+1,e.length),o=i.indexOf("_")>0?i.substring(0,i.indexOf("_")):"";if(t.filePrefix==o){var a={};return a.prefix=o,a.attachmentFileName=i,a.absoluteFileUrl=n,t.Init(a),!1}})},t.Save=function(){if(t.isChanged()){var e=t.newFileName,n=t.oldFileName,i=t.newFileName;""!=e&&""!=t.filePrefix&&(e=t.filePrefix+"_"+t.newFileName),""!=n&&""!=t.filePrefix&&(n=t.filePrefix+"_"+t.oldFileName),t.form()._formAttachmentSave(e,n,i)}return t.isChanged()},t._formFileNameEnabled=ko.computed(function(){return t.isChanged()}),t._formFileNameWithLinkEnabled=ko.computed(function(){return!t._formFileNameEnabled()}),t._formButtonAddFileClick=function(){t.form()._formAttachmentUpload(t.index)},t._formButtonAddFileEnabled=ko.computed(function(){var e=!1;return t.form()&&(e=t.form()._formReadOnly()?!1:!0),e}),t._formButtonDeleteFileClick=function(){t.newFileName="",t.fileName(""),t.isChanged(!0)},t._formButtonDeleteFileEnabled=ko.computed(function(){var e=""==t.fileName()?!1:!0,n=!1;return t.form()&&(n=t.form()._formReadOnly()?!1:!0),e&&n}),t._controlEnabled=ko.pureComputed(function(){if(t.form()){var e=t.form().mwp_FormState()==t.form()._formStates.DRAFT;return"true"==e.toString().toLowerCase()?!0:!1}return!1}),t._uploadFile2=function(e){t.newFileName=e,t.isChanged(!0),t.fileName(t.newFileName)},t._uploadFile=function(e){var n=new FileReader;n.addEventListener("load",function(){t.fileContent=n.result,t.newFileName=e.name,t.isChanged(!0),t.fileName(t.newFileName)},!1),e&&t.form()._formAttachmentUpload(e)},t.postProcessingLogic=function(e){t.input=$(e).find("span>input")},t.ab2str=function(e){var t=new Uint8Array(e);return String.fromCharCode.apply(null,t)}}return t.prototype.schema={Params:{prefix:"",required:!1},Connections:{ListItem:["Attachments"]}},ko.bindingHandlers.initAT={init:function(e,t,n,i,o){i.form(o.$root),i.form()._formAttachments.push(i),i.index=i.form()._formAttachments.indexOf(i),i.Init(i.params),i.Init3()}},{viewModel:t,template:e}}),define("text!forminfo.html",[],function(){return'<div class="ms-Table" data-bind="initFI: {}, css: {\'ge-designmode\': form()._formDesignMode}">\r\n	<div class="ms-Table-row">\r\n		<span class="ms-Table-cell  ms-font-l">FormID:</span>\r\n		<span class="ms-Table-cell  ms-font-l" data-bind="text: formID"></span>\r\n	</div>\r\n	<div class="ms-Table-row">\r\n		<span class="ms-Table-cell ms-font-l">FormType:</span>\r\n		<span class="ms-Table-cell ms-font-l" data-bind="text: formType"></span>\r\n	</div>\r\n	<div class="ms-Table-row">\r\n		<span class="ms-Table-cell ms-font-l">FormState:</span>\r\n		<span class="ms-Table-cell ms-font-l" data-bind="text: formState"></span>\r\n	</div>\r\n	<div class="ms-Table-row">\r\n		<span class="ms-Table-cell ms-font-l">Moderation State:</span>\r\n		<span class="ms-Table-cell ms-font-l" data-bind="text: moderationState"></span>\r\n	</div>\r\n	<div class="ms-Table-row">\r\n		<span class="ms-Table-cell ms-font-l">Moderation Comments:</span>\r\n		<span class="ms-Table-cell ms-font-l" data-bind="text: moderationComments"></span>\r\n	</div>\r\n	<div class="ms-Table-row">\r\n		<span class="ms-Table-cell ms-font-l">Moderation Mode:</span>\r\n		<span class="ms-Table-cell ms-font-l" data-bind="text: moderationMode"></span>\r\n	</div>\r\n	<div class="ms-Table-row">\r\n		<span class="ms-Table-cell ms-font-l">UniqueID Method:</span>\r\n		<span class="ms-Table-cell ms-font-l" data-bind="text: uniqueIDMethod"></span>\r\n	</div>\r\n</div>\r\n'}),define("forminfo",["text!./forminfo.html"],function(e){function t(e){var t=this;t.form=ko.observable(),t.params=e,t.formID=ko.pureComputed(function(){return t.form()?t.form().mwp_FormID():""}),t.formType=ko.pureComputed(function(){return t.form()?t.form().mwp_FormType():""}),t.formState=ko.pureComputed(function(){return t.form()?t.form().mwp_FormState():""}),t.moderationState=ko.pureComputed(function(){return t.form()?t.form()._formModerationStatus():""}),t.moderationComments=ko.pureComputed(function(){return t.form()?t.form()._formModerationComments():""}),t.moderationMode=ko.pureComputed(function(){return t.form()?t.form()._formModerationMode():""}),t.uniqueIDMethod=ko.pureComputed(function(){return t.form()?t.form()._formUniqueIDMethod():""}),t.Init=function(e){}}return ko.bindingHandlers.initFI={init:function(e,t,n,i,o){i.form(o.$root),i.Init(self.params)}},{viewModel:t,template:e}}),define("text!textbox.html",[],function(){return'<div data-bind="css: {\'ge-designmode\': $designmode}">\r\n	<div class="ms-TextField" >\r\n		<label class="ms-Label" data-bind="text: title"></label>\r\n		<input class="ms-TextField-field validate" type="text" data-parsley-type="alphanum" data-parsley-required="true" data-bind="value: value, enable: enableValue" />\r\n		<span class="ms-TextField-description" data-bind="text: description"></span>\r\n	</div>\r\n</div>'}),define("textbox",["text!textbox.html"],function(e){function t(e){this.internalName=e?e.InternalName:"",this.title=ko.observable(e?e.Title:""),this.description=ko.observable(e?e.Description:""),this.value=this.$column(this.internalName),this.enableValue=ko.pureComputed(function(){return this.$enabled()},this)}return function(){this.$enabled=function(){return this.$readonly()?!1:!0}}.call(t.prototype),t.prototype.schema={Params:{InternalName:"",Title:"",Description:""},Connections:{ListItem:["Text"]}},{viewModel:t,template:e}}),define("text!observable2.html",[],function(){return'<div data-bind="visible: $designmode, css: {\'ge-designmode\': $designmode}">\r\n	&nbsp;<span data-bind="text: internalName"></span><span>:&nbsp;</span><span data-bind="text: value" ></span>\r\n</div>\r\n'}),define("observable2",["text!observable2.html"],function(e){function t(e){this.internalName=e?e.InternalName:"",this.value=this.$column(this.internalName)}return t.prototype.schema={Params:{InternalName:""},Connections:{ListItem:["Any","Text","Choice","Note","Boolean","DateTime","Computed"]}},{viewModel:t,template:e}}),define("text!checkbox.html",[],function(){return'<div data-bind="initcheckbox: {}, css: {\'ge-designmode\': $formDesignMode}">\r\n	<div class="ms-CheckBox">\r\n	  <li role="checkbox" class="ms-Choice-field  ms-Choice-type--checkbox" tabindex="0" data-bind="click: onclick, css: enabled">\r\n		<span class="ms-Label" data-bind="text: title"></span>\r\n	  </li>\r\n	  <div><span class="ms-TextField-description" data-bind="text: description"></span></div>\r\n	</div>							\r\n</div>'}),define("checkbox",["text!checkbox.html"],function(e){function t(e){var t=this;this.internalName=e?e.InternalName:"",this.title=ko.observable(e?e.Title:""),this.description=ko.observable(e?e.Description:""),this.value=this.$column(this.internalName),this.enabled=ko.pureComputed(function(){return this.$enabled()},this),this.value.subscribe(function(e){this.chkBox&&(e?this.chkBox.check():this.chkBox.unCheck())},this),this.onclick=function(e,n){n.currentTarget.classList.contains("is-disabled")||t.value(n.currentTarget.classList.contains("is-checked")?!0:!1)}}return function(){this.$enabled=function(){return this.$readonly()?"is-disabled":""},this.$init=function(e){for(var t=e.querySelectorAll(".ms-CheckBox"),n=0;n<t.length;n++)this.chkBox=new fabric.CheckBox(t[n]),this.value()?this.chkBox.check():this.chkBox.unCheck()}}.call(t.prototype),t.prototype.schema={Params:{InternalName:"",Title:"",Description:""},Connections:{ListItem:["Boolean"]}},ko.bindingHandlers.initcheckbox={init:function(e,t,n,i,o){i.$init(e)}},{viewModel:t,template:e}}),define("text!messagebox.html",[],function(){return'<div class="ms-Table" data-bind="initmessagebox: {}, visible: enabled, css: {\'ge-designmode\': $designmode}" >\r\n	<div class="ms-Table-row" style="background-color:#0078d7;" >\r\n		<span class="ms-Table-cell ms-Button-label" style="float:left; border-width:3px; border-style:solid; background-color:#0078d7; border-color:#0078d7; color:white;" data-bind="text: messageText"></span>\r\n		<button data-bind="click: _formButtonCloseMessageClick" style="float:right;" class="ms-Button ms-Button--primary"><span class="ms-Button-label">Close Message</span></button>\r\n	</div>\r\n</div>\r\n'}),define("messagebox",["text!messagebox.html"],function(e){function t(e){var t=this;t.form=ko.observable(),t.params=e,t._formButtonCloseMessageClick=function(){t.form()._formStatusMessageEnabled(!1)},t.enabled=ko.pureComputed(function(){return t.form()?t.form()._formStatusMessageEnabled()||t.form()._formDesignMode():!1}),t.designing=ko.pureComputed(function(){return t.form()?t.form()._formDesignMode():!1}),t.messageText=ko.pureComputed(function(){return t.form()?t.form()._formStatusMessageText():""}),t.Init=function(e){t.form()._formStatusMessageText=ko.observable(e.message),t.form()._formStatusMessageEnabled=ko.observable(!1),t.form()._formStatusMessageAllowed=ko.observable(""==e.message?!1:!0),t.form()._formStatusMessage=function(e){this._formStatusMessageAllowed()&&this._formStatusMessageEnabled(!0)}}}return t.prototype.schema={Params:{message:"COMPLETED SUCCESSFULLY. MY FORMS VIEW WILL REFLECT CHANGES WITH 5 MIN DELAY"}},ko.bindingHandlers.initmessagebox={init:function(e,t,n,i,o){i.form(o.$root),i.Init(i.params)}},{viewModel:t,template:e}}),define("text!radiogroup.html",[],function(){return'<div data-bind="css: {\'ge-designmode\': $designmode}">\r\n	<div class="ms-ChoiceFieldGroup" role="radiogroup">\r\n		<div class="ms-ChoiceFieldGroup-title">\r\n			<label class="ms-Label  is-required " data-bind="text: title"></label>\r\n		</div>		\r\n		<div data-bind="foreach: {data: choices, as: \'choice\'}">\r\n			<div class="ms-CheckBox">\r\n			  <li role="radio" class="ms-Choice-field" tabindex="0" data-bind="click: choice.onclick , css: { \'is-checked\': choice.checked(), \'is-disabled\': $parent.$readonly()}">\r\n				<span class="ms-Label" data-bind="text: choice.key"></span>\r\n			  </li>\r\n			</div>	\r\n		</div>\r\n		<div>\r\n			<span class="ms-TextField-description" data-bind="text: description"></span>\r\n		</div>\r\n	</div>\r\n</div>'}),define("radiogroup",["text!radiogroup.html"],function(e){function t(e){this.internalName=e?e.InternalName:"",this.availablechoices=e?e.Choices:[],this.choices=ko.observableArray(this.$choices(this.availablechoices)),this.title=ko.observable(e?e.Title:""),this.description=ko.observable(e?e.Description:""),this.value=this.$column(this.internalName),this.value.subscribe(function(e){this.choices(this.$choices(this.availablechoices,e))},this)}return function(){this.$select=function(e){this.choices().forEach(function(t,n){t.checked(t.key==e?!0:!1)}),this.value(e)},this.$choices=function(e,t){var n=[];if(e.forEach(function(e,t){n.push({key:e,parent:this,checked:ko.observable(""),onclick:function(e,t){t.currentTarget.classList.contains("is-disabled")||0==t.currentTarget.classList.contains("is-checked")&&this.parent.$select(this.key)}})},this),t){var i=$.grep(n,function(e){return e.key==t});1==i.length&&i[0].checked(!0)}return n}}.call(t.prototype),t.prototype.schema={Params:{InternalName:"",Title:"",Description:"",Choices:[]},Connections:{ListItem:["Choice"]}},{viewModel:t,template:e}}),define("text!checkboxgroup.html",[],function(){return'<div data-bind="css: {\'ge-designmode\': $designmode}">\r\n	<div class="ms-ChoiceFieldGroup-title">\r\n		<label class="ms-Label  is-required " data-bind="text: title"></label>\r\n	</div>\r\n	<div data-bind="foreach: {data: choices, as: \'choice\'}">\r\n		<div class="ms-CheckBox">\r\n		  <li role="checkbox" class="ms-Choice-field ms-Choice-type--checkbox" tabindex="0" data-bind="click: choice.onclick , css: { \'is-checked\': choice.checked(), \'is-disabled\': $parent.$readonly()}">\r\n			<span class="ms-Label" data-bind="text: choice.key"></span>\r\n		  </li>\r\n		</div>	\r\n	</div>\r\n	<div>\r\n		<span class="ms-TextField-description" data-bind="text: description"></span>\r\n	</div>\r\n</div>'}),define("checkboxgroup",["text!checkboxgroup.html"],function(e){function t(e){this.internalName=e?e.InternalName:"",this.availablechoices=e?e.Choices:[],this.choices=ko.observableArray(this.$choices(this.availablechoices)),this.title=ko.observable(e?e.Title:""),this.description=ko.observable(e?e.Description:""),this.value=this.$column(this.internalName),this.value.subscribe(function(e){e&&""!=e||(e={},e.results=[],this.value(e));var t=e?e.results:[];this.choices(this.$choices(this.availablechoices,t))},this)}return function(){this.$update=function(e,t){var n=this.value();t?(""==n&&(n={},this.value(n)),n.results||(n.results=[]),n.results.push(e)):n.results.splice(n.results.indexOf(e),1),this.value(n)},this.$choices=function(e,t){var n=[];return e.forEach(function(e,t){n.push({key:e,parent:this,checked:ko.observable(""),onclick:function(e,t){t.currentTarget.classList.contains("is-disabled")||(this.checked(t.currentTarget.classList.contains("is-checked")?!1:!0),this.parent.$update(this.key,!t.currentTarget.classList.contains("is-checked")))}})},this),t&&t.forEach(function(e,t){var i=$.grep(n,function(t){return t.key==e});1==i.length&&i[0].checked(!0)},this),n}}.call(t.prototype),t.prototype.schema={Params:{InternalName:"",Title:"",Description:"",Choices:[]},Connections:{ListItem:["MultiChoice"]}},{viewModel:t,template:e}}),define("text!dropdown.html",[],function(){return'<div data-bind="css: {\'ge-designmode\': $designmode}">\r\n	<div class="ms-ChoiceFieldGroup" role="radiogroup">\r\n		<div class="ms-ChoiceFieldGroup-title">\r\n			<label class="ms-Label  is-required " data-bind="text: title"></label>\r\n		</div>		\r\n		<div data-bind="foreach: {data: choices, as: \'choice\'}">\r\n			<div class="ms-CheckBox">\r\n			  <li role="radio" class="ms-Choice-field" tabindex="0" data-bind="click: choice.onclick , css: { \'is-checked\': choice.checked(), \'is-disabled\': $parent.$readonly()}">\r\n				<span class="ms-Label" data-bind="text: choice.key"></span>\r\n			  </li>\r\n			</div>	\r\n		</div>\r\n		<div>\r\n			<span class="ms-TextField-description" data-bind="text: description"></span>\r\n		</div>\r\n	</div>\r\n</div>'}),define("dropdown",["text!dropdown.html"],function(e){function t(e){this.internalName=e?e.InternalName:"",this.availablechoices=e?e.Choices:[],this.choices=ko.observableArray(this.$choices(this.availablechoices)),this.title=ko.observable(e?e.Title:""),this.description=ko.observable(e?e.Description:""),this.value=this.$column(this.internalName),this.value.subscribe(function(e){this.choices(this.$choices(this.availablechoices,e))},this)}return function(){this.$select=function(e){this.choices().forEach(function(t,n){t.checked(t.key==e?!0:!1)}),this.value(e)},this.$choices=function(e,t){var n=[];if(e.forEach(function(e,t){n.push({key:e,parent:this,checked:ko.observable(""),onclick:function(e,t){t.currentTarget.classList.contains("is-disabled")||0==t.currentTarget.classList.contains("is-checked")&&this.parent.$select(this.key)}})},this),t){var i=$.grep(n,function(e){return e.key==t});1==i.length&&i[0].checked(!0)}return n}}.call(t.prototype),t.prototype.schema={Params:{InternalName:"",Title:"",Description:"",Choices:[]},Connections:{ListItem:["Choice"]}},{viewModel:t,template:e}}),define("text!datetime.html",[],function(){return'<div data-bind="initatetime: {}, css: {\'ge-designmode\': $designmode}">\r\n	<div class="ms-TextField" >\r\n		<label class="ms-Label" data-bind="text: Title"></label>\r\n		<input class="ms-TextField-field validate" type="text" data-parsley-type="alphanum" data-parsley-required="true" data-bind="value: value, enable: enabled" />\r\n		<span class="ms-TextField-description" data-bind="text: Description"></span>\r\n	</div>\r\n</div>'}),define("datetime",["text!datetime.html"],function(e){function t(e){var t=this;t.form=ko.observable(),t.params=e,t.InternalName=e.InternalName,t.value=ko.observable(),t.Title=ko.observable(),t.Description=ko.observable(),t.Init=function(e){try{void 0==t.model[t.InternalName]&&(t.model[t.InternalName]=ko.observable()),t.value=t.model[t.InternalName],t.value(void 0==t.form().__formDataResults?"":t.form().__formDataResults[t.InternalName]),t.form()._formColumnValues[t.InternalName]=t.value,t.form()._formColumns[t.InternalName]=t,void 0!=e.Title&&t.Title(e.Title),void 0!=e.Description&&t.Description(e.Description)}catch(n){alert(n)}},t.enabled=ko.pureComputed(function(){if(t.form()){var e=!0,n=e&&0==t.form()._formReadOnly();return"true"==n.toString().toLowerCase()?!0:!1}return!1})}return t.prototype.schema={Params:{InternalName:"",Title:"",Description:""},Connections:{ListItem:["DateTime"]}},ko.bindingHandlers.initdatetime={init:function(e,t,n,i,o){i.form(o.$root),i.model=o.$parent,
i.Init(i.params)}},{viewModel:t,template:e}}),define("text!notebox.html",[],function(){return'<div data-bind="initnotebox: {}, css: {\'ge-designmode\': $designmode}">\r\n	<div class="ms-TextField ms-TextField-multiline" >\r\n		<label class="ms-Label" data-bind="text: Title"></label>\r\n		<textarea class="ms-TextField-field validate" type="text" data-parsley-type="alphanum" data-parsley-required="true" data-bind="value: value, enable: enabled"></textarea>\r\n		<span class="ms-TextField-description" data-bind="text: Description"></span>\r\n	</div>\r\n</div>'}),define("notebox",["text!notebox.html"],function(e){function t(e){var t=this;t.form=ko.observable(),t.params=e,t.InternalName=e.InternalName,t.value=ko.observable(),t.Title=ko.observable(),t.Description=ko.observable(),t.Init=function(e){try{void 0==t.model[t.InternalName]&&(t.model[t.InternalName]=ko.observable()),t.value=t.model[t.InternalName],t.value(void 0==t.form().__formDataResults?"":t.form().__formDataResults[t.InternalName]),t.form()._formColumnValues[t.InternalName]=t.value,t.form()._formColumns[t.InternalName]=t,void 0!=e.Title&&t.Title(e.Title),void 0!=e.Description&&t.Description(e.Description)}catch(n){alert(n)}},t.enabled=ko.pureComputed(function(){if(t.form()){var e=!0,n=e&&0==t.form()._formReadOnly();return"true"==n.toString().toLowerCase()?!0:!1}return!1})}return t.prototype.schema={Params:{InternalName:"",Title:"",Description:""},Connections:{ListItem:["Note"]}},ko.bindingHandlers.initnotebox={init:function(e,t,n,i,o){i.form(o.$root),i.model=o.$parent,i.Init(i.params)}},{viewModel:t,template:e}});