/**
 * @license text 2.0.14 Copyright jQuery Foundation and other contributors.
 * Released under MIT license, http://github.com/requirejs/text/LICENSE
 */

define("text",["module"],function(e){"use strict";var t,n,o,i,r,a=["Msxml2.XMLHTTP","Microsoft.XMLHTTP","Msxml2.XMLHTTP.4.0"],s=/^\s*<\?xml(\s)+version=[\'\"](\d)*.(\d)*[\'\"](\s)*\?>/im,l=/<body[^>]*>\s*([\s\S]+)\s*<\/body>/im,m="undefined"!=typeof location&&location.href,d=m&&location.protocol&&location.protocol.replace(/\:/,""),c=m&&location.hostname,u=m&&(location.port||void 0),f={},p=e.config&&e.config()||{};return t={version:"2.0.14",strip:function(e){if(e){e=e.replace(s,"");var t=e.match(l);t&&(e=t[1])}else e="";return e},jsEscape:function(e){return e.replace(/(['\\])/g,"\\$1").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r").replace(/[\u2028]/g,"\\u2028").replace(/[\u2029]/g,"\\u2029")},createXhr:p.createXhr||function(){var e,t,n;if("undefined"!=typeof XMLHttpRequest)return new XMLHttpRequest;if("undefined"!=typeof ActiveXObject)for(t=0;3>t;t+=1){n=a[t];try{e=new ActiveXObject(n)}catch(o){}if(e){a=[n];break}}return e},parseName:function(e){var t,n,o,i=!1,r=e.lastIndexOf("."),a=0===e.indexOf("./")||0===e.indexOf("../");return-1!==r&&(!a||r>1)?(t=e.substring(0,r),n=e.substring(r+1)):t=e,o=n||t,r=o.indexOf("!"),-1!==r&&(i="strip"===o.substring(r+1),o=o.substring(0,r),n?n=o:t=o),{moduleName:t,ext:n,strip:i}},xdRegExp:/^((\w+)\:)?\/\/([^\/\\]+)/,useXhr:function(e,n,o,i){var r,a,s,l=t.xdRegExp.exec(e);return l?(r=l[2],a=l[3],a=a.split(":"),s=a[1],a=a[0],!(r&&r!==n||a&&a.toLowerCase()!==o.toLowerCase()||(s||a)&&s!==i)):!0},finishLoad:function(e,n,o,i){o=n?t.strip(o):o,p.isBuild&&(f[e]=o),i(o)},load:function(e,n,o,i){if(i&&i.isBuild&&!i.inlineText)return void o();p.isBuild=i&&i.isBuild;var r=t.parseName(e),a=r.moduleName+(r.ext?"."+r.ext:""),s=n.toUrl(a),l=p.useXhr||t.useXhr;return 0===s.indexOf("empty:")?void o():void(!m||l(s,d,c,u)?t.get(s,function(n){t.finishLoad(e,r.strip,n,o)},function(e){o.error&&o.error(e)}):n([a],function(e){t.finishLoad(r.moduleName+"."+r.ext,r.strip,e,o)}))},write:function(e,n,o,i){if(f.hasOwnProperty(n)){var r=t.jsEscape(f[n]);o.asModule(e+"!"+n,"define(function () { return '"+r+"';});\n")}},writeFile:function(e,n,o,i,r){var a=t.parseName(n),s=a.ext?"."+a.ext:"",l=a.moduleName+s,m=o.toUrl(a.moduleName+s)+".js";t.load(l,o,function(n){var o=function(e){return i(m,e)};o.asModule=function(e,t){return i.asModule(e,m,t)},t.write(e,l,o,r)},r)}},"node"===p.env||!p.env&&"undefined"!=typeof process&&process.versions&&process.versions.node&&!process.versions["node-webkit"]&&!process.versions["atom-shell"]?(n=require.nodeRequire("fs"),t.get=function(e,t,o){try{var i=n.readFileSync(e,"utf8");"\ufeff"===i[0]&&(i=i.substring(1)),t(i)}catch(r){o&&o(r)}}):"xhr"===p.env||!p.env&&t.createXhr()?t.get=function(e,n,o,i){var r,a=t.createXhr();if(a.open("GET",e,!0),i)for(r in i)i.hasOwnProperty(r)&&a.setRequestHeader(r.toLowerCase(),i[r]);p.onXhr&&p.onXhr(a,e),a.onreadystatechange=function(t){var i,r;4===a.readyState&&(i=a.status||0,i>399&&600>i?(r=new Error(e+" HTTP status: "+i),r.xhr=a,o&&o(r)):n(a.responseText),p.onXhrComplete&&p.onXhrComplete(a,e))},a.send(null)}:"rhino"===p.env||!p.env&&"undefined"!=typeof Packages&&"undefined"!=typeof java?t.get=function(e,t){var n,o,i="utf-8",r=new java.io.File(e),a=java.lang.System.getProperty("line.separator"),s=new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(r),i)),l="";try{for(n=new java.lang.StringBuffer,o=s.readLine(),o&&o.length()&&65279===o.charAt(0)&&(o=o.substring(1)),null!==o&&n.append(o);null!==(o=s.readLine());)n.append(a),n.append(o);l=String(n.toString())}finally{s.close()}t(l)}:("xpconnect"===p.env||!p.env&&"undefined"!=typeof Components&&Components.classes&&Components.interfaces)&&(o=Components.classes,i=Components.interfaces,Components.utils["import"]("resource://gre/modules/FileUtils.jsm"),r="@mozilla.org/windows-registry-key;1"in o,t.get=function(e,t){var n,a,s,l={};r&&(e=e.replace(/\//g,"\\")),s=new FileUtils.File(e);try{n=o["@mozilla.org/network/file-input-stream;1"].createInstance(i.nsIFileInputStream),n.init(s,1,0,!1),a=o["@mozilla.org/intl/converter-input-stream;1"].createInstance(i.nsIConverterInputStream),a.init(n,"utf-8",n.available(),i.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER),a.readString(n.available(),l),a.close(),n.close(),t(l.value)}catch(m){throw new Error((s&&s.path||"")+": "+m)}}),t}),define("text!attachment.html",[],function(){return'<div data-bind="initAT: {}, template : {afterRender: postProcessingLogic }, css: {\'ge-designmode\': form()._formDesignMode}">\r\n	<div class="ms-Table">\r\n		<div class="ms-Table-row">\r\n			<span class="ms-Table-cell" style="float:left; width:80px;" data-bind="visible: _controlEnabled">\r\n				<input style="display:none;" type="file" data-bind="event: { change: function() {_uploadFile($element.files[0])}} " ></input>\r\n				<button data-bind="visible: _formButtonAddFileEnabled, click: _formButtonAddFileClick" class="ms-Button ms-Button--primary"><span class="ms-Button-label">Upload</span></button>\r\n			</span>\r\n			<input style="display:none;" class="ms-TextField-field validate" type="text" data-bind="attr: { \'data-parsley-required\': _formAttachmentRequired }, value: fileName " ></input>\r\n			<span class="ms-Table-cell ms-font-l" data-bind="visible: _formFileNameEnabled, text: fileName" style="position:relative; top:-10px;"></span>\r\n			<span class="ms-Table-cell ms-font-l" data-bind="visible: _formFileNameWithLinkEnabled"><b><a data-bind="attr: { href: oldFileUrl, title: oldFullFileName}" style="position:relative; top:-10px;"><span data-bind="text: fileName"></span></a></b></span>\r\n			<span class="ms-Table-cell" style="float:left; width:80px;" data-bind="visible: _controlEnabled">\r\n				<button data-bind="visible: _formButtonDeleteFileEnabled, click: _formButtonDeleteFileClick" class="ms-Button ms-Button--primary"><span class="ms-Button-label">Delete</span></button>\r\n			</span>\r\n		</div>\r\n	</div>\r\n</div>'}),define("attachment",["text!./attachment.html"],function(e){function t(e){var t=this;t.params=e,t.params.attachmentFileName=void 0==e.attachmentFileName?"":e.attachmentFileName,t.params.absoluteFileUrl=void 0==e.absoluteFileUrl?"":e.absoluteFileUrl,t.form=ko.observable(),t.filePrefix=void 0==t.params.prefix?"":t.params.prefix,void 0==t.params.required?t._formAttachmentRequired=ko.observable(!1):t._formAttachmentRequired=t.params.required,t.oldFileUrl=ko.observable(""),t.oldFullFileName=ko.observable(""),t.oldFileName="",t.newFileName="",t.fileContent=void 0,t.isChanged=ko.observable(!1),t.fileName=ko.observable(""),t.input=void 0,t.index=void 0,t.Init=function(e){var n=e.attachmentFileName;""!=e.prefix&&(n=e.attachmentFileName.substring(e.attachmentFileName.indexOf("_")+1,e.attachmentFileName.length)),t.oldFileUrl(e.absoluteFileUrl),t.oldFullFileName(e.attachmentFileName),t.oldFileName=n,t.newFileName="",t.fileContent=void 0,t.isChanged(!1),t.fileName(t.oldFileName)},t.Init2=function(e,n){var o=n.toString(),i={prefix:t.filePrefix,attachmentFileName:"",absoluteFileUrl:""};if(""!=o){var r=e+o.substring(o.indexOf("/Lists"),o.length),a=o.substring(o.lastIndexOf("/")+1,o.length),s=a.indexOf("_")>0?a.substring(0,a.indexOf("_")):"";i.prefix=s,i.attachmentFileName=a,i.absoluteFileUrl=r}t.Init(i)},t.Init3=function(){void 0!=t.form().__formAttachmentsResults&&$.each(t.form().__formAttachmentsResults,function(){var e=this.ServerRelativeUrl.toString(),n=t.form()._formWebAbsoluteUrl+e.substring(e.indexOf("/Lists"),e.length),o=e.substring(e.lastIndexOf("/")+1,e.length),i=o.indexOf("_")>0?o.substring(0,o.indexOf("_")):"";if(t.filePrefix==i){var r={};return r.prefix=i,r.attachmentFileName=o,r.absoluteFileUrl=n,t.Init(r),!1}})},t.Save=function(){if(t.isChanged()){var e=t.newFileName,n=t.oldFileName,o=t.newFileName;""!=e&&""!=t.filePrefix&&(e=t.filePrefix+"_"+t.newFileName),""!=n&&""!=t.filePrefix&&(n=t.filePrefix+"_"+t.oldFileName),t.form()._formAttachmentSave(e,n,o)}return t.isChanged()},t._formFileNameEnabled=ko.computed(function(){return t.isChanged()}),t._formFileNameWithLinkEnabled=ko.computed(function(){return!t._formFileNameEnabled()}),t._formButtonAddFileClick=function(){t.form()._formAttachmentUpload(t.index)},t._formButtonAddFileEnabled=ko.computed(function(){var e=!1;return t.form()&&(e=t.form()._formReadOnly()?!1:!0),e}),t._formButtonDeleteFileClick=function(){t.newFileName="",t.fileName(""),t.isChanged(!0)},t._formButtonDeleteFileEnabled=ko.computed(function(){var e=""==t.fileName()?!1:!0,n=!1;return t.form()&&(n=t.form()._formReadOnly()?!1:!0),e&&n}),t._controlEnabled=ko.pureComputed(function(){if(t.form()){var e=t.form().mwp_FormState()==t.form()._formStates.DRAFT;return"true"==e.toString().toLowerCase()?!0:!1}return!1}),t._uploadFile2=function(e){t.newFileName=e,t.isChanged(!0),t.fileName(t.newFileName)},t._uploadFile=function(e){var n=new FileReader;n.addEventListener("load",function(){t.fileContent=n.result,t.newFileName=e.name,t.isChanged(!0),t.fileName(t.newFileName)},!1),e&&t.form()._formAttachmentUpload(e)},t.postProcessingLogic=function(e){t.input=$(e).find("span>input")},t.ab2str=function(e){var t=new Uint8Array(e);return String.fromCharCode.apply(null,t)}}return t.prototype.schema={Params:{prefix:"",required:!1},Connections:{ListItem:["Attachments"]}},ko.bindingHandlers.initAT={init:function(e,t,n,o,i){o.form(i.$root),o.form()._formAttachments.push(o),o.index=o.form()._formAttachments.indexOf(o),o.Init(o.params),o.Init3()}},{viewModel:t,template:e}}),define("text!buttons.html",[],function(){return'<div class="ms-Table" data-bind="initbuttons: {}, css: {\'ge-designmode\': form()._formDesignMode}">\r\n	<div class="ms-Table-row">\r\n		<span class="ms-Table-cell" style="float:left; width:80px;">\r\n			<button data-bind="visible: _formButtonSubmitEnabled, click: _formButtonSubmitClick" class="ms-Button ms-Button--primary"><span class="ms-Button-label">Submit</span></button>\r\n			<button data-bind="visible: _formButtonCancelEnabled, click: _formButtonCancelClick" class="ms-Button ms-Button--primary"><span class="ms-Button-label">Cancel</span></button>\r\n		</span>\r\n		<span class="ms-Table-cell" style="float:left; width:80px;"><button data-bind="visible: _formButtonDeleteEnabled, click: _formButtonDeleteClick" class="ms-Button ms-Button--primary"><span class="ms-Button-label">Delete</span></button></span>\r\n		<span class="ms-Table-cell" style="float:left; width:80px;">\r\n			<!-- ko if:$root._formNew -->\r\n			<button data-bind="visible: _formButtonSaveEnabled, click: _formButtonSaveClick" class="ms-Button ms-Button--primary"><span class="ms-Button-label">Save</span></button>\r\n			<!-- /ko -->\r\n			<!-- ko ifnot:$root._formNew -->\r\n			<button data-bind="visible: _formButtonSaveEnabled, click: _formButtonSaveClick" class="ms-Button ms-Button--primary"><span class="ms-Button-label">Update</span></button>\r\n			<!-- /ko -->\r\n		</span>\r\n		<span class="ms-Table-cell" style="float:left; width:80px;"><button data-bind="visible: _formButtonCloseEnabled, click: _formButtonCloseClick" class="ms-Button ms-Button--primary"><span class="ms-Button-label">Close</span></button></span>\r\n	</div>\r\n</div>\r\n'}),define("buttons",["text!./buttons.html"],function(e){function t(e){var t=this;t.params=e,t.form=ko.observable(),t.enableSaveUpdateDeleteButtonOnForms=void 0!==e.save?e.save:!1,t.enableCancelButtonOnSubmittedOrProcessingForms=void 0!==e.cancel?e.cancel:!0,t.enableDeleteButtonOnApprovedForms=void 0!=e.deletesubmitted?e.deletesubmitted:!0,t._formButtonSubmitClick=function(){t.form().mwp_FormState(t.form()._formStates.SUBMITTED),t.form()._formModerationStatus(2),t.form()._formSave()},t._formButtonSubmitEnabled=ko.pureComputed(function(){if(t.form()){var e=0==t.form()._formReadOnly();return"true"==e.toString().toLowerCase()?!0:!1}return!1}),t.enableFormsCommandSubmit=function(){return t._formButtonSubmitEnabled()},t.actionFormsCommandSubmit=function(){t.form()._closeOnButtonClick=!0,t._formButtonSubmitClick()},t._formButtonCancelClick=function(){return t.form()&&(t.form().mwp_FormState(t.form()._formStates.CANCELLED),2==t.form()._formModerationStatus()&&t.form()._formModerationStatus(3),t.form()._formSave()),!1},t._formButtonCancelEnabled=ko.computed(function(){if(t.form()){var e=t.form().mwp_FormState()!=t.form()._formStates.DRAFT&&t.form().mwp_FormState()!=t.form()._formStates.CANCELLED&&1==t.form()._formCanEdit()&&1==t.form()._formEditMode()&&t.enableCancelButtonOnSubmittedOrProcessingForms;return"true"==e.toString().toLowerCase()?!0:!1}return!1}),t.enableFormsCommandCancel=function(){return t._formButtonCancelEnabled()},t.actionFormsCommandCancel=function(){t.form()._closeOnButtonClick=!0,t._formButtonCancelClick()},t._formButtonDeleteClick=function(){t.form()._formDelete()},t._formApproved=function(){return t.form()._formEnableModeration()?0==t.form()._formModerationStatus():!0},t._formButtonDeleteEnabled=ko.pureComputed(function(){if(t.form()){var e;e=t.form()._formModerationMode()==t.form()._formModerationModeLevel.DISABLED?!t._formApproved()||t._formApproved()&&(t.enableDeleteButtonOnApprovedForms||t.form().mwp_FormState()==t.form()._formStates.DRAFT&&t.enableSaveUpdateDeleteButtonOnForms):!t._formApproved()||!t.form()._formEnableModeration()||t.enableDeleteButtonOnApprovedForms;var n=t.form().mwp_FormState()==t.form()._formStates.DRAFT&&t.enableSaveUpdateDeleteButtonOnForms,o=t.form().mwp_FormState()!=t.form()._formStates.DRAFT&&!t._formButtonCancelEnabled()&&t.enableDeleteButtonOnApprovedForms,i=!t.form()._formNew()&&1==t.form()._formCanEdit()&&1==t.form()._formEditMode()&&e&&(n||o);return"true"==i.toString().toLowerCase()?!0:!1}return!1}),t.enableFormsCommandDelete=function(){return t._formButtonDeleteEnabled()},t.actionFormsCommandDelete=function(){t._formButtonDeleteClick()},t._formButtonSaveClick=function(){t.form().mwp_FormState(t.form()._formStates.DRAFT),t.form()._formModerationStatus(3),t.form()._formSave()},t._formButtonSaveEnabled=ko.pureComputed(function(){if(t.form()){var e=t.form().mwp_FormState()==t.form()._formStates.DRAFT&&0==t.form()._formReadOnly()&&(t.form()._formModerationMode()==t.form()._formModerationModeLevel.DRAFT||t.enableSaveUpdateDeleteButtonOnForms);return"true"==e.toString().toLowerCase()?!0:!1}return!1}),t.enableFormsCommandSave=function(){return t._formButtonSaveEnabled()},t.actionFormsCommandSave=function(){t.form()._closeOnButtonClick=!0,t._formButtonSaveClick()},t._formButtonCloseClick=function(){t.form()._formRedirectToList()},t._formButtonCloseEnabled=ko.pureComputed(function(){return!0}),t._formLoadForm=function(){},t.enableFormsCommandClose=function(){return t._formButtonCloseEnabled()},t.actionFormsCommandClose=function(){t._formButtonCloseClick()},t.Init=function(){t.form()._formModerationMode(void 0!=t.params.moderation?t.params.moderation:"Disabled"),t.form()._formUniqueIDMethod(void 0!=t.params.counter?t.params.counter:"Counter"),t._formLoadForm()},t.actionFormsCommandEdit=function(e){return t.form()._formEditMode(e),RefreshCommandUI(),!0},t.queryFormsCommandEdit=function(){return t.form()._formEditMode()},t.actionFormsCommandDesign=function(e){return t.form()._formDesignMode(e),RefreshCommandUI(),!0},t.queryFormsCommandDesign=function(){return t.form()._formDesignMode()}}return t.prototype.schema={Params:{save:!0,cancel:!0,deletesubmitted:!0,moderation:"Draft",uniqueid:"Counter"}},ko.bindingHandlers.initbuttons={init:function(e,t,n,o,i){o.form(i.$root),o.Init(),o.$form.$ribbonEdit&&(o.$form.$ribbonEdit.Toolbar=o,window.setTimeout(function(){RefreshCommandUI()},100))}},{viewModel:t,template:e}}),define("text!messagebox.html",[],function(){return'<div class="ms-Table" data-bind="initmessagebox: {}, visible: enabled, css: {\'ge-designmode\': $designmode}" >\r\n	<div class="ms-Table-row" style="background-color:#0078d7;" >\r\n		<span class="ms-Table-cell ms-Button-label" style="float:left; border-width:3px; border-style:solid; background-color:#0078d7; border-color:#0078d7; color:white;" data-bind="text: messageText"></span>\r\n		<button data-bind="click: _formButtonCloseMessageClick" style="float:right;" class="ms-Button ms-Button--primary"><span class="ms-Button-label">Close Message</span></button>\r\n	</div>\r\n</div>\r\n'}),define("messagebox",["text!messagebox.html"],function(e){function t(e){var t=this;t.form=ko.observable(),t.params=e,t._formButtonCloseMessageClick=function(){t.form()._formStatusMessageEnabled(!1)},t.enabled=ko.pureComputed(function(){return t.form()?t.form()._formStatusMessageEnabled()||t.form()._formDesignMode():!1}),t.designing=ko.pureComputed(function(){return t.form()?t.form()._formDesignMode():!1}),t.messageText=ko.pureComputed(function(){return t.form()?t.form()._formStatusMessageText():""}),t.Init=function(e){t.form()._formStatusMessageText=ko.observable(e.message),t.form()._formStatusMessageEnabled=ko.observable(!1),t.form()._formStatusMessageAllowed=ko.observable(""==e.message?!1:!0),t.form()._formStatusMessage=function(e){this._formStatusMessageAllowed()&&this._formStatusMessageEnabled(!0)}}}return t.prototype.schema={Params:{message:"COMPLETED SUCCESSFULLY. MY FORMS VIEW WILL REFLECT CHANGES WITH 5 MIN DELAY"}},ko.bindingHandlers.initmessagebox={init:function(e,t,n,o,i){o.form(i.$root),o.Init(o.params)}},{viewModel:t,template:e}}),define("text!forminfo.html",[],function(){return'<div class="ms-Table" data-bind="initFI: {}, css: {\'ge-designmode\': form()._formDesignMode}">\r\n	<div class="ms-Table-row">\r\n		<span class="ms-Table-cell  ms-font-l">FormID:</span>\r\n		<span class="ms-Table-cell  ms-font-l" data-bind="text: formID"></span>\r\n	</div>\r\n	<div class="ms-Table-row">\r\n		<span class="ms-Table-cell ms-font-l">FormType:</span>\r\n		<span class="ms-Table-cell ms-font-l" data-bind="text: formType"></span>\r\n	</div>\r\n	<div class="ms-Table-row">\r\n		<span class="ms-Table-cell ms-font-l">FormState:</span>\r\n		<span class="ms-Table-cell ms-font-l" data-bind="text: formState"></span>\r\n	</div>\r\n	<div class="ms-Table-row">\r\n		<span class="ms-Table-cell ms-font-l">Moderation State:</span>\r\n		<span class="ms-Table-cell ms-font-l" data-bind="text: moderationState"></span>\r\n	</div>\r\n	<div class="ms-Table-row">\r\n		<span class="ms-Table-cell ms-font-l">Moderation Comments:</span>\r\n		<span class="ms-Table-cell ms-font-l" data-bind="text: moderationComments"></span>\r\n	</div>\r\n	<div class="ms-Table-row">\r\n		<span class="ms-Table-cell ms-font-l">Moderation Mode:</span>\r\n		<span class="ms-Table-cell ms-font-l" data-bind="text: moderationMode"></span>\r\n	</div>\r\n	<div class="ms-Table-row">\r\n		<span class="ms-Table-cell ms-font-l">UniqueID Method:</span>\r\n		<span class="ms-Table-cell ms-font-l" data-bind="text: uniqueIDMethod"></span>\r\n	</div>\r\n</div>\r\n'}),define("forminfo",["text!./forminfo.html"],function(e){function t(e){var t=this;t.form=ko.observable(),t.params=e,t.formID=ko.pureComputed(function(){return t.form()?t.form().mwp_FormID():""}),t.formType=ko.pureComputed(function(){return t.form()?t.form().mwp_FormType():""}),t.formState=ko.pureComputed(function(){return t.form()?t.form().mwp_FormState():""}),t.moderationState=ko.pureComputed(function(){return t.form()?t.form()._formModerationStatus():""}),t.moderationComments=ko.pureComputed(function(){return t.form()?t.form()._formModerationComments():""}),t.moderationMode=ko.pureComputed(function(){return t.form()?t.form()._formModerationMode():""}),t.uniqueIDMethod=ko.pureComputed(function(){return t.form()?t.form()._formUniqueIDMethod():""}),t.Init=function(e){}}return ko.bindingHandlers.initFI={init:function(e,t,n,o,i){o.form(i.$root),o.Init(self.params)}},{viewModel:t,template:e}}),define("text!textbox.html",[],function(){return'<div data-bind="css: {\'ge-designmode\': $formDesignMode}">\r\n	<div class="ms-TextField" >\r\n		<label class="ms-Label" data-bind="text: title"></label>\r\n		<input class="ms-TextField-field validate" type="text" data-parsley-type="alphanum" data-parsley-required="true" data-bind="value: value, enable: enableValue" />\r\n		<span class="ms-TextField-description" data-bind="text: description"></span>\r\n	</div>\r\n</div>'}),define("textbox",["text!textbox.html"],function(e){function t(e){this.internalName=e?e.InternalName:"",this.title=ko.observable(e?e.Title:""),this.description=ko.observable(e?e.Description:""),this.value=this.$column(this.internalName),this.enableValue=ko.pureComputed(function(){return this.$enabled()},this)}return function(){this.$enabled=function(){return this.$readonly()?!1:!0}}.call(t.prototype),t.prototype.schema={Params:{InternalName:"",Title:"",Description:""},Connections:{ListItem:["Text"]}},{viewModel:t,template:e}}),define("text!observable2.html",[],function(){return'<div data-bind="initobservable2: {}, visible: $designmode, css: {\'ge-designmode\': $designmode}">\r\n	&nbsp;<span data-bind="text: columnInternalName"></span><span>:&nbsp;</span><span data-bind="text: value" ></span>\r\n</div>\r\n'}),define("observable2",["text!observable2.html"],function(e){function t(e){var t=this;t.params=e,t.internalName=e.InternalName,t.value=ko.observable(),t.columnInternalName=ko.observable(),t.Init=function(e){try{t.columnInternalName(e.InternalName),void 0==t.$model[t.internalName]&&(t.$model[t.internalName]=ko.observable()),t.value=t.$model[t.internalName],t.value(void 0==t.$form.__formDataResults?"":t.$form.__formDataResults[t.internalName]),t.$form._formColumnValues[t.internalName]=t.value,t.$form._formColumns[t.internalName]=t}catch(n){alert(n)}}}return t.prototype.schema={Params:{InternalName:""},Connections:{ListItem:["Any","Text","Choice","Note","Boolean","DateTime","Computed"]}},ko.bindingHandlers.initobservable2={init:function(e,t,n,o,i){o.$model=i.$parent,o.Init(o.params)}},{viewModel:t,template:e}}),define("text!checkbox.html",[],function(){return'<div data-bind="initcheckbox: {}, css: {\'ge-designmode\': $formDesignMode}">\r\n	<div class="ms-CheckBox">\r\n	  <li role="checkbox" class="ms-Choice-field  ms-Choice-type--checkbox" tabindex="0" data-bind="click: onclick, css: enabled">\r\n		<span class="ms-Label" data-bind="text: title"></span>\r\n	  </li>\r\n	  <div><span class="ms-TextField-description" data-bind="text: description"></span></div>\r\n	</div>							\r\n</div>'}),define("checkbox",["text!checkbox.html"],function(e){function t(e){var t=this;this.internalName=e?e.InternalName:"",this.title=ko.observable(e?e.Title:""),this.description=ko.observable(e?e.Description:""),this.value=this.$column(this.internalName),this.enabled=ko.pureComputed(function(){return this.$enabled()},this),this.value.subscribe(function(e){this.chkBox&&(e?this.chkBox.check():this.chkBox.unCheck())},this),this.onclick=function(e,n){n.currentTarget.classList.contains("is-disabled")||t.value(n.currentTarget.classList.contains("is-checked")?!0:!1)}}return function(){this.$enabled=function(){return this.$readonly()?"is-disabled":""},this.$init=function(e){for(var t=e.querySelectorAll(".ms-CheckBox"),n=0;n<t.length;n++)this.chkBox=new fabric.CheckBox(t[n]),this.value()?this.chkBox.check():this.chkBox.unCheck()}}.call(t.prototype),t.prototype.schema={Params:{InternalName:"",Title:"",Description:""},Connections:{ListItem:["Boolean"]}},ko.bindingHandlers.initcheckbox={init:function(e,t,n,o,i){o.$init(e)}},{viewModel:t,template:e}}),define("text!checkboxgroup.html",[],function(){return'<div data-bind="css: {\'ge-designmode\': $designmode}">\r\n	<div class="ms-ChoiceFieldGroup-title">\r\n		<label class="ms-Label  is-required " data-bind="text: title"></label>\r\n	</div>\r\n	<div data-bind="foreach: {data: choices, as: \'choice\'}">\r\n		<div class="ms-CheckBox">\r\n		  <li role="checkbox" class="ms-Choice-field ms-Choice-type--checkbox" tabindex="0" data-bind="click: choice.onclick , css: { \'is-checked\': choice.checked(), \'is-disabled\': $parent.$readonly()}">\r\n			<span class="ms-Label" data-bind="text: choice.key"></span>\r\n		  </li>\r\n		</div>	\r\n	</div>\r\n	<div>\r\n		<span class="ms-TextField-description" data-bind="text: description"></span>\r\n	</div>\r\n</div>'}),define("checkboxgroup",["text!checkboxgroup.html"],function(e){function t(e){this.internalName=e?e.InternalName:"",this.availablechoices=e?e.Choices:[],this.choices=ko.observableArray(this.$choices(this.availablechoices)),this.title=ko.observable(e?e.Title:""),this.description=ko.observable(e?e.Description:""),this.value=this.$column(this.internalName),this.value.subscribe(function(e){var t=e?e.results:[];this.choices(this.$choices(this.availablechoices,t))},this)}return function(){this.$update=function(e,t){var n=this.value();t?(n.results||(n.results=[]),n.results.push(e)):n.results.splice(n.results.indexOf(e),1),this.value(n)},this.$choices=function(e,t){var n=[];return e.forEach(function(e,t){n.push({key:e,parent:this,checked:ko.observable(""),onclick:function(e,t){t.currentTarget.classList.contains("is-disabled")||(this.checked(t.currentTarget.classList.contains("is-checked")?!1:!0),this.parent.$update(this.key,!t.currentTarget.classList.contains("is-checked")))}})},this),t&&t.forEach(function(e,t){var o=$.grep(n,function(t){return t.key==e});1==o.length&&o[0].checked(!0)},this),n}}.call(t.prototype),t.prototype.schema={Params:{InternalName:"",Title:"",Description:"",Choices:[]},Connections:{ListItem:["MultiChoice"]}},{viewModel:t,template:e}}),define("text!radiogroup.html",[],function(){return'<div data-bind="css: {\'ge-designmode\': $designmode}">\r\n	<div class="ms-ChoiceFieldGroup" role="radiogroup">\r\n		<div class="ms-ChoiceFieldGroup-title">\r\n			<label class="ms-Label  is-required " data-bind="text: title"></label>\r\n		</div>		\r\n		<div data-bind="foreach: {data: choices, as: \'choice\'}">\r\n			<div class="ms-CheckBox">\r\n			  <li role="radio" class="ms-Choice-field" tabindex="0" data-bind="click: choice.onclick , css: { \'is-checked\': choice.checked(), \'is-disabled\': $parent.$readonly()}">\r\n				<span class="ms-Label" data-bind="text: choice.key"></span>\r\n			  </li>\r\n			</div>	\r\n		</div>\r\n		<div>\r\n			<span class="ms-TextField-description" data-bind="text: description"></span>\r\n		</div>\r\n	</div>\r\n</div>'}),define("radiogroup",["text!radiogroup.html"],function(e){function t(e){this.internalName=e?e.InternalName:"",this.availablechoices=e?e.Choices:[],this.choices=ko.observableArray(this.$choices(this.availablechoices)),this.title=ko.observable(e?e.Title:""),this.description=ko.observable(e?e.Description:""),this.value=this.$column(this.internalName),this.value.subscribe(function(e){this.choices(this.$choices(this.availablechoices,e))},this)}return function(){this.$select=function(e){this.choices().forEach(function(t,n){t.checked(t.key==e?!0:!1)}),this.value(e)},this.$choices=function(e,t){var n=[];if(e.forEach(function(e,t){n.push({key:e,parent:this,checked:ko.observable(""),onclick:function(e,t){t.currentTarget.classList.contains("is-disabled")||0==t.currentTarget.classList.contains("is-checked")&&this.parent.$select(this.key)}})},this),t){var o=$.grep(n,function(e){return e.key==t});1==o.length&&o[0].checked(!0)}return n}}.call(t.prototype),t.prototype.schema={Params:{InternalName:"",Title:"",Description:"",Choices:[]},Connections:{ListItem:["Choice"]}},{viewModel:t,template:e}}),define("text!datetime.html",[],function(){return'<div data-bind="initatetime: {}, css: {\'ge-designmode\': $designmode}">\r\n	<div class="ms-TextField" >\r\n		<label class="ms-Label" data-bind="text: Title"></label>\r\n		<input class="ms-TextField-field validate" type="text" data-parsley-type="alphanum" data-parsley-required="true" data-bind="value: value, enable: enabled" />\r\n		<span class="ms-TextField-description" data-bind="text: Description"></span>\r\n	</div>\r\n</div>'}),define("datetime",["text!datetime.html"],function(e){function t(e){var t=this;t.form=ko.observable(),t.params=e,t.InternalName=e.InternalName,t.value=ko.observable(),t.Title=ko.observable(),t.Description=ko.observable(),t.Init=function(e){try{void 0==t.model[t.InternalName]&&(t.model[t.InternalName]=ko.observable()),t.value=t.model[t.InternalName],t.value(void 0==t.form().__formDataResults?"":t.form().__formDataResults[t.InternalName]),t.form()._formColumnValues[t.InternalName]=t.value,t.form()._formColumns[t.InternalName]=t,void 0!=e.Title&&t.Title(e.Title),void 0!=e.Description&&t.Description(e.Description)}catch(n){alert(n)}},t.enabled=ko.pureComputed(function(){if(t.form()){var e=!0,n=e&&0==t.form()._formReadOnly();return"true"==n.toString().toLowerCase()?!0:!1}return!1})}return t.prototype.schema={Params:{InternalName:"",Title:"",Description:""},Connections:{ListItem:["DateTime"]}},ko.bindingHandlers.initdatetime={init:function(e,t,n,o,i){o.form(i.$root),o.model=i.$parent,o.Init(o.params)}},{viewModel:t,template:e}}),define("text!notebox.html",[],function(){return'<div data-bind="initnotebox: {}, css: {\'ge-designmode\': $designmode}">\r\n	<div class="ms-TextField ms-TextField-multiline" >\r\n		<label class="ms-Label" data-bind="text: Title"></label>\r\n		<textarea class="ms-TextField-field validate" type="text" data-parsley-type="alphanum" data-parsley-required="true" data-bind="value: value, enable: enabled"></textarea>\r\n		<span class="ms-TextField-description" data-bind="text: Description"></span>\r\n	</div>\r\n</div>'}),define("notebox",["text!notebox.html"],function(e){function t(e){var t=this;t.form=ko.observable(),t.params=e,t.InternalName=e.InternalName,t.value=ko.observable(),t.Title=ko.observable(),t.Description=ko.observable(),t.Init=function(e){try{void 0==t.model[t.InternalName]&&(t.model[t.InternalName]=ko.observable()),t.value=t.model[t.InternalName],t.value(void 0==t.form().__formDataResults?"":t.form().__formDataResults[t.InternalName]),t.form()._formColumnValues[t.InternalName]=t.value,t.form()._formColumns[t.InternalName]=t,void 0!=e.Title&&t.Title(e.Title),void 0!=e.Description&&t.Description(e.Description)}catch(n){alert(n)}},t.enabled=ko.pureComputed(function(){if(t.form()){var e=!0,n=e&&0==t.form()._formReadOnly();return"true"==n.toString().toLowerCase()?!0:!1}return!1})}return t.prototype.schema={Params:{InternalName:"",Title:"",Description:""},Connections:{ListItem:["Note"]}},ko.bindingHandlers.initnotebox={init:function(e,t,n,o,i){o.form(i.$root),o.model=i.$parent,o.Init(o.params)}},{viewModel:t,template:e}}),define("text!dropdown.html",[],function(){return'<div data-bind="css: {\'ge-designmode\': $designmode}">\r\n	<div class="ms-ChoiceFieldGroup" role="radiogroup">\r\n		<div class="ms-ChoiceFieldGroup-title">\r\n			<label class="ms-Label  is-required " data-bind="text: title"></label>\r\n		</div>		\r\n		<div data-bind="foreach: {data: choices, as: \'choice\'}">\r\n			<div class="ms-CheckBox">\r\n			  <li role="radio" class="ms-Choice-field" tabindex="0" data-bind="click: choice.onclick , css: { \'is-checked\': choice.checked(), \'is-disabled\': $parent.$readonly()}">\r\n				<span class="ms-Label" data-bind="text: choice.key"></span>\r\n			  </li>\r\n			</div>	\r\n		</div>\r\n		<div>\r\n			<span class="ms-TextField-description" data-bind="text: description"></span>\r\n		</div>\r\n	</div>\r\n</div>'}),define("dropdown",["text!dropdown.html"],function(e){function t(e){this.internalName=e?e.InternalName:"",this.availablechoices=e?e.Choices:[],this.choices=ko.observableArray(this.$choices(this.availablechoices)),this.title=ko.observable(e?e.Title:""),this.description=ko.observable(e?e.Description:""),this.value=this.$column(this.internalName),this.value.subscribe(function(e){this.choices(this.$choices(this.availablechoices,e))},this)}return function(){this.$select=function(e){this.choices().forEach(function(t,n){t.checked(t.key==e?!0:!1)}),this.value(e)},this.$choices=function(e,t){var n=[];if(e.forEach(function(e,t){n.push({key:e,parent:this,checked:ko.observable(""),onclick:function(e,t){t.currentTarget.classList.contains("is-disabled")||0==t.currentTarget.classList.contains("is-checked")&&this.parent.$select(this.key)}})},this),t){var o=$.grep(n,function(e){
return e.key==t});1==o.length&&o[0].checked(!0)}return n}}.call(t.prototype),t.prototype.schema={Params:{InternalName:"",Title:"",Description:"",Choices:[]},Connections:{ListItem:["Choice"]}},{viewModel:t,template:e}}),define("text!toolbar.html",[],function(){return'<div class="ms-Table"  data-bind="initTB: {}, template : {afterRender: postProcessingLogic }" style="display:none;">\r\n	<div class="ms-Table-row" style="min-height:100px !important">\r\n	</div>\r\n	<div class="ms-Table-row" style="background-color:#0078d7;" >\r\n		<span class="ms-Table-cell" />\r\n		</span>\r\n		<span class="ms-Table-cell" />\r\n			<input class="ms-TextField-field validate" type="text" data-parsley-type="alphanum" data-parsley-required="true" data-bind="value: newcomponent" />\r\n		</span>\r\n		<span class="ms-Table-cell" />\r\n		<select style="margin-left:10px; margin-right:10px;" data-bind="options: fields,\r\n                       optionsText: \'Title\',\r\n                       value: selectedfield,\r\n                       optionsCaption: \'Select column...\'"></select>\r\n		<select style="margin-left:10px; margin-right:10px;" data-bind="options: form()._customComponents,\r\n			   optionsText: \'Title\',\r\n			   value: selectedcomponent,\r\n			   optionsCaption: \'Select component...\'"></select>\r\n		</span>\r\n		<!--\r\n		<p>Runtime: <input type="checkbox" data-bind="checked: form()._formRuntime" /></p>\r\n		<div style="background-color:white" data-bind="visible: selectedfield"> \r\n			intName:\r\n			<span data-bind="text: selectedfield() ? selectedfield().InternalName : \'unknown\'"></span>.\r\n		</div>\r\n		, value: buildMessages\r\n		, value: buildOutput\r\n		-->\r\n		<textarea id="buildMessages" data-bind="visible: buildOn"></textarea>\r\n		<textarea id="output" data-bind="visible: buildOn"></textarea>\r\n\r\n		\r\n		\r\n		<span class="ms-Table-cell" />\r\n	</div>\r\n	<div class="ms-Table-row"></div>\r\n</div>\r\n'}),define("toolbar",["text!./toolbar.html"],function(e){function t(e){var t=this;t.form=ko.observable(),t.params=e,t.index=0,t.fields=ko.observableArray(),t.selectedfield=ko.observable(),t.selectedcomponent=ko.observable(),t.newcomponent=ko.observable("helloworld"),t.selectedDeviceDisplayName="Desktop",t.rawfields={},t.selectedInternalName="",t.selectedDisplayName="Select content type...",t.selectedcontrol=ko.observable(!1),t.selectedcontrol1=void 0,t.insertioncontrol=ko.observable(!1),t.insertioncontrol1=void 0,t.buildMessages=ko.observable("msg"),t.buildOutput=ko.observable("out"),t.buildOn=ko.observable(!1),t._formGridEditor=ko.observable(!1),t._formEditingGrid=ko.observable(!1),t._formEditingText=ko.observable(!1),t._formEditingLibrary=ko.observable(!1),t._formHTMLOld="",t._formHTMLNew="",t.panelComps=ko.observableArray(),t.protoComps=ko.observableArray(),t.prototypeComponent=ko.observable(),t.codePanels={},t.codePanel=null,t.resetEmpty=ko.observable(!0),t.resetAllColumns=ko.observable(!1),t.resetLastCommit=ko.observable(!1),t.hasGitHubConnection=ko.observable(!1),t.enableLastCommit=ko.pureComputed(function(){return 1==this.hasGitHunConnection()?"":"is-disabled"},t),t.panelNewForm=ko.observable(!1),t.panelListForm=ko.observable(!0),t.panelButtonNewClick=function(){t.panelListForm(!1),t.panelNewForm(!0)},t.panelButtonAddComponentClick=function(){return t.cloneAndSaveNewComponent(t.prototypeComponent().Title),t.panelListForm(!0),t.panelNewForm(!1),!1},t.cloneAndSaveNewComponent=function(e){var n="empty";void 0!==e&&(n=e);var o=n.split("-").join(""),i="text!./"+n+".html",r="text!./"+n+".js";requirejs([i,r],function(e,i){var r=t.newcomponent().toLowerCase(),a=i.split(n).join(r),s=e.split(n).join(r),l=n.lastIndexOf("-");l>0&&(s=s.split(o).join(r),a=a.split(o).join(r));var m={Title:r,Require:{name:r,proto:!1,path:""+r},Markup:{tag:"component-"+r}};m.selected=ko.observable(!1),m.enableDelete=ko.observable(!0);var d={};d.paths={},d.paths[m.Title]=m.Require.path,requirejs.config(d),t.form()._registeredComponents.push(m),t.form()._customComponents.push(m),t.form()._designComponents.push(m),t.form()._formRuntime(!1);var c=({runtime:t.form()._formRuntime(),components:t.form()._customComponents(),sourceControl:t.form().sourceControl},t._formSaveFormState());c.viewModel=a,c.template=s,ko.components.register("component-"+r,{require:r}),t.form()._panelComponents.push(m),t.panelComps.unshift(m),t.form()._closeOnDesignSave=!1,t.form()._formDesignSave(c,"Design/"+r),RefreshCommandUI()})},t.panelButtonDeleteComponentClick=function(e){console.log("delete component index="+e());var n=t.panelComps()[e()];for(t.panelComps.remove(n),i=0;i<t.form()._panelComponents().length;i++){var o=t.form()._panelComponents()[i];if(o.Title==n.Title){t.form()._panelComponents.remove(o);break}}for(i=0;i<t.form()._registeredComponents().length;i++){var o=t.form()._registeredComponents()[i];if(o.Title==n.Title){t.form()._registeredComponents.remove(o);break}}for(i=0;i<t.form()._customComponents().length;i++){var o=t.form()._customComponents()[i];if(o.Title==n.Title){t.form()._customComponents.remove(o);break}}for(i=0;i<t.form()._designComponents().length;i++){var o=t.form()._designComponents()[i];if(o.Title==n.Title){t.form()._designComponents.remove(o);break}}ko.components.unregister(n.Title),t.form()._formRuntime(!1),t.form()._closeOnDesignSave=!1,t.form()._formDesignSave(t._formSaveFormState(),"")},t.openDialog=function(e){requirejs([e],function(e){$("#ppanel").first().html(e.template);var n=new e.viewModel(t),o=document.getElementById("dialog-container");ko.applyBindings(n,o),n.Init(t),n.openDialog()})},t.panelButtonCancelComponentClick=function(){return t.panelListForm(!0),t.panelNewForm(!1),!1},t.panelClosePickupPanel=function(){$(t.PickerCell).removeClass("ui-state-hover"),t.PickerPanel.dismiss()},t.panelOpenPickupPanel=function(e){for(t.panelComps.removeAll(),i=0;i<t.form()._designComponents().length;i++){var n=t.form()._designComponents()[i];if(void 0===n.Require.sys){var o=JSON.parse(JSON.stringify(n));o.enableDelete=ko.observable(!0),o.selected=ko.observable(!1),t.panelComps.push(o)}else if(!n.Connections||!n.Connections.ListItem){var o=JSON.parse(JSON.stringify(n));o.enableDelete=ko.observable(!1),o.selected=ko.observable(!1),t.panelComps.push(o)}}requirejs(["toolbar-pickuppanel"],function(n){if("object"==typeof fabric){$("#ppanel").first().html(n.template),t.InitFields(),t.columnsGridViewModel=new ko.columnsGrid.viewModel({data:t.fields,pageSize:8}),t.componentsGridViewModel=new ko.componentsGrid.viewModel({data:t.panelComps,toolbar:t,pageSize:8});var o=document.getElementById("panel-container");ko.applyBindings(t,o);var i=document.querySelector(".ms-PanelDefaultExample .ms-Panel");t.PickerPanel=new fabric.Panel(i),t.PickerCell=e,t.PickerPanel.dismiss=function(){$(t.PickerCell).removeClass("ui-state-hover"),fabric.Panel.prototype.dismiss.call(t.PickerPanel)};for(var r=document.querySelectorAll(".ms-Pivot"),a=0;a<r.length;a++)new fabric.Pivot(r[a])}})},t.InitFields=function(e){for(t.protoComps.removeAll(),i=0;i<t.form()._registeredComponents().length;i++){var n=t.form()._registeredComponents()[i];if(void 0!==n.Require.proto&&1==n.Require.proto){var o=JSON.parse(JSON.stringify(n));t.protoComps.push(o)}}t.form()._formGetFields().done(function(n){var o=t.form()._designComponents();n.forEach(function(e,t){e.selectedcomp=ko.observable(),e.comps=ko.observableArray(),e.selected=ko.observable(!1),e.click=function(){this.selected(!this.selected()),console.log("field selected = "+this.selected())},o.forEach(function(t,n){if(void 0!=t.Connections&&void 0!=t.Connections.ListItem)for(var o=0,i=t.Connections.ListItem.length;i>o;o++)if(e.TypeAsString==t.Connections.ListItem[o]){var r={Title:t.Title};e.comps.push(r),0==o&&e.selectedcomp(r)}})}),t.fields(n),e&&e()})},t.enableFormsCommandSave=function(){var e=t.getViewModelCodePanel();return e?e.enableFormModelCommandSave():!1},t.getTemplateHTML=function(){var e=$(".ms-Grid").first().gridEditor("getHtml"),n=$("component-form").clone();n.html("<div class='ms-Grid'>"+e+"</div>");for(var o=$(n).find("*").filter(function(){return/^component\-/i.test(this.nodeName)}),i=0;i<o.length;i++)$(o[i]).empty();var r=n.html(),a=t.html_beautify(r,{preserve_newlines:!1});return a},t.actionFormsCommandSave=function(){var e=t.getViewModelCodePanel();e&&(t.form()._doNotReloadDesign=!0,e.actionFormModelCommandSave())},t.enableFormsCommandPublish=function(){var e=function(){return navigator.appVersion.indexOf("MSIE")>0};return e()?!1:!0},t.$saveModel=function(e){t.form()._formRuntime(!0);var n=t._formSaveFormState();n.fileContent=e,t.form()._closeOnDesignSave=!1,t.form()._formDesignPublish(n,"Runtime/model.min.js")},t.actionFormsCommandPublish=function(){t.panelOpenGITPanel({publish:!0,reset:!1})},t.actionFormsCommandGit=function(e){t.panelOpenGITPanel({publish:!1,reset:!1,git:!0,component:e})},t.actionFormsCommandSourceControl=function(e){t.panelOpenGITPanel({publish:!0,reset:!1,git:!1})},t.panelOpenGITPanel=function(e){requirejs(["toolbar-gitgrid"],function(n){if("object"==typeof fabric){$("#epanel").first().html(n.template);var o=document.getElementById("gitpanel-container"),i=new n.viewModel(e);i.Init(t).done(function(){ko.applyBindings(i,o);var e=document.querySelector(".ms-PanelDefaultGit .ms-Panel");t.GitPanel=new fabric.Panel(e);for(var n=e.querySelectorAll(".ms-ChoiceFieldGroup"),r=0;r<n.length;r++)new fabric.ChoiceFieldGroup(n[r]);for(var a=e.querySelectorAll(".ms-CheckBox"),r=0;r<a.length;r++)new fabric.CheckBox(a[r]);for(var s=e.querySelectorAll(".ms-Spinner"),r=0;r<s.length;r++)new fabric.Spinner(s[r])})}})},t.panelCloseGitPanel=function(){t.GitPanel.dismiss()},t.enableFormsCommandCancel=function(){return!0},t.actionFormsCommandCancel=function(){t.form()._formRedirectToList()},t.enableFormsCommandUndo=function(){var e=t.getViewModelCodePanel();return e?e.enableTemplateCommandUndo():!1},t.actionFormsCommandUndo=function(){var e=t.getViewModelCodePanel();e&&(e.actionTemplateCommandUndo(),e.save())},t.enableFormsCommandRedo=function(){var e=t.getViewModelCodePanel();return e?e.enableTemplateCommandRedo():!1},t.actionFormsCommandRedo=function(){var e=t.getViewModelCodePanel();e&&(e.actionTemplateCommandRedo(),e.save())},t.activeTabCommandId="",t.actionCheckTemplateTab=function(e,n){if(e!=n){var o=t.codePanels[e],i=t.codePanels[n];if(void 0!=i)return document.getElementById("formpanel").style.display="none",void 0!=o&&o.hide(),t.codePanel=i,document.getElementById("codepanel").style.display="block","FormModelEdit.Command.Tab.VIEWMODEL"==n?t.codePanel.show(t.getTemplateHTML()):t.codePanel.show(),void t.onResize();document.getElementById("codepanel").style.display="none",void 0!=o&&(t.codePanel.isReadOnly()?document.getElementById("formpanel").style.display="block":t.codePanel.save(),t.codePanel.hide(),document.getElementById("codepanel").style.display="none",RefreshCommandUI())}},t.onResize=function(){t.windowOnResize(),t.codePanel&&t.codePanel.resize()},t.panelButtonEditComponentClick=function(e){console.log("edit component index="+e());var n=t.panelComps()[e()];t.openCodePanel(n.Title,n.Require.path),t.PickerPanel.dismiss()},t.getViewModelCodePanel=function(){var e="FormModelEdit.Command.Tab.VIEWMODEL",n=t.codePanels[e];return n},t.getCodePanel=function(e){if(e){var n="FormModelEdit.Command.Tab."+e,o=t.codePanels[n];return o}return t.getViewModelCodePanel()},t.$updateViewModelCodePanel=function(e){console.log("$updateViewModelCodePanel: "+e),window.setTimeout(function(){var e=t.getTemplateHTML(),n=t.getViewModelCodePanel();n.templateEditor.setValue(e,-1),n.editor=n.templateEditor,window.setTimeout(function(){RefreshCommandUI()},300)},100)},t.openViewModelCodePanel=function(){t.openCodePanel("VIEWMODEL","viewmodel",t.getTemplateHTML())},t.openCodePanel=function(e,n,o,i){var r="FormModelEdit.Command.Tab."+e,a=t.codePanels[r];void 0===a?t.$createCodePanel(e,n,o,i):(t.codePanel=a,i||a.select())},t.$createCodePanel=function(e,n,o,i){window.acecodepanel?t.$createCodePanel2(e,n,o,i):(require.config({paths:{ace:"../Runtime"}}),define("codepanel",["ace/codepanel"],function(r){window.acecodepanel=r,t.$createCodePanel2(e,n,o,i)}),require(["codepanel"]))},t.$createCodePanel2=function(e,n,o,i){var r=require("ace/codepanel").CodePanel,a=document.getElementById("codepanel");new r(t.form(),a,e,o,n,function(e){null!==e.$panelcontainer?(t.codePanel=e,t.codePanels[e.getPanelCommand()]=e,i||e.select()):delete t.codePanels[e.getPanelCommand()]})},t.actionFormsCommandRestore=function(e){t.panelOpenGITPanel()},t.actionFormsCommandGrid=function(e){return t.form()._formDesignMode(e),t._formGridEditor()?$(".ms-Grid").first().gridEditor("editGrid",e):t._activateGrid(e,t._formEditingText()),t.resetCallback&&setTimeout(function(){t.resetCallback()},100),RefreshCommandUI(),!0},t.queryFormsCommandGrid=function(e){return t.form()._formDesignMode()?0==t._formEditingGrid()&&(t._activateGrid(!0,t._formEditingText()),t._formEditingGrid(!0)):0==t._formEditingGrid()&&(t._activateGrid(!1,t._formEditingText()),t._formEditingGrid(!0)),t.form()._formDesignMode()},t._activateGrid=function(e,n){requirejs(["beautifyhtml","json5","css!grideditorcss","jqueryui","css!jsoneditorcss","grideditor"],function(o){t.html_beautify=o.html_beautify,console.log("self._activateGrid layout_devNumber = "+t.form().sourceControl.selectedDeviceNumber);var i=t.form().sourceControl.selectedDeviceNumber?parseInt(t.form().sourceControl.selectedDeviceNumber):0;console.log("self._activateGrid layout_devNumber = "+parseInt(t.form().sourceControl.selectedDeviceNumber)),0==t._formGridEditor()?($(".ms-Grid").first().gridEditor({content_types:["summernote"],showGrid:e,editText:n,layout_devNumber:i,form:t.form()}),RefreshCommandUI(),t.openCodePanel("VIEWMODEL","viewmodel",t.getTemplateHTML(),"not selected")):$(".ms-Grid").first().gridEditor("editGrid",e),t._formGridEditor(!0)})},t.actionFormsCommandSelectDevice=function(e,n){$(".ms-Grid").first().gridEditor("Device",n),t.selectedDeviceDisplayName=e,t.form().sourceControl.selectedDeviceNumber=n,t.form().sourceControl.selectedDeviceDisplayName=e,t.saveFormState()},t.actionFormsCommandQueryDevices=function(){return t.selectedDeviceDisplayName},t.actionFormsCommandPopulateDevices=function(){var e=[{Title:"Desktop",Device:0},{Title:"Tablet",Device:1},{Title:"Phone",Device:2}];return t.getDevicesDropdownItemsXml(e)},t.getDevicesDropdownItemsXml=function(e){var t=new Sys.StringBuilder;return t.append("<Menu Id='Forms.Tab.GridGroup.DevicesDropdown.Menu'>"),t.append("<MenuSection DisplayMode='Menu' Id='Forms.Tab.GridGroup.DevicesDropdown.Menu.Manage'>"),t.append("<Controls Id='Forms.Tab.GridGroup.DevicesDropdown.Menu.Manage.Controls'>"),e.forEach(function(e){t.append("<Button"),t.append(" Id='Forms.Tab.GridGroup.DevicesDropdown.Menu.Manage."),t.append(e.Device),t.append("'"),t.append(" Command='"),t.append("Forms.Command.SelectDevice"),t.append("'"),t.append(" LabelText='"),t.append(e.Title),t.append("'"),t.append(" CommandValueId='"),t.append(e.Device),t.append("'"),t.append("/>")}),t.append("</Controls>"),t.append("</MenuSection>"),t.append("</Menu>"),t.toString()},t.actionFormsCommandEditor=function(e){if(0==t._formGridEditor())t._activateGrid(t._formEditingGrid(),e);else{var n=t.form();$(".ms-Grid").first().gridEditor("editText",e,n)}return t._formEditingText(e),RefreshCommandUI(),!0},t.actionFormsCommandDesktop=function(){$(".ms-Grid").first().gridEditor("Device",0),RefreshCommandUI()},t.actionFormsCommandTablet=function(){$(".ms-Grid").first().gridEditor("Device",1),RefreshCommandUI()},t.actionFormsCommandPhone=function(){$(".ms-Grid").first().gridEditor("Device",2),RefreshCommandUI()},t.enableFormsCommandCreate=function(){return!0},t.actionFormsCommandCreate=function(){},t._formSaveFormState=function(){var e={runtime:t.form()._formRuntime(),components:t.form()._customComponents(),sourceControl:t.form().sourceControl},n={config:e};return console.log("self._formSaveFormState: "+JSON.stringify(n)),n},t.saveFormState=function(){var e=t._formSaveFormState();e.noreply=!0,t.form()._formDesignSave(e,"")},t.enableCancel=function(){var e=t.selectedcontrol();return"true"==e.toString().toLowerCase()?!0:!1},t._formButtonGetColumnsClick=function(){if(t.form()._formIsSearchContext)t.fields([]);else{var e=t.form()._formListName;$.ajax({url:_spPageContextInfo.webAbsoluteUrl+"/_api/web/lists/getbytitle('"+e+"')/fields?$filter=Hidden eq false and ReadOnlyField eq false",type:"GET",headers:{accept:"application/json;odata=verbose"},success:function(e){t.fields(e.d.results),t.rawfields=e.d.results},error:function(t){top.postMessage(JSON.stringify(["formError",JSON.stringify(t),e,0]),"*")}})}},t.postProcessingLogic=function(e){},t.resetFormToEmpty=function(){requirejs(["text!./../Runtime/src/viewmodel.js","text!./../Runtime/src/viewmodel.html"],function(e,n){t.codePanel.modelEditor.setValue(e.toString(),-1),t.codePanel.show(n),t.panelCloseGitPanel(),t.codePanel.save(),RefreshCommandUI()})},t.resetFormToColumns=function(){requirejs(["text!./../Runtime/src/viewmodel.js","text!./../Runtime/src/viewmodelallcolumns.html"],function(e,n){t.codePanel.modelEditor.setValue(e.toString(),-1),t.codePanel.show(n),t.panelCloseGitPanel(),t.codePanel.save(),t.resetCallback=function(){$(document).find(".ms-Grid-col").each(function(){t.PickerCell=$(this)});var e=t.form()._designComponents();t.InitFields(function(){t.fields().forEach(function(n,o){var i=n.selectedcomp()?n.selectedcomp().Title:"";e.forEach(function(e,o){e.Title==i&&t.placeComponent(t.PickerCell,n,e)})})}),t.resetCallback=null},RefreshCommandUI()})},t.placeComponents=function(){var e=t.form()._designComponents();t.fields().forEach(function(n,o){if(n.selected()){n.selected(!1);var i=void 0==t.fields()[o].selectedcomp()?void 0:t.fields()[o].selectedcomp().Title;e.forEach(function(e,n){e.Title==i&&t.placeComponent(t.PickerCell,t.fields()[o],e)})}}),t.panelComps().forEach(function(e,n){e.selected()&&(e.selected(!1),t.placeComponent(t.PickerCell,null,e))}),window.setTimeout(t.placeComponents2,100)},t.placeComponents2=function(){$(".ms-Grid").first().gridEditor("createCompControls"),void 0!=t.PickerPanel&&($(t.PickerCell).removeClass("ui-state-hover"),t.PickerPanel.dismiss()),t.$updateViewModelCodePanel("placeComponents2! ")},t.placeComponent=function(e,t,n){var o=n.Params;if(t)for(var i in o)t.hasOwnProperty(i)&&(o[i]=t[i].results?t[i].results:t[i]);$(".ms-Grid").first().gridEditor("placeComponent",e,n)},t.Init=function(e){}}return ko.bindingHandlers.initTB={init:function(e,t,n,o,i){o.form(i.$root),o.Init(o.params),o.form().Toolbar=o,window.f_toolbar=o,o.$form.$ribbon&&(o.$form.$ribbon.Toolbar=o,window.setTimeout(function(){RefreshCommandUI()},100)),o.windowOnResize=window.onresize,window.onresize=o.onResize,$(document).on("ribbontabselected",function(e,t){o.actionCheckTemplateTab(o.activeTabCommandId,t),o.activeTabCommandId=t})}},{viewModel:t,template:e}}),define("text!placeholder.html",[],function(){return'<div data-bind="initPH: {}, css: {\'ge-designmode\': form()._formDesignMode}">\r\n	<div class="ms-Pivot  ms-Pivot--large ms-Pivot--tabs">\r\n	  <ul class="ms-Pivot-links">\r\n		<li class="ms-Pivot-link is-selected" data-content="columns" title="Columns" tabindex="1">\r\n		  Columns\r\n		</li>\r\n		<li class="ms-Pivot-link " data-content="components" title="Components" tabindex="1">\r\n		  Components\r\n		</li>\r\n		<li class="ms-Pivot-link" tabindex="1">\r\n		  <i class="ms-Pivot-ellipsis ms-Icon ms-Icon--ellipsis"></i>\r\n		</li>\r\n	  </ul>\r\n	  <div class="ms-Pivot-content" data-content="columns">\r\n		<table class="ms-Table  ms-Table--selectable">\r\n			<thead>\r\n			  <tr>\r\n				<th class="ms-Table-rowCheck"></th>\r\n				<th>Column</th>\r\n				<th>Form Component</th>\r\n			  </tr>\r\n			</thead>\r\n			<tbody data-bind="foreach:{data: fields, as: \'field\'}">\r\n			  <tr>\r\n				<td class="ms-Table-rowCheck"></td>\r\n				<td data-bind="text: field.Title"></td>\r\n				<td>\r\n					<select style="margin-left:10px; margin-right:10px;" data-bind=" \r\n						   options: field.comps,\r\n						   optionsText: \'Title\',\r\n						   value: field.selectedcomp,\r\n						   optionsCaption: \'Select component...\'"></select>\r\n				</td>\r\n			  </tr>\r\n			</tbody>\r\n		</table>\r\n		<button data-bind="click: placeComponents" style="float:right;" class="ms-Button ms-Button--primary"><span class="ms-Button-label">Apply</span></button>\r\n	  </div>\r\n	  <div class="ms-Pivot-content" data-content="components">\r\n		<div class="ms-Table">\r\n			<div class="ms-Table-row">\r\n				<span class="ms-Table-cell" data-bind="text: value"></span>\r\n				<select style="margin-left:10px; margin-right:10px;" data-bind="options: form()._designComponents,\r\n					   optionsText: \'Title\',\r\n					   value: selectedcomponent,\r\n					   optionsCaption: \'Select component...\'"></select>\r\n				<select style="margin-left:10px; margin-right:10px;" data-bind="visible: enableListConnector,\r\n					   options: fields,\r\n					   optionsText: \'Title\',\r\n					   value: selectedfield,\r\n					   optionsCaption: \'Select column...\'"></select>\r\n				<button data-bind="visible: enableApplyButton, click: replaceComponent" style="float:right;" class="ms-Button ms-Button--primary"><span class="ms-Button-label">Apply</span></button>\r\n			</div>\r\n			<div class="ms-Table-row">\r\n			</div>\r\n		</div>\r\n	  </div>\r\n	  <div class="ms-Pivot-content" data-content="shared">\r\n		This is the shared with me tab.\r\n	  </div>\r\n	</div>\r\n	\r\n	\r\n<div class="docs-OverlayExample">\r\n  <div class="ms-Overlay ms-Overlay--dark"></div>\r\n  <button class="ms-Button docs-OverlayExample-button">Show the overlay</button>\r\n</div>\r\n\r\n\r\n\r\n\r\n	\r\n</div>\r\n'}),define("placeholder",["text!./placeholder.html"],function(e){function t(e){var t=this;t.form=ko.observable(),t.params=e,t.index=0,t.value=ko.observable(t.params.label),t.selectedcomponent=ko.observable(),t.fields=ko.observableArray(),t.selectedfield=ko.observable(),t.Init=function(){if(t.form()._formGetFields().done(function(e){var n=t.form()._designComponents();e.forEach(function(e,t){e.selectedcomp=ko.observable(),e.comps=ko.observableArray(),e.selected=ko.observable(!1),e.click=function(){this.selected(!this.selected()),console.log("field selected = "+this.selected())},n.forEach(function(t,n){if(void 0!=t.Connections&&void 0!=t.Connections.ListItem)for(var o=0,i=t.Connections.ListItem.length;i>o;o++)if(e.TypeAsString==t.Connections.ListItem[o]){var r={Title:t.Title};e.comps.push(r),0==o&&e.selectedcomp(r)}})}),t.fields(e),console.log("PLACEHOLDER: "+JSON.stringify(e))}),"object"==typeof fabric){for(var e=document.querySelectorAll(".ms-Pivot"),n=0;n<e.length;n++)new fabric.Pivot(e[n]);for(var o=document.querySelectorAll(".ms-Table"),n=0;n<o.length;n++)new fabric.Table(o[n]);var i=document.querySelector(".docs-OverlayExample"),r=new fabric.Overlay(i.querySelector(".ms-Overlay")),a=i.querySelector(".docs-OverlayExample-button");a.onclick=function(){return r.show(),!1}}},t.enableListConnector=ko.computed(function(){var e=t.selectedcomponent();return void 0==e?!1:"component-column-text"==e.Markup.tag||"component-column-variable"==e.Markup.tag?!0:!1},this),t.enableApplyButton=ko.pureComputed(function(){var e=t.selectedcomponent();return void 0==e?!1:("component-column-text"==e.Markup.tag||"component-column-variable"==e.Markup.tag)&&void 0==t.selectedfield()?!1:!0}),t.createCompControls=function(){$(".ms-Grid").first().gridEditor("createCompControls")},t.placeComponents=function(){},t.replaceComponent=function(){var e=t.selectedfield(),n=t.selectedcomponent();if(t.enableListConnector()){var o=t.schema.Mapping;for(var i in o)if(e.TypeAsString==i){var r=t.form()._designComponents();r.forEach(function(e,t){e.Title==o[i]&&(n=e)}),requirejs([o[i]],function(o){var i=new o.viewModel({}),r=void 0==i.schema?{}:i.schema,a=void 0==r.Params?{}:r.Params,s=void 0==r.Connections?{}:r.Connections;if(void 0!=s.ListItem)for(var l in a)e.hasOwnProperty(l)&&(a[l]=e[l]);n.Params=a,$(".ms-Grid").first().gridEditor("replaceComponent",t.element,n)})}}else requirejs([n.Title],function(o){var i=new o.viewModel({}),r=void 0==i.schema?{}:i.schema,a=void 0==r.Params?{}:r.Params,s=void 0==r.Connections?{}:r.Connections;if(void 0!=s.ListItem)for(var l in a)e.hasOwnProperty(l)&&(a[l]=e[l]);n.Params=a,$(".ms-Grid").first().gridEditor("replaceComponent",t.element,n)})}}return t.prototype.schema={Params:{label:"PLACEHOLDER"},Mapping:{Text:"column-text",Choice:"column-choice",Note:"column-note",Computed:"column-text",Attachments:"attachment",DateTime:"column-datetime",Boolean:"column-checkbox"}},ko.bindingHandlers.initPH={init:function(e,t,n,o,i){o.form(i.$root),o.model=i.$parent,o.Init(o.params),o.element=e.parentElement}},{viewModel:t,template:e}});